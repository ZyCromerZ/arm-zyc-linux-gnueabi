/* This file is auto-generated by opth-gen.awk.  */

#ifndef OPTIONS_H
#define OPTIONS_H

#include "flag-types.h"

#include "config/arm/aarch-common.h"
#include "config/arm/arm-opts.h"

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)
#ifndef GENERATOR_FILE
#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS)
struct GTY(()) gcc_options
#else
struct gcc_options
#endif
{
#endif
#ifdef GENERATOR_FILE
extern enum aarch_function_type aarch_ra_sign_scope;
#else
  enum aarch_function_type x_aarch_ra_sign_scope;
#define aarch_ra_sign_scope global_options.x_aarch_ra_sign_scope
#endif
#ifdef GENERATOR_FILE
extern long arm_stack_protector_guard_offset;
#else
  long x_arm_stack_protector_guard_offset;
#define arm_stack_protector_guard_offset global_options.x_arm_stack_protector_guard_offset
#endif
#ifdef GENERATOR_FILE
extern unsigned aarch_enable_bti;
#else
  unsigned x_aarch_enable_bti;
#define aarch_enable_bti global_options.x_aarch_enable_bti
#endif
#ifdef GENERATOR_FILE
extern bool dump_base_name_prefixed;
#else
  bool x_dump_base_name_prefixed;
#define dump_base_name_prefixed global_options.x_dump_base_name_prefixed
#endif
#ifdef GENERATOR_FILE
extern bool exit_after_options;
#else
  bool x_exit_after_options;
#define exit_after_options global_options.x_exit_after_options
#endif
#ifdef GENERATOR_FILE
extern bool flag_dump_all_passed;
#else
  bool x_flag_dump_all_passed;
#define flag_dump_all_passed global_options.x_flag_dump_all_passed
#endif
#ifdef GENERATOR_FILE
extern bool flag_opts_finished;
#else
  bool x_flag_opts_finished;
#define flag_opts_finished global_options.x_flag_opts_finished
#endif
#ifdef GENERATOR_FILE
extern bool flag_stack_usage_info;
#else
  bool x_flag_stack_usage_info;
#define flag_stack_usage_info global_options.x_flag_stack_usage_info
#endif
#ifdef GENERATOR_FILE
extern bool flag_warn_unused_result;
#else
  bool x_flag_warn_unused_result;
#define flag_warn_unused_result global_options.x_flag_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern bool in_lto_p;
#else
  bool x_in_lto_p;
#define in_lto_p global_options.x_in_lto_p
#endif
#ifdef GENERATOR_FILE
extern char *help_enum_printed;
#else
  char * x_help_enum_printed;
#define help_enum_printed global_options.x_help_enum_printed
#endif
#ifdef GENERATOR_FILE
extern char *help_printed;
#else
  char * x_help_printed;
#define help_printed global_options.x_help_printed
#endif
#ifdef GENERATOR_FILE
extern const char *aux_base_name;
#else
  const char * x_aux_base_name;
#define aux_base_name global_options.x_aux_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_basename;
#else
  const char * x_main_input_basename;
#define main_input_basename global_options.x_main_input_basename
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_filename;
#else
  const char * x_main_input_filename;
#define main_input_filename global_options.x_main_input_filename
#endif
#ifdef GENERATOR_FILE
extern enum ctf_debug_info_levels ctf_debug_info_level;
#else
  enum ctf_debug_info_levels x_ctf_debug_info_level;
#define ctf_debug_info_level global_options.x_ctf_debug_info_level
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_levels debug_info_level;
#else
  enum debug_info_levels x_debug_info_level;
#define debug_info_level global_options.x_debug_info_level
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_generic global_options.x_debug_struct_generic
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_ordinary global_options.x_debug_struct_ordinary
#endif
#ifdef GENERATOR_FILE
extern enum dwarf_gnat_encodings gnat_encodings;
#else
  enum dwarf_gnat_encodings x_gnat_encodings;
#define gnat_encodings global_options.x_gnat_encodings
#endif
#ifdef GENERATOR_FILE
extern enum incremental_link flag_incremental_link;
#else
  enum incremental_link x_flag_incremental_link;
#define flag_incremental_link global_options.x_flag_incremental_link
#endif
#ifdef GENERATOR_FILE
extern enum stack_check_type flag_stack_check;
#else
  enum stack_check_type x_flag_stack_check;
#define flag_stack_check global_options.x_flag_stack_check
#endif
#ifdef GENERATOR_FILE
extern int flag_complex_method;
#else
  int x_flag_complex_method;
#define flag_complex_method global_options.x_flag_complex_method
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_asm;
#else
  int x_flag_debug_asm;
#define flag_debug_asm global_options.x_flag_debug_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_default_complex_method;
#else
  int x_flag_default_complex_method;
#define flag_default_complex_method global_options.x_flag_default_complex_method
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_rtl_in_asm;
#else
  int x_flag_dump_rtl_in_asm;
#define flag_dump_rtl_in_asm global_options.x_flag_dump_rtl_in_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_aux_info;
#else
  int x_flag_gen_aux_info;
#define flag_gen_aux_info global_options.x_flag_gen_aux_info
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_lto;
#else
  int x_flag_generate_lto;
#define flag_generate_lto global_options.x_flag_generate_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_offload;
#else
  int x_flag_generate_offload;
#define flag_generate_offload global_options.x_flag_generate_offload
#endif
#ifdef GENERATOR_FILE
extern int flag_print_asm_name;
#else
  int x_flag_print_asm_name;
#define flag_print_asm_name global_options.x_flag_print_asm_name
#endif
#ifdef GENERATOR_FILE
extern int flag_shlib;
#else
  int x_flag_shlib;
#define flag_shlib global_options.x_flag_shlib
#endif
#ifdef GENERATOR_FILE
extern int main_input_baselength;
#else
  int x_main_input_baselength;
#define main_input_baselength global_options.x_main_input_baselength
#endif
#ifdef GENERATOR_FILE
extern int optimize;
#else
  int x_optimize;
#define optimize global_options.x_optimize
#endif
#ifdef GENERATOR_FILE
extern int optimize_debug;
#else
  int x_optimize_debug;
#define optimize_debug global_options.x_optimize_debug
#endif
#ifdef GENERATOR_FILE
extern int optimize_fast;
#else
  int x_optimize_fast;
#define optimize_fast global_options.x_optimize_fast
#endif
#ifdef GENERATOR_FILE
extern int optimize_size;
#else
  int x_optimize_size;
#define optimize_size global_options.x_optimize_size
#endif
#ifdef GENERATOR_FILE
extern int rtl_dump_and_exit;
#else
  int x_rtl_dump_and_exit;
#define rtl_dump_and_exit global_options.x_rtl_dump_and_exit
#endif
#ifdef GENERATOR_FILE
extern int target_flags;
#else
  int x_target_flags;
#define target_flags global_options.x_target_flags
#endif
#ifdef GENERATOR_FILE
extern uint32_t write_symbols;
#else
  uint32_t x_write_symbols;
#define write_symbols global_options.x_write_symbols
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize;
#else
  unsigned int x_flag_sanitize;
#define flag_sanitize global_options.x_flag_sanitize
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize_recover;
#else
  unsigned int x_flag_sanitize_recover;
#define flag_sanitize_recover global_options.x_flag_sanitize_recover
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize_trap;
#else
  unsigned int x_flag_sanitize_trap;
#define flag_sanitize_trap global_options.x_flag_sanitize_trap
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_zero_call_used_regs;
#else
  unsigned int x_flag_zero_call_used_regs;
#define flag_zero_call_used_regs global_options.x_flag_zero_call_used_regs
#endif
#ifdef GENERATOR_FILE
extern unsigned int help_columns;
#else
  unsigned int x_help_columns;
#define help_columns global_options.x_help_columns
#endif
#ifdef GENERATOR_FILE
extern unsigned int initial_max_fld_align;
#else
  unsigned int x_initial_max_fld_align;
#define initial_max_fld_align global_options.x_initial_max_fld_align
#endif
#ifdef GENERATOR_FILE
extern void *flag_ignored_attributes;
#else
  void * x_flag_ignored_attributes;
#define flag_ignored_attributes global_options.x_flag_ignored_attributes
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_files;
#else
  void * x_flag_instrument_functions_exclude_files;
#define flag_instrument_functions_exclude_files global_options.x_flag_instrument_functions_exclude_files
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_functions;
#else
  void * x_flag_instrument_functions_exclude_functions;
#define flag_instrument_functions_exclude_functions global_options.x_flag_instrument_functions_exclude_functions
#endif
#ifdef GENERATOR_FILE
extern int help_flag;
#else
  int x_help_flag;
#define help_flag global_options.x_help_flag
#endif
#ifdef GENERATOR_FILE
extern int no_sysroot_suffix;
#else
  int x_no_sysroot_suffix;
#define no_sysroot_suffix global_options.x_no_sysroot_suffix
#endif
#ifdef GENERATOR_FILE
extern int param_align_loop_iterations;
#else
  int x_param_align_loop_iterations;
#define param_align_loop_iterations global_options.x_param_align_loop_iterations
#endif
#ifdef GENERATOR_FILE
extern int param_align_threshold;
#else
  int x_param_align_threshold;
#define param_align_threshold global_options.x_param_align_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_bb_explosion_factor;
#else
  int x_param_analyzer_bb_explosion_factor;
#define param_analyzer_bb_explosion_factor global_options.x_param_analyzer_bb_explosion_factor
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_max_constraints;
#else
  int x_param_analyzer_max_constraints;
#define param_analyzer_max_constraints global_options.x_param_analyzer_max_constraints
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_max_enodes_for_full_dump;
#else
  int x_param_analyzer_max_enodes_for_full_dump;
#define param_analyzer_max_enodes_for_full_dump global_options.x_param_analyzer_max_enodes_for_full_dump
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_max_enodes_per_program_point;
#else
  int x_param_analyzer_max_enodes_per_program_point;
#define param_analyzer_max_enodes_per_program_point global_options.x_param_analyzer_max_enodes_per_program_point
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_max_infeasible_edges;
#else
  int x_param_analyzer_max_infeasible_edges;
#define param_analyzer_max_infeasible_edges global_options.x_param_analyzer_max_infeasible_edges
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_max_recursion_depth;
#else
  int x_param_analyzer_max_recursion_depth;
#define param_analyzer_max_recursion_depth global_options.x_param_analyzer_max_recursion_depth
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_max_svalue_depth;
#else
  int x_param_analyzer_max_svalue_depth;
#define param_analyzer_max_svalue_depth global_options.x_param_analyzer_max_svalue_depth
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_min_snodes_for_call_summary;
#else
  int x_param_analyzer_min_snodes_for_call_summary;
#define param_analyzer_min_snodes_for_call_summary global_options.x_param_analyzer_min_snodes_for_call_summary
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_text_art_ideal_canvas_width;
#else
  int x_param_analyzer_text_art_ideal_canvas_width;
#define param_analyzer_text_art_ideal_canvas_width global_options.x_param_analyzer_text_art_ideal_canvas_width
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_text_art_string_ellipsis_head_len;
#else
  int x_param_analyzer_text_art_string_ellipsis_head_len;
#define param_analyzer_text_art_string_ellipsis_head_len global_options.x_param_analyzer_text_art_string_ellipsis_head_len
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_text_art_string_ellipsis_tail_len;
#else
  int x_param_analyzer_text_art_string_ellipsis_tail_len;
#define param_analyzer_text_art_string_ellipsis_tail_len global_options.x_param_analyzer_text_art_string_ellipsis_tail_len
#endif
#ifdef GENERATOR_FILE
extern int param_analyzer_text_art_string_ellipsis_threshold;
#else
  int x_param_analyzer_text_art_string_ellipsis_threshold;
#define param_analyzer_text_art_string_ellipsis_threshold global_options.x_param_analyzer_text_art_string_ellipsis_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_asan_globals;
#else
  int x_param_asan_globals;
#define param_asan_globals global_options.x_param_asan_globals
#endif
#ifdef GENERATOR_FILE
extern int param_asan_protect_allocas;
#else
  int x_param_asan_protect_allocas;
#define param_asan_protect_allocas global_options.x_param_asan_protect_allocas
#endif
#ifdef GENERATOR_FILE
extern int param_asan_instrument_reads;
#else
  int x_param_asan_instrument_reads;
#define param_asan_instrument_reads global_options.x_param_asan_instrument_reads
#endif
#ifdef GENERATOR_FILE
extern int param_asan_instrument_writes;
#else
  int x_param_asan_instrument_writes;
#define param_asan_instrument_writes global_options.x_param_asan_instrument_writes
#endif
#ifdef GENERATOR_FILE
extern int param_asan_instrumentation_with_call_threshold;
#else
  int x_param_asan_instrumentation_with_call_threshold;
#define param_asan_instrumentation_with_call_threshold global_options.x_param_asan_instrumentation_with_call_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_asan_kernel_mem_intrinsic_prefix;
#else
  int x_param_asan_kernel_mem_intrinsic_prefix;
#define param_asan_kernel_mem_intrinsic_prefix global_options.x_param_asan_kernel_mem_intrinsic_prefix
#endif
#ifdef GENERATOR_FILE
extern int param_asan_memintrin;
#else
  int x_param_asan_memintrin;
#define param_asan_memintrin global_options.x_param_asan_memintrin
#endif
#ifdef GENERATOR_FILE
extern int param_asan_stack;
#else
  int x_param_asan_stack;
#define param_asan_stack global_options.x_param_asan_stack
#endif
#ifdef GENERATOR_FILE
extern int param_asan_use_after_return;
#else
  int x_param_asan_use_after_return;
#define param_asan_use_after_return global_options.x_param_asan_use_after_return
#endif
#ifdef GENERATOR_FILE
extern int param_avg_loop_niter;
#else
  int x_param_avg_loop_niter;
#define param_avg_loop_niter global_options.x_param_avg_loop_niter
#endif
#ifdef GENERATOR_FILE
extern int param_avoid_fma_max_bits;
#else
  int x_param_avoid_fma_max_bits;
#define param_avoid_fma_max_bits global_options.x_param_avoid_fma_max_bits
#endif
#ifdef GENERATOR_FILE
extern int param_builtin_expect_probability;
#else
  int x_param_builtin_expect_probability;
#define param_builtin_expect_probability global_options.x_param_builtin_expect_probability
#endif
#ifdef GENERATOR_FILE
extern int param_builtin_string_cmp_inline_length;
#else
  int x_param_builtin_string_cmp_inline_length;
#define param_builtin_string_cmp_inline_length global_options.x_param_builtin_string_cmp_inline_length
#endif
#ifdef GENERATOR_FILE
extern int param_case_values_threshold;
#else
  int x_param_case_values_threshold;
#define param_case_values_threshold global_options.x_param_case_values_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_comdat_sharing_probability;
#else
  int x_param_comdat_sharing_probability;
#define param_comdat_sharing_probability global_options.x_param_comdat_sharing_probability
#endif
#ifdef GENERATOR_FILE
extern int param_construct_interfere_size;
#else
  int x_param_construct_interfere_size;
#define param_construct_interfere_size global_options.x_param_construct_interfere_size
#endif
#ifdef GENERATOR_FILE
extern int param_cxx_max_namespaces_for_diagnostic_help;
#else
  int x_param_cxx_max_namespaces_for_diagnostic_help;
#define param_cxx_max_namespaces_for_diagnostic_help global_options.x_param_cxx_max_namespaces_for_diagnostic_help
#endif
#ifdef GENERATOR_FILE
extern int param_destruct_interfere_size;
#else
  int x_param_destruct_interfere_size;
#define param_destruct_interfere_size global_options.x_param_destruct_interfere_size
#endif
#ifdef GENERATOR_FILE
extern int param_dse_max_alias_queries_per_store;
#else
  int x_param_dse_max_alias_queries_per_store;
#define param_dse_max_alias_queries_per_store global_options.x_param_dse_max_alias_queries_per_store
#endif
#ifdef GENERATOR_FILE
extern int param_dse_max_object_size;
#else
  int x_param_dse_max_object_size;
#define param_dse_max_object_size global_options.x_param_dse_max_object_size
#endif
#ifdef GENERATOR_FILE
extern int param_early_inlining_insns;
#else
  int x_param_early_inlining_insns;
#define param_early_inlining_insns global_options.x_param_early_inlining_insns
#endif
#ifdef GENERATOR_FILE
extern int param_fsm_scale_path_stmts;
#else
  int x_param_fsm_scale_path_stmts;
#define param_fsm_scale_path_stmts global_options.x_param_fsm_scale_path_stmts
#endif
#ifdef GENERATOR_FILE
extern int param_fully_pipelined_fma;
#else
  int x_param_fully_pipelined_fma;
#define param_fully_pipelined_fma global_options.x_param_fully_pipelined_fma
#endif
#ifdef GENERATOR_FILE
extern int param_gcse_after_reload_critical_fraction;
#else
  int x_param_gcse_after_reload_critical_fraction;
#define param_gcse_after_reload_critical_fraction global_options.x_param_gcse_after_reload_critical_fraction
#endif
#ifdef GENERATOR_FILE
extern int param_gcse_after_reload_partial_fraction;
#else
  int x_param_gcse_after_reload_partial_fraction;
#define param_gcse_after_reload_partial_fraction global_options.x_param_gcse_after_reload_partial_fraction
#endif
#ifdef GENERATOR_FILE
extern int param_gcse_cost_distance_ratio;
#else
  int x_param_gcse_cost_distance_ratio;
#define param_gcse_cost_distance_ratio global_options.x_param_gcse_cost_distance_ratio
#endif
#ifdef GENERATOR_FILE
extern int param_gcse_unrestricted_cost;
#else
  int x_param_gcse_unrestricted_cost;
#define param_gcse_unrestricted_cost global_options.x_param_gcse_unrestricted_cost
#endif
#ifdef GENERATOR_FILE
extern int param_ggc_min_expand;
#else
  int x_param_ggc_min_expand;
#define param_ggc_min_expand global_options.x_param_ggc_min_expand
#endif
#ifdef GENERATOR_FILE
extern int param_ggc_min_heapsize;
#else
  int x_param_ggc_min_heapsize;
#define param_ggc_min_heapsize global_options.x_param_ggc_min_heapsize
#endif
#ifdef GENERATOR_FILE
extern int param_gimple_fe_computed_hot_bb_threshold;
#else
  int x_param_gimple_fe_computed_hot_bb_threshold;
#define param_gimple_fe_computed_hot_bb_threshold global_options.x_param_gimple_fe_computed_hot_bb_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_graphite_allow_codegen_errors;
#else
  int x_param_graphite_allow_codegen_errors;
#define param_graphite_allow_codegen_errors global_options.x_param_graphite_allow_codegen_errors
#endif
#ifdef GENERATOR_FILE
extern int param_graphite_max_arrays_per_scop;
#else
  int x_param_graphite_max_arrays_per_scop;
#define param_graphite_max_arrays_per_scop global_options.x_param_graphite_max_arrays_per_scop
#endif
#ifdef GENERATOR_FILE
extern int param_graphite_max_nb_scop_params;
#else
  int x_param_graphite_max_nb_scop_params;
#define param_graphite_max_nb_scop_params global_options.x_param_graphite_max_nb_scop_params
#endif
#ifdef GENERATOR_FILE
extern int param_hardcfr_max_blocks;
#else
  int x_param_hardcfr_max_blocks;
#define param_hardcfr_max_blocks global_options.x_param_hardcfr_max_blocks
#endif
#ifdef GENERATOR_FILE
extern int param_hardcfr_max_inline_blocks;
#else
  int x_param_hardcfr_max_inline_blocks;
#define param_hardcfr_max_inline_blocks global_options.x_param_hardcfr_max_inline_blocks
#endif
#ifdef GENERATOR_FILE
extern int param_hash_table_verification_limit;
#else
  int x_param_hash_table_verification_limit;
#define param_hash_table_verification_limit global_options.x_param_hash_table_verification_limit
#endif
#ifdef GENERATOR_FILE
extern int param_hot_bb_count_fraction;
#else
  int x_param_hot_bb_count_fraction;
#define param_hot_bb_count_fraction global_options.x_param_hot_bb_count_fraction
#endif
#ifdef GENERATOR_FILE
extern int param_hot_bb_count_ws_permille;
#else
  int x_param_hot_bb_count_ws_permille;
#define param_hot_bb_count_ws_permille global_options.x_param_hot_bb_count_ws_permille
#endif
#ifdef GENERATOR_FILE
extern int param_hot_bb_frequency_fraction;
#else
  int x_param_hot_bb_frequency_fraction;
#define param_hot_bb_frequency_fraction global_options.x_param_hot_bb_frequency_fraction
#endif
#ifdef GENERATOR_FILE
extern int param_hwasan_instrument_allocas;
#else
  int x_param_hwasan_instrument_allocas;
#define param_hwasan_instrument_allocas global_options.x_param_hwasan_instrument_allocas
#endif
#ifdef GENERATOR_FILE
extern int param_hwasan_instrument_mem_intrinsics;
#else
  int x_param_hwasan_instrument_mem_intrinsics;
#define param_hwasan_instrument_mem_intrinsics global_options.x_param_hwasan_instrument_mem_intrinsics
#endif
#ifdef GENERATOR_FILE
extern int param_hwasan_instrument_reads;
#else
  int x_param_hwasan_instrument_reads;
#define param_hwasan_instrument_reads global_options.x_param_hwasan_instrument_reads
#endif
#ifdef GENERATOR_FILE
extern int param_hwasan_instrument_stack;
#else
  int x_param_hwasan_instrument_stack;
#define param_hwasan_instrument_stack global_options.x_param_hwasan_instrument_stack
#endif
#ifdef GENERATOR_FILE
extern int param_hwasan_instrument_writes;
#else
  int x_param_hwasan_instrument_writes;
#define param_hwasan_instrument_writes global_options.x_param_hwasan_instrument_writes
#endif
#ifdef GENERATOR_FILE
extern int param_hwasan_random_frame_tag;
#else
  int x_param_hwasan_random_frame_tag;
#define param_hwasan_random_frame_tag global_options.x_param_hwasan_random_frame_tag
#endif
#ifdef GENERATOR_FILE
extern int param_inline_heuristics_hint_percent;
#else
  int x_param_inline_heuristics_hint_percent;
#define param_inline_heuristics_hint_percent global_options.x_param_inline_heuristics_hint_percent
#endif
#ifdef GENERATOR_FILE
extern int param_inline_min_speedup;
#else
  int x_param_inline_min_speedup;
#define param_inline_min_speedup global_options.x_param_inline_min_speedup
#endif
#ifdef GENERATOR_FILE
extern int param_inline_unit_growth;
#else
  int x_param_inline_unit_growth;
#define param_inline_unit_growth global_options.x_param_inline_unit_growth
#endif
#ifdef GENERATOR_FILE
extern int param_integer_share_limit;
#else
  int x_param_integer_share_limit;
#define param_integer_share_limit global_options.x_param_integer_share_limit
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_eval_threshold;
#else
  int x_param_ipa_cp_eval_threshold;
#define param_ipa_cp_eval_threshold global_options.x_param_ipa_cp_eval_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_large_unit_insns;
#else
  int x_param_ipa_cp_large_unit_insns;
#define param_ipa_cp_large_unit_insns global_options.x_param_ipa_cp_large_unit_insns
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_loop_hint_bonus;
#else
  int x_param_ipa_cp_loop_hint_bonus;
#define param_ipa_cp_loop_hint_bonus global_options.x_param_ipa_cp_loop_hint_bonus
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_max_recursive_depth;
#else
  int x_param_ipa_cp_max_recursive_depth;
#define param_ipa_cp_max_recursive_depth global_options.x_param_ipa_cp_max_recursive_depth
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_min_recursive_probability;
#else
  int x_param_ipa_cp_min_recursive_probability;
#define param_ipa_cp_min_recursive_probability global_options.x_param_ipa_cp_min_recursive_probability
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_profile_count_base;
#else
  int x_param_ipa_cp_profile_count_base;
#define param_ipa_cp_profile_count_base global_options.x_param_ipa_cp_profile_count_base
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_recursion_penalty;
#else
  int x_param_ipa_cp_recursion_penalty;
#define param_ipa_cp_recursion_penalty global_options.x_param_ipa_cp_recursion_penalty
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_recursive_freq_factor;
#else
  int x_param_ipa_cp_recursive_freq_factor;
#define param_ipa_cp_recursive_freq_factor global_options.x_param_ipa_cp_recursive_freq_factor
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_single_call_penalty;
#else
  int x_param_ipa_cp_single_call_penalty;
#define param_ipa_cp_single_call_penalty global_options.x_param_ipa_cp_single_call_penalty
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_unit_growth;
#else
  int x_param_ipa_cp_unit_growth;
#define param_ipa_cp_unit_growth global_options.x_param_ipa_cp_unit_growth
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_cp_value_list_size;
#else
  int x_param_ipa_cp_value_list_size;
#define param_ipa_cp_value_list_size global_options.x_param_ipa_cp_value_list_size
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_jump_function_lookups;
#else
  int x_param_ipa_jump_function_lookups;
#define param_ipa_jump_function_lookups global_options.x_param_ipa_jump_function_lookups
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_max_aa_steps;
#else
  int x_param_ipa_max_aa_steps;
#define param_ipa_max_aa_steps global_options.x_param_ipa_max_aa_steps
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_max_agg_items;
#else
  int x_param_ipa_max_agg_items;
#define param_ipa_max_agg_items global_options.x_param_ipa_max_agg_items
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_max_loop_predicates;
#else
  int x_param_ipa_max_loop_predicates;
#define param_ipa_max_loop_predicates global_options.x_param_ipa_max_loop_predicates
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_max_param_expr_ops;
#else
  int x_param_ipa_max_param_expr_ops;
#define param_ipa_max_param_expr_ops global_options.x_param_ipa_max_param_expr_ops
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_max_switch_predicate_bounds;
#else
  int x_param_ipa_max_switch_predicate_bounds;
#define param_ipa_max_switch_predicate_bounds global_options.x_param_ipa_max_switch_predicate_bounds
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_sra_deref_prob_threshold;
#else
  int x_param_ipa_sra_deref_prob_threshold;
#define param_ipa_sra_deref_prob_threshold global_options.x_param_ipa_sra_deref_prob_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_sra_max_replacements;
#else
  int x_param_ipa_sra_max_replacements;
#define param_ipa_sra_max_replacements global_options.x_param_ipa_sra_max_replacements
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_sra_ptr_growth_factor;
#else
  int x_param_ipa_sra_ptr_growth_factor;
#define param_ipa_sra_ptr_growth_factor global_options.x_param_ipa_sra_ptr_growth_factor
#endif
#ifdef GENERATOR_FILE
extern int param_ipa_sra_ptrwrap_growth_factor;
#else
  int x_param_ipa_sra_ptrwrap_growth_factor;
#define param_ipa_sra_ptrwrap_growth_factor global_options.x_param_ipa_sra_ptrwrap_growth_factor
#endif
#ifdef GENERATOR_FILE
extern int param_ira_consider_dup_in_all_alts;
#else
  int x_param_ira_consider_dup_in_all_alts;
#define param_ira_consider_dup_in_all_alts global_options.x_param_ira_consider_dup_in_all_alts
#endif
#ifdef GENERATOR_FILE
extern int param_ira_loop_reserved_regs;
#else
  int x_param_ira_loop_reserved_regs;
#define param_ira_loop_reserved_regs global_options.x_param_ira_loop_reserved_regs
#endif
#ifdef GENERATOR_FILE
extern int param_ira_max_conflict_table_size;
#else
  int x_param_ira_max_conflict_table_size;
#define param_ira_max_conflict_table_size global_options.x_param_ira_max_conflict_table_size
#endif
#ifdef GENERATOR_FILE
extern int param_ira_max_loops_num;
#else
  int x_param_ira_max_loops_num;
#define param_ira_max_loops_num global_options.x_param_ira_max_loops_num
#endif
#ifdef GENERATOR_FILE
extern int param_ira_simple_lra_insn_threshold;
#else
  int x_param_ira_simple_lra_insn_threshold;
#define param_ira_simple_lra_insn_threshold global_options.x_param_ira_simple_lra_insn_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_iv_always_prune_cand_set_bound;
#else
  int x_param_iv_always_prune_cand_set_bound;
#define param_iv_always_prune_cand_set_bound global_options.x_param_iv_always_prune_cand_set_bound
#endif
#ifdef GENERATOR_FILE
extern int param_iv_consider_all_candidates_bound;
#else
  int x_param_iv_consider_all_candidates_bound;
#define param_iv_consider_all_candidates_bound global_options.x_param_iv_consider_all_candidates_bound
#endif
#ifdef GENERATOR_FILE
extern int param_iv_max_considered_uses;
#else
  int x_param_iv_max_considered_uses;
#define param_iv_max_considered_uses global_options.x_param_iv_max_considered_uses
#endif
#ifdef GENERATOR_FILE
extern int param_jump_table_max_growth_ratio_for_size;
#else
  int x_param_jump_table_max_growth_ratio_for_size;
#define param_jump_table_max_growth_ratio_for_size global_options.x_param_jump_table_max_growth_ratio_for_size
#endif
#ifdef GENERATOR_FILE
extern int param_jump_table_max_growth_ratio_for_speed;
#else
  int x_param_jump_table_max_growth_ratio_for_speed;
#define param_jump_table_max_growth_ratio_for_speed global_options.x_param_jump_table_max_growth_ratio_for_speed
#endif
#ifdef GENERATOR_FILE
extern int param_l1_cache_line_size;
#else
  int x_param_l1_cache_line_size;
#define param_l1_cache_line_size global_options.x_param_l1_cache_line_size
#endif
#ifdef GENERATOR_FILE
extern int param_l1_cache_size;
#else
  int x_param_l1_cache_size;
#define param_l1_cache_size global_options.x_param_l1_cache_size
#endif
#ifdef GENERATOR_FILE
extern int param_l2_cache_size;
#else
  int x_param_l2_cache_size;
#define param_l2_cache_size global_options.x_param_l2_cache_size
#endif
#ifdef GENERATOR_FILE
extern int param_large_function_growth;
#else
  int x_param_large_function_growth;
#define param_large_function_growth global_options.x_param_large_function_growth
#endif
#ifdef GENERATOR_FILE
extern int param_large_function_insns;
#else
  int x_param_large_function_insns;
#define param_large_function_insns global_options.x_param_large_function_insns
#endif
#ifdef GENERATOR_FILE
extern int param_stack_frame_growth;
#else
  int x_param_stack_frame_growth;
#define param_stack_frame_growth global_options.x_param_stack_frame_growth
#endif
#ifdef GENERATOR_FILE
extern int param_large_stack_frame;
#else
  int x_param_large_stack_frame;
#define param_large_stack_frame global_options.x_param_large_stack_frame
#endif
#ifdef GENERATOR_FILE
extern int param_large_unit_insns;
#else
  int x_param_large_unit_insns;
#define param_large_unit_insns global_options.x_param_large_unit_insns
#endif
#ifdef GENERATOR_FILE
extern int param_lazy_modules;
#else
  int x_param_lazy_modules;
#define param_lazy_modules global_options.x_param_lazy_modules
#endif
#ifdef GENERATOR_FILE
extern int param_lim_expensive;
#else
  int x_param_lim_expensive;
#define param_lim_expensive global_options.x_param_lim_expensive
#endif
#ifdef GENERATOR_FILE
extern int param_logical_op_non_short_circuit;
#else
  int x_param_logical_op_non_short_circuit;
#define param_logical_op_non_short_circuit global_options.x_param_logical_op_non_short_circuit
#endif
#ifdef GENERATOR_FILE
extern int param_loop_block_tile_size;
#else
  int x_param_loop_block_tile_size;
#define param_loop_block_tile_size global_options.x_param_loop_block_tile_size
#endif
#ifdef GENERATOR_FILE
extern int param_loop_interchange_max_num_stmts;
#else
  int x_param_loop_interchange_max_num_stmts;
#define param_loop_interchange_max_num_stmts global_options.x_param_loop_interchange_max_num_stmts
#endif
#ifdef GENERATOR_FILE
extern int param_loop_interchange_stride_ratio;
#else
  int x_param_loop_interchange_stride_ratio;
#define param_loop_interchange_stride_ratio global_options.x_param_loop_interchange_stride_ratio
#endif
#ifdef GENERATOR_FILE
extern int param_loop_invariant_max_bbs_in_loop;
#else
  int x_param_loop_invariant_max_bbs_in_loop;
#define param_loop_invariant_max_bbs_in_loop global_options.x_param_loop_invariant_max_bbs_in_loop
#endif
#ifdef GENERATOR_FILE
extern int param_loop_max_datarefs_for_datadeps;
#else
  int x_param_loop_max_datarefs_for_datadeps;
#define param_loop_max_datarefs_for_datadeps global_options.x_param_loop_max_datarefs_for_datadeps
#endif
#ifdef GENERATOR_FILE
extern int param_loop_versioning_max_inner_insns;
#else
  int x_param_loop_versioning_max_inner_insns;
#define param_loop_versioning_max_inner_insns global_options.x_param_loop_versioning_max_inner_insns
#endif
#ifdef GENERATOR_FILE
extern int param_loop_versioning_max_outer_insns;
#else
  int x_param_loop_versioning_max_outer_insns;
#define param_loop_versioning_max_outer_insns global_options.x_param_loop_versioning_max_outer_insns
#endif
#ifdef GENERATOR_FILE
extern int param_lra_inheritance_ebb_probability_cutoff;
#else
  int x_param_lra_inheritance_ebb_probability_cutoff;
#define param_lra_inheritance_ebb_probability_cutoff global_options.x_param_lra_inheritance_ebb_probability_cutoff
#endif
#ifdef GENERATOR_FILE
extern int param_lra_max_considered_reload_pseudos;
#else
  int x_param_lra_max_considered_reload_pseudos;
#define param_lra_max_considered_reload_pseudos global_options.x_param_lra_max_considered_reload_pseudos
#endif
#ifdef GENERATOR_FILE
extern int param_max_partition_size;
#else
  int x_param_max_partition_size;
#define param_max_partition_size global_options.x_param_max_partition_size
#endif
#ifdef GENERATOR_FILE
extern int param_max_lto_streaming_parallelism;
#else
  int x_param_max_lto_streaming_parallelism;
#define param_max_lto_streaming_parallelism global_options.x_param_max_lto_streaming_parallelism
#endif
#ifdef GENERATOR_FILE
extern int param_min_partition_size;
#else
  int x_param_min_partition_size;
#define param_min_partition_size global_options.x_param_min_partition_size
#endif
#ifdef GENERATOR_FILE
extern int param_lto_partitions;
#else
  int x_param_lto_partitions;
#define param_lto_partitions global_options.x_param_lto_partitions
#endif
#ifdef GENERATOR_FILE
extern int param_max_average_unrolled_insns;
#else
  int x_param_max_average_unrolled_insns;
#define param_max_average_unrolled_insns global_options.x_param_max_average_unrolled_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_combine_insns;
#else
  int x_param_max_combine_insns;
#define param_max_combine_insns global_options.x_param_max_combine_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_unroll_iterations;
#else
  int x_param_max_unroll_iterations;
#define param_max_unroll_iterations global_options.x_param_max_unroll_iterations
#endif
#ifdef GENERATOR_FILE
extern int param_max_completely_peel_times;
#else
  int x_param_max_completely_peel_times;
#define param_max_completely_peel_times global_options.x_param_max_completely_peel_times
#endif
#ifdef GENERATOR_FILE
extern int param_max_completely_peeled_insns;
#else
  int x_param_max_completely_peeled_insns;
#define param_max_completely_peeled_insns global_options.x_param_max_completely_peeled_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_crossjump_edges;
#else
  int x_param_max_crossjump_edges;
#define param_max_crossjump_edges global_options.x_param_max_crossjump_edges
#endif
#ifdef GENERATOR_FILE
extern int param_max_cse_insns;
#else
  int x_param_max_cse_insns;
#define param_max_cse_insns global_options.x_param_max_cse_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_cse_path_length;
#else
  int x_param_max_cse_path_length;
#define param_max_cse_path_length global_options.x_param_max_cse_path_length
#endif
#ifdef GENERATOR_FILE
extern int param_max_cselib_memory_locations;
#else
  int x_param_max_cselib_memory_locations;
#define param_max_cselib_memory_locations global_options.x_param_max_cselib_memory_locations
#endif
#ifdef GENERATOR_FILE
extern int param_max_debug_marker_count;
#else
  int x_param_max_debug_marker_count;
#define param_max_debug_marker_count global_options.x_param_max_debug_marker_count
#endif
#ifdef GENERATOR_FILE
extern int param_max_delay_slot_insn_search;
#else
  int x_param_max_delay_slot_insn_search;
#define param_max_delay_slot_insn_search global_options.x_param_max_delay_slot_insn_search
#endif
#ifdef GENERATOR_FILE
extern int param_max_delay_slot_live_search;
#else
  int x_param_max_delay_slot_live_search;
#define param_max_delay_slot_live_search global_options.x_param_max_delay_slot_live_search
#endif
#ifdef GENERATOR_FILE
extern int param_max_dse_active_local_stores;
#else
  int x_param_max_dse_active_local_stores;
#define param_max_dse_active_local_stores global_options.x_param_max_dse_active_local_stores
#endif
#ifdef GENERATOR_FILE
extern int param_early_inliner_max_iterations;
#else
  int x_param_early_inliner_max_iterations;
#define param_early_inliner_max_iterations global_options.x_param_early_inliner_max_iterations
#endif
#ifdef GENERATOR_FILE
extern int param_max_fields_for_field_sensitive;
#else
  int x_param_max_fields_for_field_sensitive;
#define param_max_fields_for_field_sensitive global_options.x_param_max_fields_for_field_sensitive
#endif
#ifdef GENERATOR_FILE
extern int param_max_find_base_term_values;
#else
  int x_param_max_find_base_term_values;
#define param_max_find_base_term_values global_options.x_param_max_find_base_term_values
#endif
#ifdef GENERATOR_FILE
extern int param_max_fsm_thread_path_insns;
#else
  int x_param_max_fsm_thread_path_insns;
#define param_max_fsm_thread_path_insns global_options.x_param_max_fsm_thread_path_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_gcse_insertion_ratio;
#else
  int x_param_max_gcse_insertion_ratio;
#define param_max_gcse_insertion_ratio global_options.x_param_max_gcse_insertion_ratio
#endif
#ifdef GENERATOR_FILE
extern int param_max_gcse_memory;
#else
  int x_param_max_gcse_memory;
#define param_max_gcse_memory global_options.x_param_max_gcse_memory
#endif
#ifdef GENERATOR_FILE
extern int param_max_goto_duplication_insns;
#else
  int x_param_max_goto_duplication_insns;
#define param_max_goto_duplication_insns global_options.x_param_max_goto_duplication_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_grow_copy_bb_insns;
#else
  int x_param_max_grow_copy_bb_insns;
#define param_max_grow_copy_bb_insns global_options.x_param_max_grow_copy_bb_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_hoist_depth;
#else
  int x_param_max_hoist_depth;
#define param_max_hoist_depth global_options.x_param_max_hoist_depth
#endif
#ifdef GENERATOR_FILE
extern int param_inline_functions_called_once_insns;
#else
  int x_param_inline_functions_called_once_insns;
#define param_inline_functions_called_once_insns global_options.x_param_inline_functions_called_once_insns
#endif
#ifdef GENERATOR_FILE
extern int param_inline_functions_called_once_loop_depth;
#else
  int x_param_inline_functions_called_once_loop_depth;
#define param_inline_functions_called_once_loop_depth global_options.x_param_inline_functions_called_once_loop_depth
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_insns_auto;
#else
  int x_param_max_inline_insns_auto;
#define param_max_inline_insns_auto global_options.x_param_max_inline_insns_auto
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_insns_recursive_auto;
#else
  int x_param_max_inline_insns_recursive_auto;
#define param_max_inline_insns_recursive_auto global_options.x_param_max_inline_insns_recursive_auto
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_insns_recursive;
#else
  int x_param_max_inline_insns_recursive;
#define param_max_inline_insns_recursive global_options.x_param_max_inline_insns_recursive
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_insns_single;
#else
  int x_param_max_inline_insns_single;
#define param_max_inline_insns_single global_options.x_param_max_inline_insns_single
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_insns_size;
#else
  int x_param_max_inline_insns_size;
#define param_max_inline_insns_size global_options.x_param_max_inline_insns_size
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_insns_small;
#else
  int x_param_max_inline_insns_small;
#define param_max_inline_insns_small global_options.x_param_max_inline_insns_small
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_recursive_depth_auto;
#else
  int x_param_max_inline_recursive_depth_auto;
#define param_max_inline_recursive_depth_auto global_options.x_param_max_inline_recursive_depth_auto
#endif
#ifdef GENERATOR_FILE
extern int param_max_inline_recursive_depth;
#else
  int x_param_max_inline_recursive_depth;
#define param_max_inline_recursive_depth global_options.x_param_max_inline_recursive_depth
#endif
#ifdef GENERATOR_FILE
extern int param_max_isl_operations;
#else
  int x_param_max_isl_operations;
#define param_max_isl_operations global_options.x_param_max_isl_operations
#endif
#ifdef GENERATOR_FILE
extern int param_max_iterations_computation_cost;
#else
  int x_param_max_iterations_computation_cost;
#define param_max_iterations_computation_cost global_options.x_param_max_iterations_computation_cost
#endif
#ifdef GENERATOR_FILE
extern int param_max_iterations_to_track;
#else
  int x_param_max_iterations_to_track;
#define param_max_iterations_to_track global_options.x_param_max_iterations_to_track
#endif
#ifdef GENERATOR_FILE
extern int param_max_jump_thread_duplication_stmts;
#else
  int x_param_max_jump_thread_duplication_stmts;
#define param_max_jump_thread_duplication_stmts global_options.x_param_max_jump_thread_duplication_stmts
#endif
#ifdef GENERATOR_FILE
extern int param_max_jump_thread_paths;
#else
  int x_param_max_jump_thread_paths;
#define param_max_jump_thread_paths global_options.x_param_max_jump_thread_paths
#endif
#ifdef GENERATOR_FILE
extern int param_max_last_value_rtl;
#else
  int x_param_max_last_value_rtl;
#define param_max_last_value_rtl global_options.x_param_max_last_value_rtl
#endif
#ifdef GENERATOR_FILE
extern int param_max_loop_header_insns;
#else
  int x_param_max_loop_header_insns;
#define param_max_loop_header_insns global_options.x_param_max_loop_header_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_modulo_backtrack_attempts;
#else
  int x_param_max_modulo_backtrack_attempts;
#define param_max_modulo_backtrack_attempts global_options.x_param_max_modulo_backtrack_attempts
#endif
#ifdef GENERATOR_FILE
extern int param_max_partial_antic_length;
#else
  int x_param_max_partial_antic_length;
#define param_max_partial_antic_length global_options.x_param_max_partial_antic_length
#endif
#ifdef GENERATOR_FILE
extern int param_max_peel_branches;
#else
  int x_param_max_peel_branches;
#define param_max_peel_branches global_options.x_param_max_peel_branches
#endif
#ifdef GENERATOR_FILE
extern int param_max_peel_times;
#else
  int x_param_max_peel_times;
#define param_max_peel_times global_options.x_param_max_peel_times
#endif
#ifdef GENERATOR_FILE
extern int param_max_peeled_insns;
#else
  int x_param_max_peeled_insns;
#define param_max_peeled_insns global_options.x_param_max_peeled_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_pending_list_length;
#else
  int x_param_max_pending_list_length;
#define param_max_pending_list_length global_options.x_param_max_pending_list_length
#endif
#ifdef GENERATOR_FILE
extern int param_max_pipeline_region_blocks;
#else
  int x_param_max_pipeline_region_blocks;
#define param_max_pipeline_region_blocks global_options.x_param_max_pipeline_region_blocks
#endif
#ifdef GENERATOR_FILE
extern int param_max_pipeline_region_insns;
#else
  int x_param_max_pipeline_region_insns;
#define param_max_pipeline_region_insns global_options.x_param_max_pipeline_region_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_pow_sqrt_depth;
#else
  int x_param_max_pow_sqrt_depth;
#define param_max_pow_sqrt_depth global_options.x_param_max_pow_sqrt_depth
#endif
#ifdef GENERATOR_FILE
extern int param_max_predicted_iterations;
#else
  int x_param_max_predicted_iterations;
#define param_max_predicted_iterations global_options.x_param_max_predicted_iterations
#endif
#ifdef GENERATOR_FILE
extern int param_max_reload_search_insns;
#else
  int x_param_max_reload_search_insns;
#define param_max_reload_search_insns global_options.x_param_max_reload_search_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_rtl_if_conversion_insns;
#else
  int x_param_max_rtl_if_conversion_insns;
#define param_max_rtl_if_conversion_insns global_options.x_param_max_rtl_if_conversion_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_rtl_if_conversion_predictable_cost;
#else
  int x_param_max_rtl_if_conversion_predictable_cost;
#define param_max_rtl_if_conversion_predictable_cost global_options.x_param_max_rtl_if_conversion_predictable_cost
#endif
#ifdef GENERATOR_FILE
extern int param_max_rtl_if_conversion_unpredictable_cost;
#else
  int x_param_max_rtl_if_conversion_unpredictable_cost;
#define param_max_rtl_if_conversion_unpredictable_cost global_options.x_param_max_rtl_if_conversion_unpredictable_cost
#endif
#ifdef GENERATOR_FILE
extern int param_max_sched_extend_regions_iters;
#else
  int x_param_max_sched_extend_regions_iters;
#define param_max_sched_extend_regions_iters global_options.x_param_max_sched_extend_regions_iters
#endif
#ifdef GENERATOR_FILE
extern int param_max_sched_insn_conflict_delay;
#else
  int x_param_max_sched_insn_conflict_delay;
#define param_max_sched_insn_conflict_delay global_options.x_param_max_sched_insn_conflict_delay
#endif
#ifdef GENERATOR_FILE
extern int param_max_sched_ready_insns;
#else
  int x_param_max_sched_ready_insns;
#define param_max_sched_ready_insns global_options.x_param_max_sched_ready_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_sched_region_blocks;
#else
  int x_param_max_sched_region_blocks;
#define param_max_sched_region_blocks global_options.x_param_max_sched_region_blocks
#endif
#ifdef GENERATOR_FILE
extern int param_max_sched_region_insns;
#else
  int x_param_max_sched_region_insns;
#define param_max_sched_region_insns global_options.x_param_max_sched_region_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_slsr_candidate_scan;
#else
  int x_param_max_slsr_candidate_scan;
#define param_max_slsr_candidate_scan global_options.x_param_max_slsr_candidate_scan
#endif
#ifdef GENERATOR_FILE
extern int param_max_speculative_devirt_maydefs;
#else
  int x_param_max_speculative_devirt_maydefs;
#define param_max_speculative_devirt_maydefs global_options.x_param_max_speculative_devirt_maydefs
#endif
#ifdef GENERATOR_FILE
extern int param_max_ssa_name_query_depth;
#else
  int x_param_max_ssa_name_query_depth;
#define param_max_ssa_name_query_depth global_options.x_param_max_ssa_name_query_depth
#endif
#ifdef GENERATOR_FILE
extern int param_max_store_chains_to_track;
#else
  int x_param_max_store_chains_to_track;
#define param_max_store_chains_to_track global_options.x_param_max_store_chains_to_track
#endif
#ifdef GENERATOR_FILE
extern int param_max_stores_to_merge;
#else
  int x_param_max_stores_to_merge;
#define param_max_stores_to_merge global_options.x_param_max_stores_to_merge
#endif
#ifdef GENERATOR_FILE
extern int param_max_stores_to_sink;
#else
  int x_param_max_stores_to_sink;
#define param_max_stores_to_sink global_options.x_param_max_stores_to_sink
#endif
#ifdef GENERATOR_FILE
extern int param_max_stores_to_track;
#else
  int x_param_max_stores_to_track;
#define param_max_stores_to_track global_options.x_param_max_stores_to_track
#endif
#ifdef GENERATOR_FILE
extern int param_max_tail_merge_comparisons;
#else
  int x_param_max_tail_merge_comparisons;
#define param_max_tail_merge_comparisons global_options.x_param_max_tail_merge_comparisons
#endif
#ifdef GENERATOR_FILE
extern int param_max_tail_merge_iterations;
#else
  int x_param_max_tail_merge_iterations;
#define param_max_tail_merge_iterations global_options.x_param_max_tail_merge_iterations
#endif
#ifdef GENERATOR_FILE
extern int param_max_tracked_strlens;
#else
  int x_param_max_tracked_strlens;
#define param_max_tracked_strlens global_options.x_param_max_tracked_strlens
#endif
#ifdef GENERATOR_FILE
extern int param_max_tree_if_conversion_phi_args;
#else
  int x_param_max_tree_if_conversion_phi_args;
#define param_max_tree_if_conversion_phi_args global_options.x_param_max_tree_if_conversion_phi_args
#endif
#ifdef GENERATOR_FILE
extern int param_max_unroll_times;
#else
  int x_param_max_unroll_times;
#define param_max_unroll_times global_options.x_param_max_unroll_times
#endif
#ifdef GENERATOR_FILE
extern int param_max_unrolled_insns;
#else
  int x_param_max_unrolled_insns;
#define param_max_unrolled_insns global_options.x_param_max_unrolled_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_unswitch_depth;
#else
  int x_param_max_unswitch_depth;
#define param_max_unswitch_depth global_options.x_param_max_unswitch_depth
#endif
#ifdef GENERATOR_FILE
extern int param_max_unswitch_insns;
#else
  int x_param_max_unswitch_insns;
#define param_max_unswitch_insns global_options.x_param_max_unswitch_insns
#endif
#ifdef GENERATOR_FILE
extern int param_max_variable_expansions;
#else
  int x_param_max_variable_expansions;
#define param_max_variable_expansions global_options.x_param_max_variable_expansions
#endif
#ifdef GENERATOR_FILE
extern int param_max_vartrack_expr_depth;
#else
  int x_param_max_vartrack_expr_depth;
#define param_max_vartrack_expr_depth global_options.x_param_max_vartrack_expr_depth
#endif
#ifdef GENERATOR_FILE
extern int param_max_vartrack_reverse_op_size;
#else
  int x_param_max_vartrack_reverse_op_size;
#define param_max_vartrack_reverse_op_size global_options.x_param_max_vartrack_reverse_op_size
#endif
#ifdef GENERATOR_FILE
extern int param_max_vartrack_size;
#else
  int x_param_max_vartrack_size;
#define param_max_vartrack_size global_options.x_param_max_vartrack_size
#endif
#ifdef GENERATOR_FILE
extern int param_min_crossjump_insns;
#else
  int x_param_min_crossjump_insns;
#define param_min_crossjump_insns global_options.x_param_min_crossjump_insns
#endif
#ifdef GENERATOR_FILE
extern int param_min_inline_recursive_probability;
#else
  int x_param_min_inline_recursive_probability;
#define param_min_inline_recursive_probability global_options.x_param_min_inline_recursive_probability
#endif
#ifdef GENERATOR_FILE
extern int param_min_insn_to_prefetch_ratio;
#else
  int x_param_min_insn_to_prefetch_ratio;
#define param_min_insn_to_prefetch_ratio global_options.x_param_min_insn_to_prefetch_ratio
#endif
#ifdef GENERATOR_FILE
extern int param_min_loop_cond_split_prob;
#else
  int x_param_min_loop_cond_split_prob;
#define param_min_loop_cond_split_prob global_options.x_param_min_loop_cond_split_prob
#endif
#ifdef GENERATOR_FILE
extern int param_min_nondebug_insn_uid;
#else
  int x_param_min_nondebug_insn_uid;
#define param_min_nondebug_insn_uid global_options.x_param_min_nondebug_insn_uid
#endif
#ifdef GENERATOR_FILE
extern int param_min_pagesize;
#else
  int x_param_min_pagesize;
#define param_min_pagesize global_options.x_param_min_pagesize
#endif
#ifdef GENERATOR_FILE
extern int param_min_size_for_stack_sharing;
#else
  int x_param_min_size_for_stack_sharing;
#define param_min_size_for_stack_sharing global_options.x_param_min_size_for_stack_sharing
#endif
#ifdef GENERATOR_FILE
extern int param_min_spec_prob;
#else
  int x_param_min_spec_prob;
#define param_min_spec_prob global_options.x_param_min_spec_prob
#endif
#ifdef GENERATOR_FILE
extern int param_min_vect_loop_bound;
#else
  int x_param_min_vect_loop_bound;
#define param_min_vect_loop_bound global_options.x_param_min_vect_loop_bound
#endif
#ifdef GENERATOR_FILE
extern int param_modref_max_accesses;
#else
  int x_param_modref_max_accesses;
#define param_modref_max_accesses global_options.x_param_modref_max_accesses
#endif
#ifdef GENERATOR_FILE
extern int param_modref_max_adjustments;
#else
  int x_param_modref_max_adjustments;
#define param_modref_max_adjustments global_options.x_param_modref_max_adjustments
#endif
#ifdef GENERATOR_FILE
extern int param_modref_max_bases;
#else
  int x_param_modref_max_bases;
#define param_modref_max_bases global_options.x_param_modref_max_bases
#endif
#ifdef GENERATOR_FILE
extern int param_modref_max_depth;
#else
  int x_param_modref_max_depth;
#define param_modref_max_depth global_options.x_param_modref_max_depth
#endif
#ifdef GENERATOR_FILE
extern int param_modref_max_escape_points;
#else
  int x_param_modref_max_escape_points;
#define param_modref_max_escape_points global_options.x_param_modref_max_escape_points
#endif
#ifdef GENERATOR_FILE
extern int param_modref_max_refs;
#else
  int x_param_modref_max_refs;
#define param_modref_max_refs global_options.x_param_modref_max_refs
#endif
#ifdef GENERATOR_FILE
extern int param_modref_max_tests;
#else
  int x_param_modref_max_tests;
#define param_modref_max_tests global_options.x_param_modref_max_tests
#endif
#ifdef GENERATOR_FILE
extern enum openacc_kernels param_openacc_kernels;
#else
  enum openacc_kernels x_param_openacc_kernels;
#define param_openacc_kernels global_options.x_param_openacc_kernels
#endif
#ifdef GENERATOR_FILE
extern enum openacc_privatization param_openacc_privatization;
#else
  enum openacc_privatization x_param_openacc_privatization;
#define param_openacc_privatization global_options.x_param_openacc_privatization
#endif
#ifdef GENERATOR_FILE
extern int param_parloops_chunk_size;
#else
  int x_param_parloops_chunk_size;
#define param_parloops_chunk_size global_options.x_param_parloops_chunk_size
#endif
#ifdef GENERATOR_FILE
extern int param_parloops_min_per_thread;
#else
  int x_param_parloops_min_per_thread;
#define param_parloops_min_per_thread global_options.x_param_parloops_min_per_thread
#endif
#ifdef GENERATOR_FILE
extern int param_parloops_schedule;
#else
  int x_param_parloops_schedule;
#define param_parloops_schedule global_options.x_param_parloops_schedule
#endif
#ifdef GENERATOR_FILE
extern int param_partial_inlining_entry_probability;
#else
  int x_param_partial_inlining_entry_probability;
#define param_partial_inlining_entry_probability global_options.x_param_partial_inlining_entry_probability
#endif
#ifdef GENERATOR_FILE
extern int param_predictable_branch_outcome;
#else
  int x_param_predictable_branch_outcome;
#define param_predictable_branch_outcome global_options.x_param_predictable_branch_outcome
#endif
#ifdef GENERATOR_FILE
extern int param_prefetch_dynamic_strides;
#else
  int x_param_prefetch_dynamic_strides;
#define param_prefetch_dynamic_strides global_options.x_param_prefetch_dynamic_strides
#endif
#ifdef GENERATOR_FILE
extern int param_prefetch_latency;
#else
  int x_param_prefetch_latency;
#define param_prefetch_latency global_options.x_param_prefetch_latency
#endif
#ifdef GENERATOR_FILE
extern int param_prefetch_min_insn_to_mem_ratio;
#else
  int x_param_prefetch_min_insn_to_mem_ratio;
#define param_prefetch_min_insn_to_mem_ratio global_options.x_param_prefetch_min_insn_to_mem_ratio
#endif
#ifdef GENERATOR_FILE
extern int param_prefetch_minimum_stride;
#else
  int x_param_prefetch_minimum_stride;
#define param_prefetch_minimum_stride global_options.x_param_prefetch_minimum_stride
#endif
#ifdef GENERATOR_FILE
extern int param_profile_func_internal_id;
#else
  int x_param_profile_func_internal_id;
#define param_profile_func_internal_id global_options.x_param_profile_func_internal_id
#endif
#ifdef GENERATOR_FILE
extern enum ranger_debug param_ranger_debug;
#else
  enum ranger_debug x_param_ranger_debug;
#define param_ranger_debug global_options.x_param_ranger_debug
#endif
#ifdef GENERATOR_FILE
extern int param_ranger_logical_depth;
#else
  int x_param_ranger_logical_depth;
#define param_ranger_logical_depth global_options.x_param_ranger_logical_depth
#endif
#ifdef GENERATOR_FILE
extern int param_ranger_recompute_depth;
#else
  int x_param_ranger_recompute_depth;
#define param_ranger_recompute_depth global_options.x_param_ranger_recompute_depth
#endif
#ifdef GENERATOR_FILE
extern int param_relation_block_limit;
#else
  int x_param_relation_block_limit;
#define param_relation_block_limit global_options.x_param_relation_block_limit
#endif
#ifdef GENERATOR_FILE
extern int param_rpo_vn_max_loop_depth;
#else
  int x_param_rpo_vn_max_loop_depth;
#define param_rpo_vn_max_loop_depth global_options.x_param_rpo_vn_max_loop_depth
#endif
#ifdef GENERATOR_FILE
extern int param_sccvn_max_alias_queries_per_access;
#else
  int x_param_sccvn_max_alias_queries_per_access;
#define param_sccvn_max_alias_queries_per_access global_options.x_param_sccvn_max_alias_queries_per_access
#endif
#ifdef GENERATOR_FILE
extern int param_scev_max_expr_complexity;
#else
  int x_param_scev_max_expr_complexity;
#define param_scev_max_expr_complexity global_options.x_param_scev_max_expr_complexity
#endif
#ifdef GENERATOR_FILE
extern int param_scev_max_expr_size;
#else
  int x_param_scev_max_expr_size;
#define param_scev_max_expr_size global_options.x_param_scev_max_expr_size
#endif
#ifdef GENERATOR_FILE
extern int param_sched_autopref_queue_depth;
#else
  int x_param_sched_autopref_queue_depth;
#define param_sched_autopref_queue_depth global_options.x_param_sched_autopref_queue_depth
#endif
#ifdef GENERATOR_FILE
extern int param_sched_mem_true_dep_cost;
#else
  int x_param_sched_mem_true_dep_cost;
#define param_sched_mem_true_dep_cost global_options.x_param_sched_mem_true_dep_cost
#endif
#ifdef GENERATOR_FILE
extern int param_sched_pressure_algorithm;
#else
  int x_param_sched_pressure_algorithm;
#define param_sched_pressure_algorithm global_options.x_param_sched_pressure_algorithm
#endif
#ifdef GENERATOR_FILE
extern int param_sched_spec_prob_cutoff;
#else
  int x_param_sched_spec_prob_cutoff;
#define param_sched_spec_prob_cutoff global_options.x_param_sched_spec_prob_cutoff
#endif
#ifdef GENERATOR_FILE
extern int param_sched_state_edge_prob_cutoff;
#else
  int x_param_sched_state_edge_prob_cutoff;
#define param_sched_state_edge_prob_cutoff global_options.x_param_sched_state_edge_prob_cutoff
#endif
#ifdef GENERATOR_FILE
extern int param_selsched_insns_to_rename;
#else
  int x_param_selsched_insns_to_rename;
#define param_selsched_insns_to_rename global_options.x_param_selsched_insns_to_rename
#endif
#ifdef GENERATOR_FILE
extern int param_selsched_max_lookahead;
#else
  int x_param_selsched_max_lookahead;
#define param_selsched_max_lookahead global_options.x_param_selsched_max_lookahead
#endif
#ifdef GENERATOR_FILE
extern int param_selsched_max_sched_times;
#else
  int x_param_selsched_max_sched_times;
#define param_selsched_max_sched_times global_options.x_param_selsched_max_sched_times
#endif
#ifdef GENERATOR_FILE
extern int param_simultaneous_prefetches;
#else
  int x_param_simultaneous_prefetches;
#define param_simultaneous_prefetches global_options.x_param_simultaneous_prefetches
#endif
#ifdef GENERATOR_FILE
extern int param_sink_frequency_threshold;
#else
  int x_param_sink_frequency_threshold;
#define param_sink_frequency_threshold global_options.x_param_sink_frequency_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_sms_dfa_history;
#else
  int x_param_sms_dfa_history;
#define param_sms_dfa_history global_options.x_param_sms_dfa_history
#endif
#ifdef GENERATOR_FILE
extern int param_sms_loop_average_count_threshold;
#else
  int x_param_sms_loop_average_count_threshold;
#define param_sms_loop_average_count_threshold global_options.x_param_sms_loop_average_count_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_sms_max_ii_factor;
#else
  int x_param_sms_max_ii_factor;
#define param_sms_max_ii_factor global_options.x_param_sms_max_ii_factor
#endif
#ifdef GENERATOR_FILE
extern int param_sms_min_sc;
#else
  int x_param_sms_min_sc;
#define param_sms_min_sc global_options.x_param_sms_min_sc
#endif
#ifdef GENERATOR_FILE
extern int param_sra_max_propagations;
#else
  int x_param_sra_max_propagations;
#define param_sra_max_propagations global_options.x_param_sra_max_propagations
#endif
#ifdef GENERATOR_FILE
extern int param_sra_max_scalarization_size_size;
#else
  int x_param_sra_max_scalarization_size_size;
#define param_sra_max_scalarization_size_size global_options.x_param_sra_max_scalarization_size_size
#endif
#ifdef GENERATOR_FILE
extern int param_sra_max_scalarization_size_speed;
#else
  int x_param_sra_max_scalarization_size_speed;
#define param_sra_max_scalarization_size_speed global_options.x_param_sra_max_scalarization_size_speed
#endif
#ifdef GENERATOR_FILE
extern int param_ssa_name_def_chain_limit;
#else
  int x_param_ssa_name_def_chain_limit;
#define param_ssa_name_def_chain_limit global_options.x_param_ssa_name_def_chain_limit
#endif
#ifdef GENERATOR_FILE
extern int param_ssp_buffer_size;
#else
  int x_param_ssp_buffer_size;
#define param_ssp_buffer_size global_options.x_param_ssp_buffer_size
#endif
#ifdef GENERATOR_FILE
extern int param_stack_clash_protection_guard_size;
#else
  int x_param_stack_clash_protection_guard_size;
#define param_stack_clash_protection_guard_size global_options.x_param_stack_clash_protection_guard_size
#endif
#ifdef GENERATOR_FILE
extern int param_stack_clash_protection_probe_interval;
#else
  int x_param_stack_clash_protection_probe_interval;
#define param_stack_clash_protection_probe_interval global_options.x_param_stack_clash_protection_probe_interval
#endif
#ifdef GENERATOR_FILE
extern int param_store_merging_allow_unaligned;
#else
  int x_param_store_merging_allow_unaligned;
#define param_store_merging_allow_unaligned global_options.x_param_store_merging_allow_unaligned
#endif
#ifdef GENERATOR_FILE
extern int param_store_merging_max_size;
#else
  int x_param_store_merging_max_size;
#define param_store_merging_max_size global_options.x_param_store_merging_max_size
#endif
#ifdef GENERATOR_FILE
extern int param_switch_conversion_branch_ratio;
#else
  int x_param_switch_conversion_branch_ratio;
#define param_switch_conversion_branch_ratio global_options.x_param_switch_conversion_branch_ratio
#endif
#ifdef GENERATOR_FILE
extern enum threader_debug param_threader_debug;
#else
  enum threader_debug x_param_threader_debug;
#define param_threader_debug global_options.x_param_threader_debug
#endif
#ifdef GENERATOR_FILE
extern int param_tm_max_aggregate_size;
#else
  int x_param_tm_max_aggregate_size;
#define param_tm_max_aggregate_size global_options.x_param_tm_max_aggregate_size
#endif
#ifdef GENERATOR_FILE
extern int param_tracer_dynamic_coverage_feedback;
#else
  int x_param_tracer_dynamic_coverage_feedback;
#define param_tracer_dynamic_coverage_feedback global_options.x_param_tracer_dynamic_coverage_feedback
#endif
#ifdef GENERATOR_FILE
extern int param_tracer_dynamic_coverage;
#else
  int x_param_tracer_dynamic_coverage;
#define param_tracer_dynamic_coverage global_options.x_param_tracer_dynamic_coverage
#endif
#ifdef GENERATOR_FILE
extern int param_tracer_max_code_growth;
#else
  int x_param_tracer_max_code_growth;
#define param_tracer_max_code_growth global_options.x_param_tracer_max_code_growth
#endif
#ifdef GENERATOR_FILE
extern int param_tracer_min_branch_probability_feedback;
#else
  int x_param_tracer_min_branch_probability_feedback;
#define param_tracer_min_branch_probability_feedback global_options.x_param_tracer_min_branch_probability_feedback
#endif
#ifdef GENERATOR_FILE
extern int param_tracer_min_branch_probability;
#else
  int x_param_tracer_min_branch_probability;
#define param_tracer_min_branch_probability global_options.x_param_tracer_min_branch_probability
#endif
#ifdef GENERATOR_FILE
extern int param_tracer_min_branch_ratio;
#else
  int x_param_tracer_min_branch_ratio;
#define param_tracer_min_branch_ratio global_options.x_param_tracer_min_branch_ratio
#endif
#ifdef GENERATOR_FILE
extern int param_tree_reassoc_width;
#else
  int x_param_tree_reassoc_width;
#define param_tree_reassoc_width global_options.x_param_tree_reassoc_width
#endif
#ifdef GENERATOR_FILE
extern int param_tsan_distinguish_volatile;
#else
  int x_param_tsan_distinguish_volatile;
#define param_tsan_distinguish_volatile global_options.x_param_tsan_distinguish_volatile
#endif
#ifdef GENERATOR_FILE
extern int param_tsan_instrument_func_entry_exit;
#else
  int x_param_tsan_instrument_func_entry_exit;
#define param_tsan_instrument_func_entry_exit global_options.x_param_tsan_instrument_func_entry_exit
#endif
#ifdef GENERATOR_FILE
extern int param_uninit_control_dep_attempts;
#else
  int x_param_uninit_control_dep_attempts;
#define param_uninit_control_dep_attempts global_options.x_param_uninit_control_dep_attempts
#endif
#ifdef GENERATOR_FILE
extern int param_uninit_max_chain_len;
#else
  int x_param_uninit_max_chain_len;
#define param_uninit_max_chain_len global_options.x_param_uninit_max_chain_len
#endif
#ifdef GENERATOR_FILE
extern int param_uninit_max_num_chains;
#else
  int x_param_uninit_max_num_chains;
#define param_uninit_max_num_chains global_options.x_param_uninit_max_num_chains
#endif
#ifdef GENERATOR_FILE
extern int param_uninlined_function_insns;
#else
  int x_param_uninlined_function_insns;
#define param_uninlined_function_insns global_options.x_param_uninlined_function_insns
#endif
#ifdef GENERATOR_FILE
extern int param_uninlined_function_time;
#else
  int x_param_uninlined_function_time;
#define param_uninlined_function_time global_options.x_param_uninlined_function_time
#endif
#ifdef GENERATOR_FILE
extern int param_uninlined_function_thunk_insns;
#else
  int x_param_uninlined_function_thunk_insns;
#define param_uninlined_function_thunk_insns global_options.x_param_uninlined_function_thunk_insns
#endif
#ifdef GENERATOR_FILE
extern int param_uninlined_function_thunk_time;
#else
  int x_param_uninlined_function_thunk_time;
#define param_uninlined_function_thunk_time global_options.x_param_uninlined_function_thunk_time
#endif
#ifdef GENERATOR_FILE
extern int param_unlikely_bb_count_fraction;
#else
  int x_param_unlikely_bb_count_fraction;
#define param_unlikely_bb_count_fraction global_options.x_param_unlikely_bb_count_fraction
#endif
#ifdef GENERATOR_FILE
extern int param_unroll_jam_max_unroll;
#else
  int x_param_unroll_jam_max_unroll;
#define param_unroll_jam_max_unroll global_options.x_param_unroll_jam_max_unroll
#endif
#ifdef GENERATOR_FILE
extern int param_unroll_jam_min_percent;
#else
  int x_param_unroll_jam_min_percent;
#define param_unroll_jam_min_percent global_options.x_param_unroll_jam_min_percent
#endif
#ifdef GENERATOR_FILE
extern int param_use_after_scope_direct_emission_threshold;
#else
  int x_param_use_after_scope_direct_emission_threshold;
#define param_use_after_scope_direct_emission_threshold global_options.x_param_use_after_scope_direct_emission_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_use_canonical_types;
#else
  int x_param_use_canonical_types;
#define param_use_canonical_types global_options.x_param_use_canonical_types
#endif
#ifdef GENERATOR_FILE
extern int param_vect_epilogues_nomask;
#else
  int x_param_vect_epilogues_nomask;
#define param_vect_epilogues_nomask global_options.x_param_vect_epilogues_nomask
#endif
#ifdef GENERATOR_FILE
extern int param_vect_induction_float;
#else
  int x_param_vect_induction_float;
#define param_vect_induction_float global_options.x_param_vect_induction_float
#endif
#ifdef GENERATOR_FILE
extern int param_vect_inner_loop_cost_factor;
#else
  int x_param_vect_inner_loop_cost_factor;
#define param_vect_inner_loop_cost_factor global_options.x_param_vect_inner_loop_cost_factor
#endif
#ifdef GENERATOR_FILE
extern int param_vect_max_layout_candidates;
#else
  int x_param_vect_max_layout_candidates;
#define param_vect_max_layout_candidates global_options.x_param_vect_max_layout_candidates
#endif
#ifdef GENERATOR_FILE
extern int param_vect_max_peeling_for_alignment;
#else
  int x_param_vect_max_peeling_for_alignment;
#define param_vect_max_peeling_for_alignment global_options.x_param_vect_max_peeling_for_alignment
#endif
#ifdef GENERATOR_FILE
extern int param_vect_max_version_for_alias_checks;
#else
  int x_param_vect_max_version_for_alias_checks;
#define param_vect_max_version_for_alias_checks global_options.x_param_vect_max_version_for_alias_checks
#endif
#ifdef GENERATOR_FILE
extern int param_vect_max_version_for_alignment_checks;
#else
  int x_param_vect_max_version_for_alignment_checks;
#define param_vect_max_version_for_alignment_checks global_options.x_param_vect_max_version_for_alignment_checks
#endif
#ifdef GENERATOR_FILE
extern int param_vect_partial_vector_usage;
#else
  int x_param_vect_partial_vector_usage;
#define param_vect_partial_vector_usage global_options.x_param_vect_partial_vector_usage
#endif
#ifdef GENERATOR_FILE
extern int param_vrp_sparse_threshold;
#else
  int x_param_vrp_sparse_threshold;
#define param_vrp_sparse_threshold global_options.x_param_vrp_sparse_threshold
#endif
#ifdef GENERATOR_FILE
extern int param_vrp_switch_limit;
#else
  int x_param_vrp_switch_limit;
#define param_vrp_switch_limit global_options.x_param_vrp_switch_limit
#endif
#ifdef GENERATOR_FILE
extern int param_vrp_vector_threshold;
#else
  int x_param_vrp_vector_threshold;
#define param_vrp_vector_threshold global_options.x_param_vrp_vector_threshold
#endif
#ifdef GENERATOR_FILE
extern int flag_preprocess_only;
#else
  int x_flag_preprocess_only;
#define flag_preprocess_only global_options.x_flag_preprocess_only
#endif
#ifdef GENERATOR_FILE
extern int warn_nsobject_attribute;
#else
  int x_warn_nsobject_attribute;
#define warn_nsobject_attribute global_options.x_warn_nsobject_attribute
#endif
#ifdef GENERATOR_FILE
extern int warn_abi;
#else
  int x_warn_abi;
#define warn_abi global_options.x_warn_abi
#endif
#ifdef GENERATOR_FILE
extern int warn_abi_tag;
#else
  int x_warn_abi_tag;
#define warn_abi_tag global_options.x_warn_abi_tag
#endif
#ifdef GENERATOR_FILE
extern int warn_absolute_value;
#else
  int x_warn_absolute_value;
#define warn_absolute_value global_options.x_warn_absolute_value
#endif
#ifdef GENERATOR_FILE
extern int warn_address;
#else
  int x_warn_address;
#define warn_address global_options.x_warn_address
#endif
#ifdef GENERATOR_FILE
extern int warn_address_of_packed_member;
#else
  int x_warn_address_of_packed_member;
#define warn_address_of_packed_member global_options.x_warn_address_of_packed_member
#endif
#ifdef GENERATOR_FILE
extern int warn_aggregate_return;
#else
  int x_warn_aggregate_return;
#define warn_aggregate_return global_options.x_warn_aggregate_return
#endif
#ifdef GENERATOR_FILE
extern int warn_aggressive_loop_optimizations;
#else
  int x_warn_aggressive_loop_optimizations;
#define warn_aggressive_loop_optimizations global_options.x_warn_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int warn_aliasing;
#else
  int x_warn_aliasing;
#define warn_aliasing global_options.x_warn_aliasing
#endif
#ifdef GENERATOR_FILE
extern int warn_align_commons;
#else
  int x_warn_align_commons;
#define warn_align_commons global_options.x_warn_align_commons
#endif
#ifdef GENERATOR_FILE
extern int warn_aligned_new;
#else
  int x_warn_aligned_new;
#define warn_aligned_new global_options.x_warn_aligned_new
#endif
#ifdef GENERATOR_FILE
extern int warn_alloc_size;
#else
  int x_warn_alloc_size;
#define warn_alloc_size global_options.x_warn_alloc_size
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_alloc_size_limit;
#else
  HOST_WIDE_INT x_warn_alloc_size_limit;
#define warn_alloc_size_limit global_options.x_warn_alloc_size_limit
#endif
#ifdef GENERATOR_FILE
extern int warn_alloc_zero;
#else
  int x_warn_alloc_zero;
#define warn_alloc_zero global_options.x_warn_alloc_zero
#endif
#ifdef GENERATOR_FILE
extern int warn_alloca;
#else
  int x_warn_alloca;
#define warn_alloca global_options.x_warn_alloca
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_alloca_limit;
#else
  HOST_WIDE_INT x_warn_alloca_limit;
#define warn_alloca_limit global_options.x_warn_alloca_limit
#endif
#ifdef GENERATOR_FILE
extern int warn_ampersand;
#else
  int x_warn_ampersand;
#define warn_ampersand global_options.x_warn_ampersand
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_allocation_size;
#else
  int x_warn_analyzer_allocation_size;
#define warn_analyzer_allocation_size global_options.x_warn_analyzer_allocation_size
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_deref_before_check;
#else
  int x_warn_analyzer_deref_before_check;
#define warn_analyzer_deref_before_check global_options.x_warn_analyzer_deref_before_check
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_double_fclose;
#else
  int x_warn_analyzer_double_fclose;
#define warn_analyzer_double_fclose global_options.x_warn_analyzer_double_fclose
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_double_free;
#else
  int x_warn_analyzer_double_free;
#define warn_analyzer_double_free global_options.x_warn_analyzer_double_free
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_exposure_through_output_file;
#else
  int x_warn_analyzer_exposure_through_output_file;
#define warn_analyzer_exposure_through_output_file global_options.x_warn_analyzer_exposure_through_output_file
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_exposure_through_uninit_copy;
#else
  int x_warn_analyzer_exposure_through_uninit_copy;
#define warn_analyzer_exposure_through_uninit_copy global_options.x_warn_analyzer_exposure_through_uninit_copy
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_fd_mode_mismatch;
#else
  int x_warn_analyzer_fd_mode_mismatch;
#define warn_analyzer_fd_mode_mismatch global_options.x_warn_analyzer_fd_mode_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_fd_double_close;
#else
  int x_warn_analyzer_fd_double_close;
#define warn_analyzer_fd_double_close global_options.x_warn_analyzer_fd_double_close
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_fd_leak;
#else
  int x_warn_analyzer_fd_leak;
#define warn_analyzer_fd_leak global_options.x_warn_analyzer_fd_leak
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_fd_phase_mismatch;
#else
  int x_warn_analyzer_fd_phase_mismatch;
#define warn_analyzer_fd_phase_mismatch global_options.x_warn_analyzer_fd_phase_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_fd_type_mismatch;
#else
  int x_warn_analyzer_fd_type_mismatch;
#define warn_analyzer_fd_type_mismatch global_options.x_warn_analyzer_fd_type_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_fd_use_after_close;
#else
  int x_warn_analyzer_fd_use_after_close;
#define warn_analyzer_fd_use_after_close global_options.x_warn_analyzer_fd_use_after_close
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_fd_use_without_check;
#else
  int x_warn_analyzer_fd_use_without_check;
#define warn_analyzer_fd_use_without_check global_options.x_warn_analyzer_fd_use_without_check
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_file_leak;
#else
  int x_warn_analyzer_file_leak;
#define warn_analyzer_file_leak global_options.x_warn_analyzer_file_leak
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_free_of_non_heap;
#else
  int x_warn_analyzer_free_of_non_heap;
#define warn_analyzer_free_of_non_heap global_options.x_warn_analyzer_free_of_non_heap
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_imprecise_fp_arithmetic;
#else
  int x_warn_analyzer_imprecise_fp_arithmetic;
#define warn_analyzer_imprecise_fp_arithmetic global_options.x_warn_analyzer_imprecise_fp_arithmetic
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_infinite_loop;
#else
  int x_warn_analyzer_infinite_loop;
#define warn_analyzer_infinite_loop global_options.x_warn_analyzer_infinite_loop
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_infinite_recursion;
#else
  int x_warn_analyzer_infinite_recursion;
#define warn_analyzer_infinite_recursion global_options.x_warn_analyzer_infinite_recursion
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_jump_through_null;
#else
  int x_warn_analyzer_jump_through_null;
#define warn_analyzer_jump_through_null global_options.x_warn_analyzer_jump_through_null
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_malloc_leak;
#else
  int x_warn_analyzer_malloc_leak;
#define warn_analyzer_malloc_leak global_options.x_warn_analyzer_malloc_leak
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_mismatching_deallocation;
#else
  int x_warn_analyzer_mismatching_deallocation;
#define warn_analyzer_mismatching_deallocation global_options.x_warn_analyzer_mismatching_deallocation
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_null_argument;
#else
  int x_warn_analyzer_null_argument;
#define warn_analyzer_null_argument global_options.x_warn_analyzer_null_argument
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_null_dereference;
#else
  int x_warn_analyzer_null_dereference;
#define warn_analyzer_null_dereference global_options.x_warn_analyzer_null_dereference
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_out_of_bounds;
#else
  int x_warn_analyzer_out_of_bounds;
#define warn_analyzer_out_of_bounds global_options.x_warn_analyzer_out_of_bounds
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_overlapping_buffers;
#else
  int x_warn_analyzer_overlapping_buffers;
#define warn_analyzer_overlapping_buffers global_options.x_warn_analyzer_overlapping_buffers
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_possible_null_argument;
#else
  int x_warn_analyzer_possible_null_argument;
#define warn_analyzer_possible_null_argument global_options.x_warn_analyzer_possible_null_argument
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_possible_null_dereference;
#else
  int x_warn_analyzer_possible_null_dereference;
#define warn_analyzer_possible_null_dereference global_options.x_warn_analyzer_possible_null_dereference
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_putenv_of_auto_var;
#else
  int x_warn_analyzer_putenv_of_auto_var;
#define warn_analyzer_putenv_of_auto_var global_options.x_warn_analyzer_putenv_of_auto_var
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_shift_count_negative;
#else
  int x_warn_analyzer_shift_count_negative;
#define warn_analyzer_shift_count_negative global_options.x_warn_analyzer_shift_count_negative
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_shift_count_overflow;
#else
  int x_warn_analyzer_shift_count_overflow;
#define warn_analyzer_shift_count_overflow global_options.x_warn_analyzer_shift_count_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_stale_setjmp_buffer;
#else
  int x_warn_analyzer_stale_setjmp_buffer;
#define warn_analyzer_stale_setjmp_buffer global_options.x_warn_analyzer_stale_setjmp_buffer
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_symbol_too_complex;
#else
  int x_warn_analyzer_symbol_too_complex;
#define warn_analyzer_symbol_too_complex global_options.x_warn_analyzer_symbol_too_complex
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_tainted_allocation_size;
#else
  int x_warn_analyzer_tainted_allocation_size;
#define warn_analyzer_tainted_allocation_size global_options.x_warn_analyzer_tainted_allocation_size
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_tainted_array_index;
#else
  int x_warn_analyzer_tainted_array_index;
#define warn_analyzer_tainted_array_index global_options.x_warn_analyzer_tainted_array_index
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_tainted_assertion;
#else
  int x_warn_analyzer_tainted_assertion;
#define warn_analyzer_tainted_assertion global_options.x_warn_analyzer_tainted_assertion
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_tainted_divisor;
#else
  int x_warn_analyzer_tainted_divisor;
#define warn_analyzer_tainted_divisor global_options.x_warn_analyzer_tainted_divisor
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_tainted_offset;
#else
  int x_warn_analyzer_tainted_offset;
#define warn_analyzer_tainted_offset global_options.x_warn_analyzer_tainted_offset
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_tainted_size;
#else
  int x_warn_analyzer_tainted_size;
#define warn_analyzer_tainted_size global_options.x_warn_analyzer_tainted_size
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_too_complex;
#else
  int x_warn_analyzer_too_complex;
#define warn_analyzer_too_complex global_options.x_warn_analyzer_too_complex
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_undefined_behavior_strtok;
#else
  int x_warn_analyzer_undefined_behavior_strtok;
#define warn_analyzer_undefined_behavior_strtok global_options.x_warn_analyzer_undefined_behavior_strtok
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_unsafe_call_within_signal_handler;
#else
  int x_warn_analyzer_unsafe_call_within_signal_handler;
#define warn_analyzer_unsafe_call_within_signal_handler global_options.x_warn_analyzer_unsafe_call_within_signal_handler
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_use_after_free;
#else
  int x_warn_analyzer_use_after_free;
#define warn_analyzer_use_after_free global_options.x_warn_analyzer_use_after_free
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_use_of_pointer_in_stale_stack_frame;
#else
  int x_warn_analyzer_use_of_pointer_in_stale_stack_frame;
#define warn_analyzer_use_of_pointer_in_stale_stack_frame global_options.x_warn_analyzer_use_of_pointer_in_stale_stack_frame
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_use_of_uninitialized_value;
#else
  int x_warn_analyzer_use_of_uninitialized_value;
#define warn_analyzer_use_of_uninitialized_value global_options.x_warn_analyzer_use_of_uninitialized_value
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_va_arg_type_mismatch;
#else
  int x_warn_analyzer_va_arg_type_mismatch;
#define warn_analyzer_va_arg_type_mismatch global_options.x_warn_analyzer_va_arg_type_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_va_list_exhausted;
#else
  int x_warn_analyzer_va_list_exhausted;
#define warn_analyzer_va_list_exhausted global_options.x_warn_analyzer_va_list_exhausted
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_va_list_leak;
#else
  int x_warn_analyzer_va_list_leak;
#define warn_analyzer_va_list_leak global_options.x_warn_analyzer_va_list_leak
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_va_list_use_after_va_end;
#else
  int x_warn_analyzer_va_list_use_after_va_end;
#define warn_analyzer_va_list_use_after_va_end global_options.x_warn_analyzer_va_list_use_after_va_end
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_write_to_const;
#else
  int x_warn_analyzer_write_to_const;
#define warn_analyzer_write_to_const global_options.x_warn_analyzer_write_to_const
#endif
#ifdef GENERATOR_FILE
extern int warn_analyzer_write_to_string_literal;
#else
  int x_warn_analyzer_write_to_string_literal;
#define warn_analyzer_write_to_string_literal global_options.x_warn_analyzer_write_to_string_literal
#endif
#ifdef GENERATOR_FILE
extern int warn_arith_conv;
#else
  int x_warn_arith_conv;
#define warn_arith_conv global_options.x_warn_arith_conv
#endif
#ifdef GENERATOR_FILE
extern int warn_array_bounds;
#else
  int x_warn_array_bounds;
#define warn_array_bounds global_options.x_warn_array_bounds
#endif
#ifdef GENERATOR_FILE
extern int warn_array_compare;
#else
  int x_warn_array_compare;
#define warn_array_compare global_options.x_warn_array_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_array_parameter;
#else
  int x_warn_array_parameter;
#define warn_array_parameter global_options.x_warn_array_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_array_temporaries;
#else
  int x_warn_array_temporaries;
#define warn_array_temporaries global_options.x_warn_array_temporaries
#endif
#ifdef GENERATOR_FILE
extern int warn_assign_intercept;
#else
  int x_warn_assign_intercept;
#define warn_assign_intercept global_options.x_warn_assign_intercept
#endif
#ifdef GENERATOR_FILE
extern int warn_attribute_alias;
#else
  int x_warn_attribute_alias;
#define warn_attribute_alias global_options.x_warn_attribute_alias
#endif
#ifdef GENERATOR_FILE
extern int warn_attribute_warning;
#else
  int x_warn_attribute_warning;
#define warn_attribute_warning global_options.x_warn_attribute_warning
#endif
#ifdef GENERATOR_FILE
extern int warn_attributes;
#else
  int x_warn_attributes;
#define warn_attributes global_options.x_warn_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_bad_function_cast;
#else
  int x_warn_bad_function_cast;
#define warn_bad_function_cast global_options.x_warn_bad_function_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_bidirectional;
#else
  int x_warn_bidirectional;
#define warn_bidirectional global_options.x_warn_bidirectional
#endif
#ifdef GENERATOR_FILE
extern int warn_bool_compare;
#else
  int x_warn_bool_compare;
#define warn_bool_compare global_options.x_warn_bool_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_bool_op;
#else
  int x_warn_bool_op;
#define warn_bool_op global_options.x_warn_bool_op
#endif
#ifdef GENERATOR_FILE
extern int warn_builtin_declaration_mismatch;
#else
  int x_warn_builtin_declaration_mismatch;
#define warn_builtin_declaration_mismatch global_options.x_warn_builtin_declaration_mismatch
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_builtin_macro_redefined;
#else
  int x_cpp_warn_builtin_macro_redefined;
#define cpp_warn_builtin_macro_redefined global_options.x_cpp_warn_builtin_macro_redefined
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx_compat;
#else
  int x_warn_cxx_compat;
#define warn_cxx_compat global_options.x_warn_cxx_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx11_compat;
#else
  int x_warn_cxx11_compat;
#define warn_cxx11_compat global_options.x_warn_cxx11_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx11_extensions;
#else
  int x_warn_cxx11_extensions;
#define warn_cxx11_extensions global_options.x_warn_cxx11_extensions
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx14_compat;
#else
  int x_warn_cxx14_compat;
#define warn_cxx14_compat global_options.x_warn_cxx14_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx14_extensions;
#else
  int x_warn_cxx14_extensions;
#define warn_cxx14_extensions global_options.x_warn_cxx14_extensions
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx17_compat;
#else
  int x_warn_cxx17_compat;
#define warn_cxx17_compat global_options.x_warn_cxx17_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx17_extensions;
#else
  int x_warn_cxx17_extensions;
#define warn_cxx17_extensions global_options.x_warn_cxx17_extensions
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx20_compat;
#else
  int x_warn_cxx20_compat;
#define warn_cxx20_compat global_options.x_warn_cxx20_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx20_extensions;
#else
  int x_warn_cxx20_extensions;
#define warn_cxx20_extensions global_options.x_warn_cxx20_extensions
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx23_extensions;
#else
  int x_warn_cxx23_extensions;
#define warn_cxx23_extensions global_options.x_warn_cxx23_extensions
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx26_extensions;
#else
  int x_warn_cxx26_extensions;
#define warn_cxx26_extensions global_options.x_warn_cxx26_extensions
#endif
#ifdef GENERATOR_FILE
extern int warn_c_binding_type;
#else
  int x_warn_c_binding_type;
#define warn_c_binding_type global_options.x_warn_c_binding_type
#endif
#ifdef GENERATOR_FILE
extern int warn_c11_c23_compat;
#else
  int x_warn_c11_c23_compat;
#define warn_c11_c23_compat global_options.x_warn_c11_c23_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_c90_c99_compat;
#else
  int x_warn_c90_c99_compat;
#define warn_c90_c99_compat global_options.x_warn_c90_c99_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_c99_c11_compat;
#else
  int x_warn_c99_c11_compat;
#define warn_c99_c11_compat global_options.x_warn_c99_c11_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_calloc_transposed_args;
#else
  int x_warn_calloc_transposed_args;
#define warn_calloc_transposed_args global_options.x_warn_calloc_transposed_args
#endif
#ifdef GENERATOR_FILE
extern int warn_cannot_profile;
#else
  int x_warn_cannot_profile;
#define warn_cannot_profile global_options.x_warn_cannot_profile
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_align;
#else
  int x_warn_cast_align;
#define warn_cast_align global_options.x_warn_cast_align
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_function_type;
#else
  int x_warn_cast_function_type;
#define warn_cast_function_type global_options.x_warn_cast_function_type
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_qual;
#else
  int x_warn_cast_qual;
#define warn_cast_qual global_options.x_warn_cast_qual
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_result;
#else
  int x_warn_cast_result;
#define warn_cast_result global_options.x_warn_cast_result
#endif
#ifdef GENERATOR_FILE
extern int warn_catch_value;
#else
  int x_warn_catch_value;
#define warn_catch_value global_options.x_warn_catch_value
#endif
#ifdef GENERATOR_FILE
extern int warn_changes_meaning;
#else
  int x_warn_changes_meaning;
#define warn_changes_meaning global_options.x_warn_changes_meaning
#endif
#ifdef GENERATOR_FILE
extern int warn_char_subscripts;
#else
  int x_warn_char_subscripts;
#define warn_char_subscripts global_options.x_warn_char_subscripts
#endif
#ifdef GENERATOR_FILE
extern int warn_character_truncation;
#else
  int x_warn_character_truncation;
#define warn_character_truncation global_options.x_warn_character_truncation
#endif
#ifdef GENERATOR_FILE
extern int warn_class_conversion;
#else
  int x_warn_class_conversion;
#define warn_class_conversion global_options.x_warn_class_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_class_memaccess;
#else
  int x_warn_class_memaccess;
#define warn_class_memaccess global_options.x_warn_class_memaccess
#endif
#ifdef GENERATOR_FILE
extern int warn_clobbered;
#else
  int x_warn_clobbered;
#define warn_clobbered global_options.x_warn_clobbered
#endif
#ifdef GENERATOR_FILE
extern int warn_comma_subscript;
#else
  int x_warn_comma_subscript;
#define warn_comma_subscript global_options.x_warn_comma_subscript
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_comment;
#else
  int x_cpp_warn_comment;
#define cpp_warn_comment global_options.x_cpp_warn_comment
#endif
#ifdef GENERATOR_FILE
extern int warn_compare_distinct_pointer_types;
#else
  int x_warn_compare_distinct_pointer_types;
#define warn_compare_distinct_pointer_types global_options.x_warn_compare_distinct_pointer_types
#endif
#ifdef GENERATOR_FILE
extern int warn_compare_reals;
#else
  int x_warn_compare_reals;
#define warn_compare_reals global_options.x_warn_compare_reals
#endif
#ifdef GENERATOR_FILE
extern int warn_complain_wrong_lang;
#else
  int x_warn_complain_wrong_lang;
#define warn_complain_wrong_lang global_options.x_warn_complain_wrong_lang
#endif
#ifdef GENERATOR_FILE
extern int warn_conditionally_supported;
#else
  int x_warn_conditionally_supported;
#define warn_conditionally_supported global_options.x_warn_conditionally_supported
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion;
#else
  int x_warn_conversion;
#define warn_conversion global_options.x_warn_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion_extra;
#else
  int x_warn_conversion_extra;
#define warn_conversion_extra global_options.x_warn_conversion_extra
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion_null;
#else
  int x_warn_conversion_null;
#define warn_conversion_null global_options.x_warn_conversion_null
#endif
#ifdef GENERATOR_FILE
extern int warn_coverage_invalid_linenum;
#else
  int x_warn_coverage_invalid_linenum;
#define warn_coverage_invalid_linenum global_options.x_warn_coverage_invalid_linenum
#endif
#ifdef GENERATOR_FILE
extern int warn_coverage_mismatch;
#else
  int x_warn_coverage_mismatch;
#define warn_coverage_mismatch global_options.x_warn_coverage_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_cpp;
#else
  int x_warn_cpp;
#define warn_cpp global_options.x_warn_cpp
#endif
#ifdef GENERATOR_FILE
extern int warn_ctad_maybe_unsupported;
#else
  int x_warn_ctad_maybe_unsupported;
#define warn_ctad_maybe_unsupported global_options.x_warn_ctad_maybe_unsupported
#endif
#ifdef GENERATOR_FILE
extern int warn_ctor_dtor_privacy;
#else
  int x_warn_ctor_dtor_privacy;
#define warn_ctor_dtor_privacy global_options.x_warn_ctor_dtor_privacy
#endif
#ifdef GENERATOR_FILE
extern int warn_dangling_else;
#else
  int x_warn_dangling_else;
#define warn_dangling_else global_options.x_warn_dangling_else
#endif
#ifdef GENERATOR_FILE
extern int warn_dangling_pointer;
#else
  int x_warn_dangling_pointer;
#define warn_dangling_pointer global_options.x_warn_dangling_pointer
#endif
#ifdef GENERATOR_FILE
extern int warn_dangling_reference;
#else
  int x_warn_dangling_reference;
#define warn_dangling_reference global_options.x_warn_dangling_reference
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_date_time;
#else
  int x_cpp_warn_date_time;
#define cpp_warn_date_time global_options.x_cpp_warn_date_time
#endif
#ifdef GENERATOR_FILE
extern int warn_declaration_after_statement;
#else
  int x_warn_declaration_after_statement;
#define warn_declaration_after_statement global_options.x_warn_declaration_after_statement
#endif
#ifdef GENERATOR_FILE
extern int warn_declaration_missing_parameter;
#else
  int x_warn_declaration_missing_parameter;
#define warn_declaration_missing_parameter global_options.x_warn_declaration_missing_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_delete_incomplete;
#else
  int x_warn_delete_incomplete;
#define warn_delete_incomplete global_options.x_warn_delete_incomplete
#endif
#ifdef GENERATOR_FILE
extern int warn_delnonvdtor;
#else
  int x_warn_delnonvdtor;
#define warn_delnonvdtor global_options.x_warn_delnonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated;
#else
  int x_warn_deprecated;
#define warn_deprecated global_options.x_warn_deprecated
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_copy;
#else
  int x_warn_deprecated_copy;
#define warn_deprecated_copy global_options.x_warn_deprecated_copy
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_decl;
#else
  int x_warn_deprecated_decl;
#define warn_deprecated_decl global_options.x_warn_deprecated_decl
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_enum_enum_conv;
#else
  int x_warn_deprecated_enum_enum_conv;
#define warn_deprecated_enum_enum_conv global_options.x_warn_deprecated_enum_enum_conv
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_enum_float_conv;
#else
  int x_warn_deprecated_enum_float_conv;
#define warn_deprecated_enum_float_conv global_options.x_warn_deprecated_enum_float_conv
#endif
#ifdef GENERATOR_FILE
extern int warn_designated_init;
#else
  int x_warn_designated_init;
#define warn_designated_init global_options.x_warn_designated_init
#endif
#ifdef GENERATOR_FILE
extern int warn_disabled_optimization;
#else
  int x_warn_disabled_optimization;
#define warn_disabled_optimization global_options.x_warn_disabled_optimization
#endif
#ifdef GENERATOR_FILE
extern int warn_discarded_array_qualifiers;
#else
  int x_warn_discarded_array_qualifiers;
#define warn_discarded_array_qualifiers global_options.x_warn_discarded_array_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_discarded_qualifiers;
#else
  int x_warn_discarded_qualifiers;
#define warn_discarded_qualifiers global_options.x_warn_discarded_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_div_by_zero;
#else
  int x_warn_div_by_zero;
#define warn_div_by_zero global_options.x_warn_div_by_zero
#endif
#ifdef GENERATOR_FILE
extern int warn_do_subscript;
#else
  int x_warn_do_subscript;
#define warn_do_subscript global_options.x_warn_do_subscript
#endif
#ifdef GENERATOR_FILE
extern int warn_double_promotion;
#else
  int x_warn_double_promotion;
#define warn_double_promotion global_options.x_warn_double_promotion
#endif
#ifdef GENERATOR_FILE
extern int warn_duplicate_decl_specifier;
#else
  int x_warn_duplicate_decl_specifier;
#define warn_duplicate_decl_specifier global_options.x_warn_duplicate_decl_specifier
#endif
#ifdef GENERATOR_FILE
extern int warn_duplicated_branches;
#else
  int x_warn_duplicated_branches;
#define warn_duplicated_branches global_options.x_warn_duplicated_branches
#endif
#ifdef GENERATOR_FILE
extern int warn_duplicated_cond;
#else
  int x_warn_duplicated_cond;
#define warn_duplicated_cond global_options.x_warn_duplicated_cond
#endif
#ifdef GENERATOR_FILE
extern int warn_ecpp;
#else
  int x_warn_ecpp;
#define warn_ecpp global_options.x_warn_ecpp
#endif
#ifdef GENERATOR_FILE
extern int warn_elaborated_enum_base;
#else
  int x_warn_elaborated_enum_base;
#define warn_elaborated_enum_base global_options.x_warn_elaborated_enum_base
#endif
#ifdef GENERATOR_FILE
extern int warn_empty_body;
#else
  int x_warn_empty_body;
#define warn_empty_body global_options.x_warn_empty_body
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_endif_labels;
#else
  int x_cpp_warn_endif_labels;
#define cpp_warn_endif_labels global_options.x_cpp_warn_endif_labels
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_compare;
#else
  int x_warn_enum_compare;
#define warn_enum_compare global_options.x_warn_enum_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_conversion;
#else
  int x_warn_enum_conversion;
#define warn_enum_conversion global_options.x_warn_enum_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_int_mismatch;
#else
  int x_warn_enum_int_mismatch;
#define warn_enum_int_mismatch global_options.x_warn_enum_int_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warnings_are_errors;
#else
  int x_warnings_are_errors;
#define warnings_are_errors global_options.x_warnings_are_errors
#endif
#ifdef GENERATOR_FILE
extern int warn_exceptions;
#else
  int x_warn_exceptions;
#define warn_exceptions global_options.x_warn_exceptions
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_expansion_to_defined;
#else
  int x_cpp_warn_expansion_to_defined;
#define cpp_warn_expansion_to_defined global_options.x_cpp_warn_expansion_to_defined
#endif
#ifdef GENERATOR_FILE
extern int extra_warnings;
#else
  int x_extra_warnings;
#define extra_warnings global_options.x_extra_warnings
#endif
#ifdef GENERATOR_FILE
extern int warn_extra_semi;
#else
  int x_warn_extra_semi;
#define warn_extra_semi global_options.x_warn_extra_semi
#endif
#ifdef GENERATOR_FILE
extern int flag_fatal_errors;
#else
  int x_flag_fatal_errors;
#define flag_fatal_errors global_options.x_flag_fatal_errors
#endif
#ifdef GENERATOR_FILE
extern int warn_flex_array_member_not_at_end;
#else
  int x_warn_flex_array_member_not_at_end;
#define warn_flex_array_member_not_at_end global_options.x_warn_flex_array_member_not_at_end
#endif
#ifdef GENERATOR_FILE
extern int warn_float_conversion;
#else
  int x_warn_float_conversion;
#define warn_float_conversion global_options.x_warn_float_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_float_equal;
#else
  int x_warn_float_equal;
#define warn_float_equal global_options.x_warn_float_equal
#endif
#ifdef GENERATOR_FILE
extern int warn_format_contains_nul;
#else
  int x_warn_format_contains_nul;
#define warn_format_contains_nul global_options.x_warn_format_contains_nul
#endif
#ifdef GENERATOR_FILE
extern int warn_format_diag;
#else
  int x_warn_format_diag;
#define warn_format_diag global_options.x_warn_format_diag
#endif
#ifdef GENERATOR_FILE
extern int warn_format_extra_args;
#else
  int x_warn_format_extra_args;
#define warn_format_extra_args global_options.x_warn_format_extra_args
#endif
#ifdef GENERATOR_FILE
extern int warn_format_nonliteral;
#else
  int x_warn_format_nonliteral;
#define warn_format_nonliteral global_options.x_warn_format_nonliteral
#endif
#ifdef GENERATOR_FILE
extern int warn_format_overflow;
#else
  int x_warn_format_overflow;
#define warn_format_overflow global_options.x_warn_format_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_format_security;
#else
  int x_warn_format_security;
#define warn_format_security global_options.x_warn_format_security
#endif
#ifdef GENERATOR_FILE
extern int warn_format_signedness;
#else
  int x_warn_format_signedness;
#define warn_format_signedness global_options.x_warn_format_signedness
#endif
#ifdef GENERATOR_FILE
extern int warn_format_trunc;
#else
  int x_warn_format_trunc;
#define warn_format_trunc global_options.x_warn_format_trunc
#endif
#ifdef GENERATOR_FILE
extern int warn_format_y2k;
#else
  int x_warn_format_y2k;
#define warn_format_y2k global_options.x_warn_format_y2k
#endif
#ifdef GENERATOR_FILE
extern int warn_format_zero_length;
#else
  int x_warn_format_zero_length;
#define warn_format_zero_length global_options.x_warn_format_zero_length
#endif
#ifdef GENERATOR_FILE
extern int warn_format;
#else
  int x_warn_format;
#define warn_format global_options.x_warn_format
#endif
#ifdef GENERATOR_FILE
extern int warn_frame_address;
#else
  int x_warn_frame_address;
#define warn_frame_address global_options.x_warn_frame_address
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_frame_larger_than_size;
#else
  HOST_WIDE_INT x_warn_frame_larger_than_size;
#define warn_frame_larger_than_size global_options.x_warn_frame_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern int warn_free_nonheap_object;
#else
  int x_warn_free_nonheap_object;
#define warn_free_nonheap_object global_options.x_warn_free_nonheap_object
#endif
#ifdef GENERATOR_FILE
extern int flag_warn_frontend_loop_interchange;
#else
  int x_flag_warn_frontend_loop_interchange;
#define flag_warn_frontend_loop_interchange global_options.x_flag_warn_frontend_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int warn_function_elimination;
#else
  int x_warn_function_elimination;
#define warn_function_elimination global_options.x_warn_function_elimination
#endif
#ifdef GENERATOR_FILE
extern int warn_global_module;
#else
  int x_warn_global_module;
#define warn_global_module global_options.x_warn_global_module
#endif
#ifdef GENERATOR_FILE
extern int warn_hardened;
#else
  int x_warn_hardened;
#define warn_hardened global_options.x_warn_hardened
#endif
#ifdef GENERATOR_FILE
extern int warn_if_not_aligned;
#else
  int x_warn_if_not_aligned;
#define warn_if_not_aligned global_options.x_warn_if_not_aligned
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_attributes;
#else
  int x_warn_ignored_attributes;
#define warn_ignored_attributes global_options.x_warn_ignored_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_qualifiers;
#else
  int x_warn_ignored_qualifiers;
#define warn_ignored_qualifiers global_options.x_warn_ignored_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit;
#else
  int x_warn_implicit;
#define warn_implicit global_options.x_warn_implicit
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_fallthrough;
#else
  int x_warn_implicit_fallthrough;
#define warn_implicit_fallthrough global_options.x_warn_implicit_fallthrough
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_function_declaration;
#else
  int x_warn_implicit_function_declaration;
#define warn_implicit_function_declaration global_options.x_warn_implicit_function_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_int;
#else
  int x_warn_implicit_int;
#define warn_implicit_int global_options.x_warn_implicit_int
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_interface;
#else
  int x_warn_implicit_interface;
#define warn_implicit_interface global_options.x_warn_implicit_interface
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_procedure;
#else
  int x_warn_implicit_procedure;
#define warn_implicit_procedure global_options.x_warn_implicit_procedure
#endif
#ifdef GENERATOR_FILE
extern int warn_inaccessible_base;
#else
  int x_warn_inaccessible_base;
#define warn_inaccessible_base global_options.x_warn_inaccessible_base
#endif
#ifdef GENERATOR_FILE
extern int warn_incompatible_pointer_types;
#else
  int x_warn_incompatible_pointer_types;
#define warn_incompatible_pointer_types global_options.x_warn_incompatible_pointer_types
#endif
#ifdef GENERATOR_FILE
extern int warn_infinite_recursion;
#else
  int x_warn_infinite_recursion;
#define warn_infinite_recursion global_options.x_warn_infinite_recursion
#endif
#ifdef GENERATOR_FILE
extern int warn_inh_var_ctor;
#else
  int x_warn_inh_var_ctor;
#define warn_inh_var_ctor global_options.x_warn_inh_var_ctor
#endif
#ifdef GENERATOR_FILE
extern int warn_init_list;
#else
  int x_warn_init_list;
#define warn_init_list global_options.x_warn_init_list
#endif
#ifdef GENERATOR_FILE
extern int warn_init_self;
#else
  int x_warn_init_self;
#define warn_init_self global_options.x_warn_init_self
#endif
#ifdef GENERATOR_FILE
extern int warn_inline;
#else
  int x_warn_inline;
#define warn_inline global_options.x_warn_inline
#endif
#ifdef GENERATOR_FILE
extern int warn_int_conversion;
#else
  int x_warn_int_conversion;
#define warn_int_conversion global_options.x_warn_int_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_int_in_bool_context;
#else
  int x_warn_int_in_bool_context;
#define warn_int_in_bool_context global_options.x_warn_int_in_bool_context
#endif
#ifdef GENERATOR_FILE
extern int warn_int_to_pointer_cast;
#else
  int x_warn_int_to_pointer_cast;
#define warn_int_to_pointer_cast global_options.x_warn_int_to_pointer_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_integer_division;
#else
  int x_warn_integer_division;
#define warn_integer_division global_options.x_warn_integer_division
#endif
#ifdef GENERATOR_FILE
extern int warn_interference_size;
#else
  int x_warn_interference_size;
#define warn_interference_size global_options.x_warn_interference_size
#endif
#ifdef GENERATOR_FILE
extern int warn_intrinsic_shadow;
#else
  int x_warn_intrinsic_shadow;
#define warn_intrinsic_shadow global_options.x_warn_intrinsic_shadow
#endif
#ifdef GENERATOR_FILE
extern int warn_intrinsics_std;
#else
  int x_warn_intrinsics_std;
#define warn_intrinsics_std global_options.x_warn_intrinsics_std
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_constexpr;
#else
  int x_warn_invalid_constexpr;
#define warn_invalid_constexpr global_options.x_warn_invalid_constexpr
#endif
#ifdef GENERATOR_FILE
extern int warn_imported_macros;
#else
  int x_warn_imported_macros;
#define warn_imported_macros global_options.x_warn_imported_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_memory_model;
#else
  int x_warn_invalid_memory_model;
#define warn_invalid_memory_model global_options.x_warn_invalid_memory_model
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_offsetof;
#else
  int x_warn_invalid_offsetof;
#define warn_invalid_offsetof global_options.x_warn_invalid_offsetof
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_invalid_pch;
#else
  int x_cpp_warn_invalid_pch;
#define cpp_warn_invalid_pch global_options.x_cpp_warn_invalid_pch
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_utf8;
#else
  int x_warn_invalid_utf8;
#define warn_invalid_utf8 global_options.x_warn_invalid_utf8
#endif
#ifdef GENERATOR_FILE
extern int warn_jump_misses_init;
#else
  int x_warn_jump_misses_init;
#define warn_jump_misses_init global_options.x_warn_jump_misses_init
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_larger_than_size;
#else
  HOST_WIDE_INT x_warn_larger_than_size;
#define warn_larger_than_size global_options.x_warn_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern int warn_line_truncation;
#else
  int x_warn_line_truncation;
#define warn_line_truncation global_options.x_warn_line_truncation
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_literal_suffix;
#else
  int x_cpp_warn_literal_suffix;
#define cpp_warn_literal_suffix global_options.x_cpp_warn_literal_suffix
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_not_paren;
#else
  int x_warn_logical_not_paren;
#define warn_logical_not_paren global_options.x_warn_logical_not_paren
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_op;
#else
  int x_warn_logical_op;
#define warn_logical_op global_options.x_warn_logical_op
#endif
#ifdef GENERATOR_FILE
extern int warn_long_long;
#else
  int x_warn_long_long;
#define warn_long_long global_options.x_warn_long_long
#endif
#ifdef GENERATOR_FILE
extern int warn_lto_type_mismatch;
#else
  int x_warn_lto_type_mismatch;
#define warn_lto_type_mismatch global_options.x_warn_lto_type_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_main;
#else
  int x_warn_main;
#define warn_main global_options.x_warn_main
#endif
#ifdef GENERATOR_FILE
extern int warn_maybe_uninitialized;
#else
  int x_warn_maybe_uninitialized;
#define warn_maybe_uninitialized global_options.x_warn_maybe_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_memset_elt_size;
#else
  int x_warn_memset_elt_size;
#define warn_memset_elt_size global_options.x_warn_memset_elt_size
#endif
#ifdef GENERATOR_FILE
extern int warn_memset_transposed_args;
#else
  int x_warn_memset_transposed_args;
#define warn_memset_transposed_args global_options.x_warn_memset_transposed_args
#endif
#ifdef GENERATOR_FILE
extern int warn_misleading_indentation;
#else
  int x_warn_misleading_indentation;
#define warn_misleading_indentation global_options.x_warn_misleading_indentation
#endif
#ifdef GENERATOR_FILE
extern int warn_mismatched_alloc;
#else
  int x_warn_mismatched_alloc;
#define warn_mismatched_alloc global_options.x_warn_mismatched_alloc
#endif
#ifdef GENERATOR_FILE
extern int warn_mismatched_new_delete;
#else
  int x_warn_mismatched_new_delete;
#define warn_mismatched_new_delete global_options.x_warn_mismatched_new_delete
#endif
#ifdef GENERATOR_FILE
extern int warn_mismatched_special_enum;
#else
  int x_warn_mismatched_special_enum;
#define warn_mismatched_special_enum global_options.x_warn_mismatched_special_enum
#endif
#ifdef GENERATOR_FILE
extern int warn_mismatched_tags;
#else
  int x_warn_mismatched_tags;
#define warn_mismatched_tags global_options.x_warn_mismatched_tags
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_attributes;
#else
  int x_warn_missing_attributes;
#define warn_missing_attributes global_options.x_warn_missing_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_braces;
#else
  int x_warn_missing_braces;
#define warn_missing_braces global_options.x_warn_missing_braces
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_declarations;
#else
  int x_warn_missing_declarations;
#define warn_missing_declarations global_options.x_warn_missing_declarations
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_field_initializers;
#else
  int x_warn_missing_field_initializers;
#define warn_missing_field_initializers global_options.x_warn_missing_field_initializers
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_missing_include_dirs;
#else
  int x_cpp_warn_missing_include_dirs;
#define cpp_warn_missing_include_dirs global_options.x_cpp_warn_missing_include_dirs
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_parameter_type;
#else
  int x_warn_missing_parameter_type;
#define warn_missing_parameter_type global_options.x_warn_missing_parameter_type
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_profile;
#else
  int x_warn_missing_profile;
#define warn_missing_profile global_options.x_warn_missing_profile
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_prototypes;
#else
  int x_warn_missing_prototypes;
#define warn_missing_prototypes global_options.x_warn_missing_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_requires;
#else
  int x_warn_missing_requires;
#define warn_missing_requires global_options.x_warn_missing_requires
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_template_keyword;
#else
  int x_warn_missing_template_keyword;
#define warn_missing_template_keyword global_options.x_warn_missing_template_keyword
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_variable_declarations;
#else
  int x_warn_missing_variable_declarations;
#define warn_missing_variable_declarations global_options.x_warn_missing_variable_declarations
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_multichar;
#else
  int x_cpp_warn_multichar;
#define cpp_warn_multichar global_options.x_cpp_warn_multichar
#endif
#ifdef GENERATOR_FILE
extern int warn_multiple_inheritance;
#else
  int x_warn_multiple_inheritance;
#define warn_multiple_inheritance global_options.x_warn_multiple_inheritance
#endif
#ifdef GENERATOR_FILE
extern int warn_multistatement_macros;
#else
  int x_warn_multistatement_macros;
#define warn_multistatement_macros global_options.x_warn_multistatement_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_namespaces;
#else
  int x_warn_namespaces;
#define warn_namespaces global_options.x_warn_namespaces
#endif
#ifdef GENERATOR_FILE
extern int warn_narrowing;
#else
  int x_warn_narrowing;
#define warn_narrowing global_options.x_warn_narrowing
#endif
#ifdef GENERATOR_FILE
extern int warn_nested_externs;
#else
  int x_warn_nested_externs;
#define warn_nested_externs global_options.x_warn_nested_externs
#endif
#ifdef GENERATOR_FILE
extern int warn_noexcept;
#else
  int x_warn_noexcept;
#define warn_noexcept global_options.x_warn_noexcept
#endif
#ifdef GENERATOR_FILE
extern int warn_noexcept_type;
#else
  int x_warn_noexcept_type;
#define warn_noexcept_type global_options.x_warn_noexcept_type
#endif
#ifdef GENERATOR_FILE
extern int warn_nontemplate_friend;
#else
  int x_warn_nontemplate_friend;
#define warn_nontemplate_friend global_options.x_warn_nontemplate_friend
#endif
#ifdef GENERATOR_FILE
extern int warn_nonvdtor;
#else
  int x_warn_nonvdtor;
#define warn_nonvdtor global_options.x_warn_nonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull;
#else
  int x_warn_nonnull;
#define warn_nonnull global_options.x_warn_nonnull
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull_compare;
#else
  int x_warn_nonnull_compare;
#define warn_nonnull_compare global_options.x_warn_nonnull_compare
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_normalize;
#else
  int x_cpp_warn_normalize;
#define cpp_warn_normalize global_options.x_cpp_warn_normalize
#endif
#ifdef GENERATOR_FILE
extern int warn_nrvo;
#else
  int x_warn_nrvo;
#define warn_nrvo global_options.x_warn_nrvo
#endif
#ifdef GENERATOR_FILE
extern int warn_null_dereference;
#else
  int x_warn_null_dereference;
#define warn_null_dereference global_options.x_warn_null_dereference
#endif
#ifdef GENERATOR_FILE
extern int warn_objc_root_class;
#else
  int x_warn_objc_root_class;
#define warn_objc_root_class global_options.x_warn_objc_root_class
#endif
#ifdef GENERATOR_FILE
extern int warn_odr_violations;
#else
  int x_warn_odr_violations;
#define warn_odr_violations global_options.x_warn_odr_violations
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_cast;
#else
  int x_warn_old_style_cast;
#define warn_old_style_cast global_options.x_warn_old_style_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_declaration;
#else
  int x_warn_old_style_declaration;
#define warn_old_style_declaration global_options.x_warn_old_style_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_definition;
#else
  int x_warn_old_style_definition;
#define warn_old_style_definition global_options.x_warn_old_style_definition
#endif
#ifdef GENERATOR_FILE
extern int warn_openacc_parallelism;
#else
  int x_warn_openacc_parallelism;
#define warn_openacc_parallelism global_options.x_warn_openacc_parallelism
#endif
#ifdef GENERATOR_FILE
extern int warn_openmp;
#else
  int x_warn_openmp;
#define warn_openmp global_options.x_warn_openmp
#endif
#ifdef GENERATOR_FILE
extern int warn_openmp_simd;
#else
  int x_warn_openmp_simd;
#define warn_openmp_simd global_options.x_warn_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int warn_overflow;
#else
  int x_warn_overflow;
#define warn_overflow global_options.x_warn_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_overlength_strings;
#else
  int x_warn_overlength_strings;
#define warn_overlength_strings global_options.x_warn_overlength_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_overloaded_virtual;
#else
  int x_warn_overloaded_virtual;
#define warn_overloaded_virtual global_options.x_warn_overloaded_virtual
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init;
#else
  int x_warn_override_init;
#define warn_override_init global_options.x_warn_override_init
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init_side_effects;
#else
  int x_warn_override_init_side_effects;
#define warn_override_init_side_effects global_options.x_warn_override_init_side_effects
#endif
#ifdef GENERATOR_FILE
extern int warn_overwrite_recursive;
#else
  int x_warn_overwrite_recursive;
#define warn_overwrite_recursive global_options.x_warn_overwrite_recursive
#endif
#ifdef GENERATOR_FILE
extern int warn_packed;
#else
  int x_warn_packed;
#define warn_packed global_options.x_warn_packed
#endif
#ifdef GENERATOR_FILE
extern int warn_packed_bitfield_compat;
#else
  int x_warn_packed_bitfield_compat;
#define warn_packed_bitfield_compat global_options.x_warn_packed_bitfield_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_packed_not_aligned;
#else
  int x_warn_packed_not_aligned;
#define warn_packed_not_aligned global_options.x_warn_packed_not_aligned
#endif
#ifdef GENERATOR_FILE
extern int warn_padded;
#else
  int x_warn_padded;
#define warn_padded global_options.x_warn_padded
#endif
#ifdef GENERATOR_FILE
extern int warn_parentheses;
#else
  int x_warn_parentheses;
#define warn_parentheses global_options.x_warn_parentheses
#endif
#ifdef GENERATOR_FILE
extern int pedantic;
#else
  int x_pedantic;
#define pedantic global_options.x_pedantic
#endif
#ifdef GENERATOR_FILE
extern int warn_pessimizing_move;
#else
  int x_warn_pessimizing_move;
#define warn_pessimizing_move global_options.x_warn_pessimizing_move
#endif
#ifdef GENERATOR_FILE
extern int warn_placement_new;
#else
  int x_warn_placement_new;
#define warn_placement_new global_options.x_warn_placement_new
#endif
#ifdef GENERATOR_FILE
extern int warn_pmf2ptr;
#else
  int x_warn_pmf2ptr;
#define warn_pmf2ptr global_options.x_warn_pmf2ptr
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_arith;
#else
  int x_warn_pointer_arith;
#define warn_pointer_arith global_options.x_warn_pointer_arith
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_compare;
#else
  int x_warn_pointer_compare;
#define warn_pointer_compare global_options.x_warn_pointer_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_sign;
#else
  int x_warn_pointer_sign;
#define warn_pointer_sign global_options.x_warn_pointer_sign
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_to_int_cast;
#else
  int x_warn_pointer_to_int_cast;
#define warn_pointer_to_int_cast global_options.x_warn_pointer_to_int_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_pragmas;
#else
  int x_warn_pragmas;
#define warn_pragmas global_options.x_warn_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_prio_ctor_dtor;
#else
  int x_warn_prio_ctor_dtor;
#define warn_prio_ctor_dtor global_options.x_warn_prio_ctor_dtor
#endif
#ifdef GENERATOR_FILE
extern int warn_property_assign_default;
#else
  int x_warn_property_assign_default;
#define warn_property_assign_default global_options.x_warn_property_assign_default
#endif
#ifdef GENERATOR_FILE
extern int warn_protocol;
#else
  int x_warn_protocol;
#define warn_protocol global_options.x_warn_protocol
#endif
#ifdef GENERATOR_FILE
extern int warn_psabi;
#else
  int x_warn_psabi;
#define warn_psabi global_options.x_warn_psabi
#endif
#ifdef GENERATOR_FILE
extern int warn_range_loop_construct;
#else
  int x_warn_range_loop_construct;
#define warn_range_loop_construct global_options.x_warn_range_loop_construct
#endif
#ifdef GENERATOR_FILE
extern int warn_real_q_constant;
#else
  int x_warn_real_q_constant;
#define warn_real_q_constant global_options.x_warn_real_q_constant
#endif
#ifdef GENERATOR_FILE
extern int warn_realloc_lhs;
#else
  int x_warn_realloc_lhs;
#define warn_realloc_lhs global_options.x_warn_realloc_lhs
#endif
#ifdef GENERATOR_FILE
extern int warn_realloc_lhs_all;
#else
  int x_warn_realloc_lhs_all;
#define warn_realloc_lhs_all global_options.x_warn_realloc_lhs_all
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_decls;
#else
  int x_warn_redundant_decls;
#define warn_redundant_decls global_options.x_warn_redundant_decls
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_move;
#else
  int x_warn_redundant_move;
#define warn_redundant_move global_options.x_warn_redundant_move
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_tags;
#else
  int x_warn_redundant_tags;
#define warn_redundant_tags global_options.x_warn_redundant_tags
#endif
#ifdef GENERATOR_FILE
extern int warn_register;
#else
  int x_warn_register;
#define warn_register global_options.x_warn_register
#endif
#ifdef GENERATOR_FILE
extern int warn_reorder;
#else
  int x_warn_reorder;
#define warn_reorder global_options.x_warn_reorder
#endif
#ifdef GENERATOR_FILE
extern int warn_restrict;
#else
  int x_warn_restrict;
#define warn_restrict global_options.x_warn_restrict
#endif
#ifdef GENERATOR_FILE
extern int warn_return_local_addr;
#else
  int x_warn_return_local_addr;
#define warn_return_local_addr global_options.x_warn_return_local_addr
#endif
#ifdef GENERATOR_FILE
extern int warn_return_mismatch;
#else
  int x_warn_return_mismatch;
#define warn_return_mismatch global_options.x_warn_return_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_return_type;
#else
  int x_warn_return_type;
#define warn_return_type global_options.x_warn_return_type
#endif
#ifdef GENERATOR_FILE
extern int warn_scalar_storage_order;
#else
  int x_warn_scalar_storage_order;
#define warn_scalar_storage_order global_options.x_warn_scalar_storage_order
#endif
#ifdef GENERATOR_FILE
extern int warn_selector;
#else
  int x_warn_selector;
#define warn_selector global_options.x_warn_selector
#endif
#ifdef GENERATOR_FILE
extern int warn_self_move;
#else
  int x_warn_self_move;
#define warn_self_move global_options.x_warn_self_move
#endif
#ifdef GENERATOR_FILE
extern int warn_sequence_point;
#else
  int x_warn_sequence_point;
#define warn_sequence_point global_options.x_warn_sequence_point
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow;
#else
  int x_warn_shadow;
#define warn_shadow global_options.x_warn_shadow
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_ivar;
#else
  int x_warn_shadow_ivar;
#define warn_shadow_ivar global_options.x_warn_shadow_ivar
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_compatible_local;
#else
  int x_warn_shadow_compatible_local;
#define warn_shadow_compatible_local global_options.x_warn_shadow_compatible_local
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_local;
#else
  int x_warn_shadow_local;
#define warn_shadow_local global_options.x_warn_shadow_local
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_count_negative;
#else
  int x_warn_shift_count_negative;
#define warn_shift_count_negative global_options.x_warn_shift_count_negative
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_count_overflow;
#else
  int x_warn_shift_count_overflow;
#define warn_shift_count_overflow global_options.x_warn_shift_count_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_negative_value;
#else
  int x_warn_shift_negative_value;
#define warn_shift_negative_value global_options.x_warn_shift_negative_value
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_overflow;
#else
  int x_warn_shift_overflow;
#define warn_shift_overflow global_options.x_warn_shift_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_compare;
#else
  int x_warn_sign_compare;
#define warn_sign_compare global_options.x_warn_sign_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_conversion;
#else
  int x_warn_sign_conversion;
#define warn_sign_conversion global_options.x_warn_sign_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_promo;
#else
  int x_warn_sign_promo;
#define warn_sign_promo global_options.x_warn_sign_promo
#endif
#ifdef GENERATOR_FILE
extern int warn_sized_deallocation;
#else
  int x_warn_sized_deallocation;
#define warn_sized_deallocation global_options.x_warn_sized_deallocation
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_array_argument;
#else
  int x_warn_sizeof_array_argument;
#define warn_sizeof_array_argument global_options.x_warn_sizeof_array_argument
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_array_div;
#else
  int x_warn_sizeof_array_div;
#define warn_sizeof_array_div global_options.x_warn_sizeof_array_div
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_pointer_div;
#else
  int x_warn_sizeof_pointer_div;
#define warn_sizeof_pointer_div global_options.x_warn_sizeof_pointer_div
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_pointer_memaccess;
#else
  int x_warn_sizeof_pointer_memaccess;
#define warn_sizeof_pointer_memaccess global_options.x_warn_sizeof_pointer_memaccess
#endif
#ifdef GENERATOR_FILE
extern int warn_stack_protect;
#else
  int x_warn_stack_protect;
#define warn_stack_protect global_options.x_warn_stack_protect
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_stack_usage;
#else
  HOST_WIDE_INT x_warn_stack_usage;
#define warn_stack_usage global_options.x_warn_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_aliasing;
#else
  int x_warn_strict_aliasing;
#define warn_strict_aliasing global_options.x_warn_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_flex_arrays;
#else
  int x_warn_strict_flex_arrays;
#define warn_strict_flex_arrays global_options.x_warn_strict_flex_arrays
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_null_sentinel;
#else
  int x_warn_strict_null_sentinel;
#define warn_strict_null_sentinel global_options.x_warn_strict_null_sentinel
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_overflow;
#else
  int x_warn_strict_overflow;
#define warn_strict_overflow global_options.x_warn_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_prototypes;
#else
  int x_warn_strict_prototypes;
#define warn_strict_prototypes global_options.x_warn_strict_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_selector_match;
#else
  int x_warn_strict_selector_match;
#define warn_strict_selector_match global_options.x_warn_strict_selector_match
#endif
#ifdef GENERATOR_FILE
extern int warn_string_compare;
#else
  int x_warn_string_compare;
#define warn_string_compare global_options.x_warn_string_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_stringop_overflow;
#else
  int x_warn_stringop_overflow;
#define warn_stringop_overflow global_options.x_warn_stringop_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_stringop_overread;
#else
  int x_warn_stringop_overread;
#define warn_stringop_overread global_options.x_warn_stringop_overread
#endif
#ifdef GENERATOR_FILE
extern int warn_stringop_truncation;
#else
  int x_warn_stringop_truncation;
#define warn_stringop_truncation global_options.x_warn_stringop_truncation
#endif
#ifdef GENERATOR_FILE
extern int warn_subobject_linkage;
#else
  int x_warn_subobject_linkage;
#define warn_subobject_linkage global_options.x_warn_subobject_linkage
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_cold;
#else
  int x_warn_suggest_attribute_cold;
#define warn_suggest_attribute_cold global_options.x_warn_suggest_attribute_cold
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_const;
#else
  int x_warn_suggest_attribute_const;
#define warn_suggest_attribute_const global_options.x_warn_suggest_attribute_const
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_format;
#else
  int x_warn_suggest_attribute_format;
#define warn_suggest_attribute_format global_options.x_warn_suggest_attribute_format
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_malloc;
#else
  int x_warn_suggest_attribute_malloc;
#define warn_suggest_attribute_malloc global_options.x_warn_suggest_attribute_malloc
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_noreturn;
#else
  int x_warn_suggest_attribute_noreturn;
#define warn_suggest_attribute_noreturn global_options.x_warn_suggest_attribute_noreturn
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_pure;
#else
  int x_warn_suggest_attribute_pure;
#define warn_suggest_attribute_pure global_options.x_warn_suggest_attribute_pure
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_returns_nonnull;
#else
  int x_warn_suggest_attribute_returns_nonnull;
#define warn_suggest_attribute_returns_nonnull global_options.x_warn_suggest_attribute_returns_nonnull
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_final_methods;
#else
  int x_warn_suggest_final_methods;
#define warn_suggest_final_methods global_options.x_warn_suggest_final_methods
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_final_types;
#else
  int x_warn_suggest_final_types;
#define warn_suggest_final_types global_options.x_warn_suggest_final_types
#endif
#ifdef GENERATOR_FILE
extern int warn_override;
#else
  int x_warn_override;
#define warn_override global_options.x_warn_override
#endif
#ifdef GENERATOR_FILE
extern int warn_surprising;
#else
  int x_warn_surprising;
#define warn_surprising global_options.x_warn_surprising
#endif
#ifdef GENERATOR_FILE
extern int warn_switch;
#else
  int x_warn_switch;
#define warn_switch global_options.x_warn_switch
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_bool;
#else
  int x_warn_switch_bool;
#define warn_switch_bool global_options.x_warn_switch_bool
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_default;
#else
  int x_warn_switch_default;
#define warn_switch_default global_options.x_warn_switch_default
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_enum;
#else
  int x_warn_switch_enum;
#define warn_switch_enum global_options.x_warn_switch_enum
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_outside_range;
#else
  int x_warn_switch_outside_range;
#define warn_switch_outside_range global_options.x_warn_switch_outside_range
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_unreachable;
#else
  int x_warn_switch_unreachable;
#define warn_switch_unreachable global_options.x_warn_switch_unreachable
#endif
#ifdef GENERATOR_FILE
extern int warn_sync_nand;
#else
  int x_warn_sync_nand;
#define warn_sync_nand global_options.x_warn_sync_nand
#endif
#ifdef GENERATOR_FILE
extern int warn_synth;
#else
  int x_warn_synth;
#define warn_synth global_options.x_warn_synth
#endif
#ifdef GENERATOR_FILE
extern int warn_system_headers;
#else
  int x_warn_system_headers;
#define warn_system_headers global_options.x_warn_system_headers
#endif
#ifdef GENERATOR_FILE
extern int warn_tabs;
#else
  int x_warn_tabs;
#define warn_tabs global_options.x_warn_tabs
#endif
#ifdef GENERATOR_FILE
extern int warn_target_lifetime;
#else
  int x_warn_target_lifetime;
#define warn_target_lifetime global_options.x_warn_target_lifetime
#endif
#ifdef GENERATOR_FILE
extern int warn_tautological_compare;
#else
  int x_warn_tautological_compare;
#define warn_tautological_compare global_options.x_warn_tautological_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_template_id_cdtor;
#else
  int x_warn_template_id_cdtor;
#define warn_template_id_cdtor global_options.x_warn_template_id_cdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_templates;
#else
  int x_warn_templates;
#define warn_templates global_options.x_warn_templates
#endif
#ifdef GENERATOR_FILE
extern int warn_terminate;
#else
  int x_warn_terminate;
#define warn_terminate global_options.x_warn_terminate
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional;
#else
  int x_warn_traditional;
#define warn_traditional global_options.x_warn_traditional
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional_conversion;
#else
  int x_warn_traditional_conversion;
#define warn_traditional_conversion global_options.x_warn_traditional_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_trampolines;
#else
  int x_warn_trampolines;
#define warn_trampolines global_options.x_warn_trampolines
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_trigraphs;
#else
  int x_cpp_warn_trigraphs;
#define cpp_warn_trigraphs global_options.x_cpp_warn_trigraphs
#endif
#ifdef GENERATOR_FILE
extern int warn_trivial_auto_var_init;
#else
  int x_warn_trivial_auto_var_init;
#define warn_trivial_auto_var_init global_options.x_warn_trivial_auto_var_init
#endif
#ifdef GENERATOR_FILE
extern int warn_tsan;
#else
  int x_warn_tsan;
#define warn_tsan global_options.x_warn_tsan
#endif
#ifdef GENERATOR_FILE
extern int warn_type_limits;
#else
  int x_warn_type_limits;
#define warn_type_limits global_options.x_warn_type_limits
#endif
#ifdef GENERATOR_FILE
extern int warn_undeclared_selector;
#else
  int x_warn_undeclared_selector;
#define warn_undeclared_selector global_options.x_warn_undeclared_selector
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_undef;
#else
  int x_cpp_warn_undef;
#define cpp_warn_undef global_options.x_cpp_warn_undef
#endif
#ifdef GENERATOR_FILE
extern int warn_undefined_do_loop;
#else
  int x_warn_undefined_do_loop;
#define warn_undefined_do_loop global_options.x_warn_undefined_do_loop
#endif
#ifdef GENERATOR_FILE
extern int warn_underflow;
#else
  int x_warn_underflow;
#define warn_underflow global_options.x_warn_underflow
#endif
#ifdef GENERATOR_FILE
extern int warn_unicode;
#else
  int x_warn_unicode;
#define warn_unicode global_options.x_warn_unicode
#endif
#ifdef GENERATOR_FILE
extern int warn_uninitialized;
#else
  int x_warn_uninitialized;
#define warn_uninitialized global_options.x_warn_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_unknown_pragmas;
#else
  int x_warn_unknown_pragmas;
#define warn_unknown_pragmas global_options.x_warn_unknown_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_unsuffixed_float_constants;
#else
  int x_warn_unsuffixed_float_constants;
#define warn_unsuffixed_float_constants global_options.x_warn_unsuffixed_float_constants
#endif
#ifdef GENERATOR_FILE
extern int warn_unused;
#else
  int x_warn_unused;
#define warn_unused global_options.x_warn_unused
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_parameter;
#else
  int x_warn_unused_but_set_parameter;
#define warn_unused_but_set_parameter global_options.x_warn_unused_but_set_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_variable;
#else
  int x_warn_unused_but_set_variable;
#define warn_unused_but_set_variable global_options.x_warn_unused_but_set_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_const_variable;
#else
  int x_warn_unused_const_variable;
#define warn_unused_const_variable global_options.x_warn_unused_const_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_dummy_argument;
#else
  int x_warn_unused_dummy_argument;
#define warn_unused_dummy_argument global_options.x_warn_unused_dummy_argument
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_function;
#else
  int x_warn_unused_function;
#define warn_unused_function global_options.x_warn_unused_function
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_label;
#else
  int x_warn_unused_label;
#define warn_unused_label global_options.x_warn_unused_label
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_local_typedefs;
#else
  int x_warn_unused_local_typedefs;
#define warn_unused_local_typedefs global_options.x_warn_unused_local_typedefs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_unused_macros;
#else
  int x_cpp_warn_unused_macros;
#define cpp_warn_unused_macros global_options.x_cpp_warn_unused_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_parameter;
#else
  int x_warn_unused_parameter;
#define warn_unused_parameter global_options.x_warn_unused_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_result;
#else
  int x_warn_unused_result;
#define warn_unused_result global_options.x_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_value;
#else
  int x_warn_unused_value;
#define warn_unused_value global_options.x_warn_unused_value
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_variable;
#else
  int x_warn_unused_variable;
#define warn_unused_variable global_options.x_warn_unused_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_use_after_free;
#else
  int x_warn_use_after_free;
#define warn_use_after_free global_options.x_warn_use_after_free
#endif
#ifdef GENERATOR_FILE
extern int warn_use_without_only;
#else
  int x_warn_use_without_only;
#define warn_use_without_only global_options.x_warn_use_without_only
#endif
#ifdef GENERATOR_FILE
extern int warn_useless_cast;
#else
  int x_warn_useless_cast;
#define warn_useless_cast global_options.x_warn_useless_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_varargs;
#else
  int x_warn_varargs;
#define warn_varargs global_options.x_warn_varargs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_variadic_macros;
#else
  int x_cpp_warn_variadic_macros;
#define cpp_warn_variadic_macros global_options.x_cpp_warn_variadic_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_vector_operation_performance;
#else
  int x_warn_vector_operation_performance;
#define warn_vector_operation_performance global_options.x_warn_vector_operation_performance
#endif
#ifdef GENERATOR_FILE
extern int warn_vexing_parse;
#else
  int x_warn_vexing_parse;
#define warn_vexing_parse global_options.x_warn_vexing_parse
#endif
#ifdef GENERATOR_FILE
extern int warn_virtual_inheritance;
#else
  int x_warn_virtual_inheritance;
#define warn_virtual_inheritance global_options.x_warn_virtual_inheritance
#endif
#ifdef GENERATOR_FILE
extern int warn_virtual_move_assign;
#else
  int x_warn_virtual_move_assign;
#define warn_virtual_move_assign global_options.x_warn_virtual_move_assign
#endif
#ifdef GENERATOR_FILE
extern int warn_vla;
#else
  int x_warn_vla;
#define warn_vla global_options.x_warn_vla
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT warn_vla_limit;
#else
  HOST_WIDE_INT x_warn_vla_limit;
#define warn_vla_limit global_options.x_warn_vla_limit
#endif
#ifdef GENERATOR_FILE
extern int warn_vla_parameter;
#else
  int x_warn_vla_parameter;
#define warn_vla_parameter global_options.x_warn_vla_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_volatile;
#else
  int x_warn_volatile;
#define warn_volatile global_options.x_warn_volatile
#endif
#ifdef GENERATOR_FILE
extern int warn_volatile_register_var;
#else
  int x_warn_volatile_register_var;
#define warn_volatile_register_var global_options.x_warn_volatile_register_var
#endif
#ifdef GENERATOR_FILE
extern int warn_write_strings;
#else
  int x_warn_write_strings;
#define warn_write_strings global_options.x_warn_write_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_xor_used_as_pow;
#else
  int x_warn_xor_used_as_pow;
#define warn_xor_used_as_pow global_options.x_warn_xor_used_as_pow
#endif
#ifdef GENERATOR_FILE
extern int warn_zero_as_null_pointer_constant;
#else
  int x_warn_zero_as_null_pointer_constant;
#define warn_zero_as_null_pointer_constant global_options.x_warn_zero_as_null_pointer_constant
#endif
#ifdef GENERATOR_FILE
extern int warn_zero_length_bounds;
#else
  int x_warn_zero_length_bounds;
#define warn_zero_length_bounds global_options.x_warn_zero_length_bounds
#endif
#ifdef GENERATOR_FILE
extern int warn_zerotrip;
#else
  int x_warn_zerotrip;
#define warn_zerotrip global_options.x_warn_zerotrip
#endif
#ifdef GENERATOR_FILE
extern const char *aux_info_file_name;
#else
  const char *x_aux_info_file_name;
#define aux_info_file_name global_options.x_aux_info_file_name
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_callgraph;
#else
  int x_flag_dump_callgraph;
#define flag_dump_callgraph global_options.x_flag_dump_callgraph
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_defined;
#else
  int x_flag_lto_dump_defined;
#define flag_lto_dump_defined global_options.x_flag_lto_dump_defined
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_demangle;
#else
  int x_flag_lto_dump_demangle;
#define flag_lto_dump_demangle global_options.x_flag_lto_dump_demangle
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_body;
#else
  const char *x_flag_dump_body;
#define flag_dump_body global_options.x_flag_dump_body
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_level;
#else
  const char *x_flag_dump_level;
#define flag_dump_level global_options.x_flag_dump_level
#endif
#ifdef GENERATOR_FILE
extern const char *dump_base_name;
#else
  const char *x_dump_base_name;
#define dump_base_name global_options.x_dump_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_base_ext;
#else
  const char *x_dump_base_ext;
#define dump_base_ext global_options.x_dump_base_ext
#endif
#ifdef GENERATOR_FILE
extern const char *dump_dir_name;
#else
  const char *x_dump_dir_name;
#define dump_dir_name global_options.x_dump_dir_name
#endif
#ifdef GENERATOR_FILE
extern int flag_pic;
#else
  int x_flag_pic;
#define flag_pic global_options.x_flag_pic
#endif
#ifdef GENERATOR_FILE
extern int flag_pie;
#else
  int x_flag_pie;
#define flag_pie global_options.x_flag_pie
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_compat_version;
#else
  int x_flag_abi_compat_version;
#define flag_abi_compat_version global_options.x_flag_abi_compat_version
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_version;
#else
  int x_flag_abi_version;
#define flag_abi_version global_options.x_flag_abi_version
#endif
#ifdef GENERATOR_FILE
extern int flag_access_control;
#else
  int x_flag_access_control;
#define flag_access_control global_options.x_flag_access_control
#endif
#ifdef GENERATOR_FILE
extern const char *ada_specs_parent;
#else
  const char *x_ada_specs_parent;
#define ada_specs_parent global_options.x_ada_specs_parent
#endif
#ifdef GENERATOR_FILE
extern int flag_aggressive_function_elimination;
#else
  int x_flag_aggressive_function_elimination;
#define flag_aggressive_function_elimination global_options.x_flag_aggressive_function_elimination
#endif
#ifdef GENERATOR_FILE
extern int flag_aggressive_loop_optimizations;
#else
  int x_flag_aggressive_loop_optimizations;
#define flag_aggressive_loop_optimizations global_options.x_flag_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_align_commons;
#else
  int x_flag_align_commons;
#define flag_align_commons global_options.x_flag_align_commons
#endif
#ifdef GENERATOR_FILE
extern int flag_align_functions;
#else
  int x_flag_align_functions;
#define flag_align_functions global_options.x_flag_align_functions
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_functions;
#else
  const char *x_str_align_functions;
#define str_align_functions global_options.x_str_align_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_align_jumps;
#else
  int x_flag_align_jumps;
#define flag_align_jumps global_options.x_flag_align_jumps
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_jumps;
#else
  const char *x_str_align_jumps;
#define str_align_jumps global_options.x_str_align_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_align_labels;
#else
  int x_flag_align_labels;
#define flag_align_labels global_options.x_flag_align_labels
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_labels;
#else
  const char *x_str_align_labels;
#define str_align_labels global_options.x_str_align_labels
#endif
#ifdef GENERATOR_FILE
extern int flag_align_loops;
#else
  int x_flag_align_loops;
#define flag_align_loops global_options.x_flag_align_loops
#endif
#ifdef GENERATOR_FILE
extern const char *str_align_loops;
#else
  const char *x_str_align_loops;
#define str_align_loops global_options.x_str_align_loops
#endif
#ifdef GENERATOR_FILE
extern int aligned_new_threshold;
#else
  int x_aligned_new_threshold;
#define aligned_new_threshold global_options.x_aligned_new_threshold
#endif
#ifdef GENERATOR_FILE
extern int flag_all_intrinsics;
#else
  int x_flag_all_intrinsics;
#define flag_all_intrinsics global_options.x_flag_all_intrinsics
#endif
#ifdef GENERATOR_FILE
extern int flag_allocation_dce;
#else
  int x_flag_allocation_dce;
#define flag_allocation_dce global_options.x_flag_allocation_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_argument_mismatch;
#else
  int x_flag_allow_argument_mismatch;
#define flag_allow_argument_mismatch global_options.x_flag_allow_argument_mismatch
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_invalid_boz;
#else
  int x_flag_allow_invalid_boz;
#define flag_allow_invalid_boz global_options.x_flag_allow_invalid_boz
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_leading_underscore;
#else
  int x_flag_allow_leading_underscore;
#define flag_allow_leading_underscore global_options.x_flag_allow_leading_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_store_data_races;
#else
  int x_flag_store_data_races;
#define flag_store_data_races global_options.x_flag_store_data_races
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer;
#else
  int x_flag_analyzer;
#define flag_analyzer global_options.x_flag_analyzer
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_call_summaries;
#else
  int x_flag_analyzer_call_summaries;
#define flag_analyzer_call_summaries global_options.x_flag_analyzer_call_summaries
#endif
#ifdef GENERATOR_FILE
extern const char *flag_analyzer_checker;
#else
  const char *x_flag_analyzer_checker;
#define flag_analyzer_checker global_options.x_flag_analyzer_checker
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_debug_text_art;
#else
  int x_flag_analyzer_debug_text_art;
#define flag_analyzer_debug_text_art global_options.x_flag_analyzer_debug_text_art
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_feasibility;
#else
  int x_flag_analyzer_feasibility;
#define flag_analyzer_feasibility global_options.x_flag_analyzer_feasibility
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_fine_grained;
#else
  int x_flag_analyzer_fine_grained;
#define flag_analyzer_fine_grained global_options.x_flag_analyzer_fine_grained
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_show_duplicate_count;
#else
  int x_flag_analyzer_show_duplicate_count;
#define flag_analyzer_show_duplicate_count global_options.x_flag_analyzer_show_duplicate_count
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_show_events_in_system_headers;
#else
  int x_flag_analyzer_show_events_in_system_headers;
#define flag_analyzer_show_events_in_system_headers global_options.x_flag_analyzer_show_events_in_system_headers
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_state_merge;
#else
  int x_flag_analyzer_state_merge;
#define flag_analyzer_state_merge global_options.x_flag_analyzer_state_merge
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_state_purge;
#else
  int x_flag_analyzer_state_purge;
#define flag_analyzer_state_purge global_options.x_flag_analyzer_state_purge
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_suppress_followups;
#else
  int x_flag_analyzer_suppress_followups;
#define flag_analyzer_suppress_followups global_options.x_flag_analyzer_suppress_followups
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_transitivity;
#else
  int x_flag_analyzer_transitivity;
#define flag_analyzer_transitivity global_options.x_flag_analyzer_transitivity
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_undo_inlining;
#else
  int x_flag_analyzer_undo_inlining;
#define flag_analyzer_undo_inlining global_options.x_flag_analyzer_undo_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_verbose_edges;
#else
  int x_flag_analyzer_verbose_edges;
#define flag_analyzer_verbose_edges global_options.x_flag_analyzer_verbose_edges
#endif
#ifdef GENERATOR_FILE
extern int flag_analyzer_verbose_state_changes;
#else
  int x_flag_analyzer_verbose_state_changes;
#define flag_analyzer_verbose_state_changes global_options.x_flag_analyzer_verbose_state_changes
#endif
#ifdef GENERATOR_FILE
extern int analyzer_verbosity;
#else
  int x_analyzer_verbosity;
#define analyzer_verbosity global_options.x_analyzer_verbosity
#endif
#ifdef GENERATOR_FILE
extern void *common_deferred_options;
#else
  void *x_common_deferred_options;
#define common_deferred_options global_options.x_common_deferred_options
#endif
#ifdef GENERATOR_FILE
extern int flag_no_asm;
#else
  int x_flag_no_asm;
#define flag_no_asm global_options.x_flag_no_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_assert;
#else
  int x_flag_assert;
#define flag_assert global_options.x_flag_assert
#endif
#ifdef GENERATOR_FILE
extern int flag_associative_math;
#else
  int x_flag_associative_math;
#define flag_associative_math global_options.x_flag_associative_math
#endif
#ifdef GENERATOR_FILE
extern int flag_asynchronous_unwind_tables;
#else
  int x_flag_asynchronous_unwind_tables;
#define flag_asynchronous_unwind_tables global_options.x_flag_asynchronous_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_inc_dec;
#else
  int x_flag_auto_inc_dec;
#define flag_auto_inc_dec global_options.x_flag_auto_inc_dec
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_profile;
#else
  int x_flag_auto_profile;
#define flag_auto_profile global_options.x_flag_auto_profile
#endif
#ifdef GENERATOR_FILE
extern const char *auto_profile_file;
#else
  const char *x_auto_profile_file;
#define auto_profile_file global_options.x_auto_profile_file
#endif
#ifdef GENERATOR_FILE
extern int flag_automatic;
#else
  int x_flag_automatic;
#define flag_automatic global_options.x_flag_automatic
#endif
#ifdef GENERATOR_FILE
extern int flag_backslash;
#else
  int x_flag_backslash;
#define flag_backslash global_options.x_flag_backslash
#endif
#ifdef GENERATOR_FILE
extern int flag_backtrace;
#else
  int x_flag_backtrace;
#define flag_backtrace global_options.x_flag_backtrace
#endif
#ifdef GENERATOR_FILE
extern int flag_bit_tests;
#else
  int x_flag_bit_tests;
#define flag_bit_tests global_options.x_flag_bit_tests
#endif
#ifdef GENERATOR_FILE
extern int flag_blas_matmul_limit;
#else
  int x_flag_blas_matmul_limit;
#define flag_blas_matmul_limit global_options.x_flag_blas_matmul_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_bounds_check;
#else
  int x_flag_bounds_check;
#define flag_bounds_check global_options.x_flag_bounds_check
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_on_count_reg;
#else
  int x_flag_branch_on_count_reg;
#define flag_branch_on_count_reg global_options.x_flag_branch_on_count_reg
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_probabilities;
#else
  int x_flag_branch_probabilities;
#define flag_branch_probabilities global_options.x_flag_branch_probabilities
#endif
#ifdef GENERATOR_FILE
extern int flag_building_libgcc;
#else
  int x_flag_building_libgcc;
#define flag_building_libgcc global_options.x_flag_building_libgcc
#endif
#ifdef GENERATOR_FILE
extern int flag_building_libgfortran;
#else
  int x_flag_building_libgfortran;
#define flag_building_libgfortran global_options.x_flag_building_libgfortran
#endif
#ifdef GENERATOR_FILE
extern int flag_building_libphobos_tests;
#else
  int x_flag_building_libphobos_tests;
#define flag_building_libphobos_tests global_options.x_flag_building_libphobos_tests
#endif
#ifdef GENERATOR_FILE
extern int flag_no_builtin;
#else
  int x_flag_no_builtin;
#define flag_no_builtin global_options.x_flag_no_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_c_prototypes;
#else
  int x_flag_c_prototypes;
#define flag_c_prototypes global_options.x_flag_c_prototypes
#endif
#ifdef GENERATOR_FILE
extern int flag_c_prototypes_external;
#else
  int x_flag_c_prototypes_external;
#define flag_c_prototypes_external global_options.x_flag_c_prototypes_external
#endif
#ifdef GENERATOR_FILE
extern int flag_caller_saves;
#else
  int x_flag_caller_saves;
#define flag_caller_saves global_options.x_flag_caller_saves
#endif
#ifdef GENERATOR_FILE
extern int flag_callgraph_info;
#else
  int x_flag_callgraph_info;
#define flag_callgraph_info global_options.x_flag_callgraph_info
#endif
#ifdef GENERATOR_FILE
extern enum cf_protection_level flag_cf_protection;
#else
  enum cf_protection_level x_flag_cf_protection;
#define flag_cf_protection global_options.x_flag_cf_protection
#endif
#ifdef GENERATOR_FILE
extern int flag_char8_t;
#else
  int x_flag_char8_t;
#define flag_char8_t global_options.x_flag_char8_t
#endif
#ifdef GENERATOR_FILE
extern int flag_check_new;
#else
  int x_flag_check_new;
#define flag_check_new global_options.x_flag_check_new
#endif
#ifdef GENERATOR_FILE
extern int flag_check_action;
#else
  int x_flag_check_action;
#define flag_check_action global_options.x_flag_check_action
#endif
#ifdef GENERATOR_FILE
extern int flag_checking;
#else
  int x_flag_checking;
#define flag_checking global_options.x_flag_checking
#endif
#ifdef GENERATOR_FILE
extern enum gfc_fcoarray flag_coarray;
#else
  enum gfc_fcoarray x_flag_coarray;
#define flag_coarray global_options.x_flag_coarray
#endif
#ifdef GENERATOR_FILE
extern int flag_code_hoisting;
#else
  int x_flag_code_hoisting;
#define flag_code_hoisting global_options.x_flag_code_hoisting
#endif
#ifdef GENERATOR_FILE
extern int flag_combine_stack_adjustments;
#else
  int x_flag_combine_stack_adjustments;
#define flag_combine_stack_adjustments global_options.x_flag_combine_stack_adjustments
#endif
#ifdef GENERATOR_FILE
extern int flag_no_common;
#else
  int x_flag_no_common;
#define flag_no_common global_options.x_flag_no_common
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_debug;
#else
  int x_flag_compare_debug;
#define flag_compare_debug global_options.x_flag_compare_debug
#endif
#ifdef GENERATOR_FILE
extern const char *flag_compare_debug_opt;
#else
  const char *x_flag_compare_debug_opt;
#define flag_compare_debug_opt global_options.x_flag_compare_debug_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_elim_after_reload;
#else
  int x_flag_compare_elim_after_reload;
#define flag_compare_elim_after_reload global_options.x_flag_compare_elim_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_concepts;
#else
  int x_flag_concepts;
#define flag_concepts global_options.x_flag_concepts
#endif
#ifdef GENERATOR_FILE
extern int concepts_diagnostics_max_depth;
#else
  int x_concepts_diagnostics_max_depth;
#define concepts_diagnostics_max_depth global_options.x_concepts_diagnostics_max_depth
#endif
#ifdef GENERATOR_FILE
extern int flag_concepts_ts;
#else
  int x_flag_concepts_ts;
#define flag_concepts_ts global_options.x_flag_concepts_ts
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_stack;
#else
  int x_flag_conserve_stack;
#define flag_conserve_stack global_options.x_flag_conserve_stack
#endif
#ifdef GENERATOR_FILE
extern int constexpr_cache_depth;
#else
  int x_constexpr_cache_depth;
#define constexpr_cache_depth global_options.x_constexpr_cache_depth
#endif
#ifdef GENERATOR_FILE
extern int max_constexpr_depth;
#else
  int x_max_constexpr_depth;
#define max_constexpr_depth global_options.x_max_constexpr_depth
#endif
#ifdef GENERATOR_FILE
extern int flag_constexpr_fp_except;
#else
  int x_flag_constexpr_fp_except;
#define flag_constexpr_fp_except global_options.x_flag_constexpr_fp_except
#endif
#ifdef GENERATOR_FILE
extern int constexpr_loop_limit;
#else
  int x_constexpr_loop_limit;
#define constexpr_loop_limit global_options.x_constexpr_loop_limit
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT constexpr_ops_limit;
#else
  HOST_WIDE_INT x_constexpr_ops_limit;
#define constexpr_ops_limit global_options.x_constexpr_ops_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_contract_mode;
#else
  int x_flag_contract_mode;
#define flag_contract_mode global_options.x_flag_contract_mode
#endif
#ifdef GENERATOR_FILE
extern int flag_contract_strict_declarations;
#else
  int x_flag_contract_strict_declarations;
#define flag_contract_strict_declarations global_options.x_flag_contract_strict_declarations
#endif
#ifdef GENERATOR_FILE
extern int flag_contracts;
#else
  int x_flag_contracts;
#define flag_contracts global_options.x_flag_contracts
#endif
#ifdef GENERATOR_FILE
extern enum gfc_convert flag_convert;
#else
  enum gfc_convert x_flag_convert;
#define flag_convert global_options.x_flag_convert
#endif
#ifdef GENERATOR_FILE
extern int flag_coroutines;
#else
  int x_flag_coroutines;
#define flag_coroutines global_options.x_flag_coroutines
#endif
#ifdef GENERATOR_FILE
extern int flag_cprop_registers;
#else
  int x_flag_cprop_registers;
#define flag_cprop_registers global_options.x_flag_cprop_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_cray_pointer;
#else
  int x_flag_cray_pointer;
#define flag_cray_pointer global_options.x_flag_cray_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_crossjumping;
#else
  int x_flag_crossjumping;
#define flag_crossjumping global_options.x_flag_crossjumping
#endif
#ifdef GENERATOR_FILE
extern int flag_cse_follow_jumps;
#else
  int x_flag_cse_follow_jumps;
#define flag_cse_follow_jumps global_options.x_flag_cse_follow_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_fortran_rules;
#else
  int x_flag_cx_fortran_rules;
#define flag_cx_fortran_rules global_options.x_flag_cx_fortran_rules
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_limited_range;
#else
  int x_flag_cx_limited_range;
#define flag_cx_limited_range global_options.x_flag_cx_limited_range
#endif
#ifdef GENERATOR_FILE
extern int flag_data_sections;
#else
  int x_flag_data_sections;
#define flag_data_sections global_options.x_flag_data_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_dbg_cnt_list;
#else
  int x_flag_dbg_cnt_list;
#define flag_dbg_cnt_list global_options.x_flag_dbg_cnt_list
#endif
#ifdef GENERATOR_FILE
extern int flag_dce;
#else
  int x_flag_dce;
#define flag_dce global_options.x_flag_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_aux_vars;
#else
  int x_flag_debug_aux_vars;
#define flag_debug_aux_vars global_options.x_flag_debug_aux_vars
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_types_section;
#else
  int x_flag_debug_types_section;
#define flag_debug_types_section global_options.x_flag_debug_types_section
#endif
#ifdef GENERATOR_FILE
extern int flag_dec;
#else
  int x_flag_dec;
#define flag_dec global_options.x_flag_dec
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_blank_format_item;
#else
  int x_flag_dec_blank_format_item;
#define flag_dec_blank_format_item global_options.x_flag_dec_blank_format_item
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_char_conversions;
#else
  int x_flag_dec_char_conversions;
#define flag_dec_char_conversions global_options.x_flag_dec_char_conversions
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_format_defaults;
#else
  int x_flag_dec_format_defaults;
#define flag_dec_format_defaults global_options.x_flag_dec_format_defaults
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_include;
#else
  int x_flag_dec_include;
#define flag_dec_include global_options.x_flag_dec_include
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_intrinsic_ints;
#else
  int x_flag_dec_intrinsic_ints;
#define flag_dec_intrinsic_ints global_options.x_flag_dec_intrinsic_ints
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_math;
#else
  int x_flag_dec_math;
#define flag_dec_math global_options.x_flag_dec_math
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_static;
#else
  int x_flag_dec_static;
#define flag_dec_static global_options.x_flag_dec_static
#endif
#ifdef GENERATOR_FILE
extern int flag_dec_structure;
#else
  int x_flag_dec_structure;
#define flag_dec_structure global_options.x_flag_dec_structure
#endif
#ifdef GENERATOR_FILE
extern int flag_declone_ctor_dtor;
#else
  int x_flag_declone_ctor_dtor;
#define flag_declone_ctor_dtor global_options.x_flag_declone_ctor_dtor
#endif
#ifdef GENERATOR_FILE
extern int flag_default_double;
#else
  int x_flag_default_double;
#define flag_default_double global_options.x_flag_default_double
#endif
#ifdef GENERATOR_FILE
extern int flag_default_integer;
#else
  int x_flag_default_integer;
#define flag_default_integer global_options.x_flag_default_integer
#endif
#ifdef GENERATOR_FILE
extern int flag_default_real_10;
#else
  int x_flag_default_real_10;
#define flag_default_real_10 global_options.x_flag_default_real_10
#endif
#ifdef GENERATOR_FILE
extern int flag_default_real_16;
#else
  int x_flag_default_real_16;
#define flag_default_real_16 global_options.x_flag_default_real_16
#endif
#ifdef GENERATOR_FILE
extern int flag_default_real_8;
#else
  int x_flag_default_real_8;
#define flag_default_real_8 global_options.x_flag_default_real_8
#endif
#ifdef GENERATOR_FILE
extern int flag_defer_pop;
#else
  int x_flag_defer_pop;
#define flag_defer_pop global_options.x_flag_defer_pop
#endif
#ifdef GENERATOR_FILE
extern int flag_delayed_branch;
#else
  int x_flag_delayed_branch;
#define flag_delayed_branch global_options.x_flag_delayed_branch
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_dead_exceptions;
#else
  int x_flag_delete_dead_exceptions;
#define flag_delete_dead_exceptions global_options.x_flag_delete_dead_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_null_pointer_checks;
#else
  int x_flag_delete_null_pointer_checks;
#define flag_delete_null_pointer_checks global_options.x_flag_delete_null_pointer_checks
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize;
#else
  int x_flag_devirtualize;
#define flag_devirtualize global_options.x_flag_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans_devirtualize;
#else
  int x_flag_ltrans_devirtualize;
#define flag_ltrans_devirtualize global_options.x_flag_ltrans_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize_speculatively;
#else
  int x_flag_devirtualize_speculatively;
#define flag_devirtualize_speculatively global_options.x_flag_devirtualize_speculatively
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_all_candidates;
#else
  int x_flag_diagnostics_all_candidates;
#define flag_diagnostics_all_candidates global_options.x_flag_diagnostics_all_candidates
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_color;
#else
  int x_flag_diagnostics_show_color;
#define flag_diagnostics_show_color global_options.x_flag_diagnostics_show_color
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_generate_patch;
#else
  int x_flag_diagnostics_generate_patch;
#define flag_diagnostics_generate_patch global_options.x_flag_diagnostics_generate_patch
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_json_formatting;
#else
  int x_flag_diagnostics_json_formatting;
#define flag_diagnostics_json_formatting global_options.x_flag_diagnostics_json_formatting
#endif
#ifdef GENERATOR_FILE
extern int diagnostics_minimum_margin_width;
#else
  int x_diagnostics_minimum_margin_width;
#define diagnostics_minimum_margin_width global_options.x_diagnostics_minimum_margin_width
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_parseable_fixits;
#else
  int x_flag_diagnostics_parseable_fixits;
#define flag_diagnostics_parseable_fixits global_options.x_flag_diagnostics_parseable_fixits
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_path_format;
#else
  int x_flag_diagnostics_path_format;
#define flag_diagnostics_path_format global_options.x_flag_diagnostics_path_format
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_caret;
#else
  int x_flag_diagnostics_show_caret;
#define flag_diagnostics_show_caret global_options.x_flag_diagnostics_show_caret
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_cwe;
#else
  int x_flag_diagnostics_show_cwe;
#define flag_diagnostics_show_cwe global_options.x_flag_diagnostics_show_cwe
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_labels;
#else
  int x_flag_diagnostics_show_labels;
#define flag_diagnostics_show_labels global_options.x_flag_diagnostics_show_labels
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_line_numbers;
#else
  int x_flag_diagnostics_show_line_numbers;
#define flag_diagnostics_show_line_numbers global_options.x_flag_diagnostics_show_line_numbers
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_option;
#else
  int x_flag_diagnostics_show_option;
#define flag_diagnostics_show_option global_options.x_flag_diagnostics_show_option
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_path_depths;
#else
  int x_flag_diagnostics_show_path_depths;
#define flag_diagnostics_show_path_depths global_options.x_flag_diagnostics_show_path_depths
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_rules;
#else
  int x_flag_diagnostics_show_rules;
#define flag_diagnostics_show_rules global_options.x_flag_diagnostics_show_rules
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_template_tree;
#else
  int x_flag_diagnostics_show_template_tree;
#define flag_diagnostics_show_template_tree global_options.x_flag_diagnostics_show_template_tree
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_text_art_charset;
#else
  int x_flag_diagnostics_text_art_charset;
#define flag_diagnostics_text_art_charset global_options.x_flag_diagnostics_text_art_charset
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_urls;
#else
  int x_flag_diagnostics_show_urls;
#define flag_diagnostics_show_urls global_options.x_flag_diagnostics_show_urls
#endif
#ifdef GENERATOR_FILE
extern int flag_dollar_ok;
#else
  int x_flag_dollar_ok;
#define flag_dollar_ok global_options.x_flag_dollar_ok
#endif
#ifdef GENERATOR_FILE
extern int flag_dse;
#else
  int x_flag_dse;
#define flag_dse global_options.x_flag_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec;
#else
  int x_flag_dump_ada_spec;
#define flag_dump_ada_spec global_options.x_flag_dump_ada_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec_slim;
#else
  int x_flag_dump_ada_spec_slim;
#define flag_dump_ada_spec_slim global_options.x_flag_dump_ada_spec_slim
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer;
#else
  int x_flag_dump_analyzer;
#define flag_dump_analyzer global_options.x_flag_dump_analyzer
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_callgraph;
#else
  int x_flag_dump_analyzer_callgraph;
#define flag_dump_analyzer_callgraph global_options.x_flag_dump_analyzer_callgraph
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_exploded_graph;
#else
  int x_flag_dump_analyzer_exploded_graph;
#define flag_dump_analyzer_exploded_graph global_options.x_flag_dump_analyzer_exploded_graph
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_exploded_nodes;
#else
  int x_flag_dump_analyzer_exploded_nodes;
#define flag_dump_analyzer_exploded_nodes global_options.x_flag_dump_analyzer_exploded_nodes
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_exploded_nodes_2;
#else
  int x_flag_dump_analyzer_exploded_nodes_2;
#define flag_dump_analyzer_exploded_nodes_2 global_options.x_flag_dump_analyzer_exploded_nodes_2
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_exploded_nodes_3;
#else
  int x_flag_dump_analyzer_exploded_nodes_3;
#define flag_dump_analyzer_exploded_nodes_3 global_options.x_flag_dump_analyzer_exploded_nodes_3
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_exploded_paths;
#else
  int x_flag_dump_analyzer_exploded_paths;
#define flag_dump_analyzer_exploded_paths global_options.x_flag_dump_analyzer_exploded_paths
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_feasibility;
#else
  int x_flag_dump_analyzer_feasibility;
#define flag_dump_analyzer_feasibility global_options.x_flag_dump_analyzer_feasibility
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_infinite_loop;
#else
  int x_flag_dump_analyzer_infinite_loop;
#define flag_dump_analyzer_infinite_loop global_options.x_flag_dump_analyzer_infinite_loop
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_json;
#else
  int x_flag_dump_analyzer_json;
#define flag_dump_analyzer_json global_options.x_flag_dump_analyzer_json
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_state_purge;
#else
  int x_flag_dump_analyzer_state_purge;
#define flag_dump_analyzer_state_purge global_options.x_flag_dump_analyzer_state_purge
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_stderr;
#else
  int x_flag_dump_analyzer_stderr;
#define flag_dump_analyzer_stderr global_options.x_flag_dump_analyzer_stderr
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_supergraph;
#else
  int x_flag_dump_analyzer_supergraph;
#define flag_dump_analyzer_supergraph global_options.x_flag_dump_analyzer_supergraph
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_analyzer_untracked;
#else
  int x_flag_dump_analyzer_untracked;
#define flag_dump_analyzer_untracked global_options.x_flag_dump_analyzer_untracked
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_final_insns;
#else
  const char *x_flag_dump_final_insns;
#define flag_dump_final_insns global_options.x_flag_dump_final_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_fortran_global;
#else
  int x_flag_dump_fortran_global;
#define flag_dump_fortran_global global_options.x_flag_dump_fortran_global
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_fortran_optimized;
#else
  int x_flag_dump_fortran_optimized;
#define flag_dump_fortran_optimized global_options.x_flag_dump_fortran_optimized
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_fortran_original;
#else
  int x_flag_dump_fortran_original;
#define flag_dump_fortran_original global_options.x_flag_dump_fortran_original
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_go_spec;
#else
  const char *x_flag_dump_go_spec;
#define flag_dump_go_spec global_options.x_flag_dump_go_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_locations;
#else
  int x_flag_dump_locations;
#define flag_dump_locations global_options.x_flag_dump_locations
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_noaddr;
#else
  int x_flag_dump_noaddr;
#define flag_dump_noaddr global_options.x_flag_dump_noaddr
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_passes;
#else
  int x_flag_dump_passes;
#define flag_dump_passes global_options.x_flag_dump_passes
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_scos;
#else
  int x_flag_dump_scos;
#define flag_dump_scos global_options.x_flag_dump_scos
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered;
#else
  int x_flag_dump_unnumbered;
#define flag_dump_unnumbered global_options.x_flag_dump_unnumbered
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered_links;
#else
  int x_flag_dump_unnumbered_links;
#define flag_dump_unnumbered_links global_options.x_flag_dump_unnumbered_links
#endif
#ifdef GENERATOR_FILE
extern int flag_dwarf2_cfi_asm;
#else
  int x_flag_dwarf2_cfi_asm;
#define flag_dwarf2_cfi_asm global_options.x_flag_dwarf2_cfi_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_early_inlining;
#else
  int x_flag_early_inlining;
#define flag_early_inlining global_options.x_flag_early_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_elide_constructors;
#else
  int x_flag_elide_constructors;
#define flag_elide_constructors global_options.x_flag_elide_constructors
#endif
#ifdef GENERATOR_FILE
extern int flag_elide_type;
#else
  int x_flag_elide_type;
#define flag_elide_type global_options.x_flag_elide_type
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_only_used_symbols;
#else
  int x_flag_debug_only_used_symbols;
#define flag_debug_only_used_symbols global_options.x_flag_debug_only_used_symbols
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_unused_debug_types;
#else
  int x_flag_eliminate_unused_debug_types;
#define flag_eliminate_unused_debug_types global_options.x_flag_eliminate_unused_debug_types
#endif
#ifdef GENERATOR_FILE
extern int flag_emit_class_debug_always;
#else
  int x_flag_emit_class_debug_always;
#define flag_emit_class_debug_always global_options.x_flag_emit_class_debug_always
#endif
#ifdef GENERATOR_FILE
extern int flag_enforce_eh_specs;
#else
  int x_flag_enforce_eh_specs;
#define flag_enforce_eh_specs global_options.x_flag_enforce_eh_specs
#endif
#ifdef GENERATOR_FILE
extern int flag_exceptions;
#else
  int x_flag_exceptions;
#define flag_exceptions global_options.x_flag_exceptions
#endif
#ifdef GENERATOR_FILE
extern enum excess_precision flag_excess_precision;
#else
  enum excess_precision x_flag_excess_precision;
#define flag_excess_precision global_options.x_flag_excess_precision
#endif
#ifdef GENERATOR_FILE
extern int flag_expensive_optimizations;
#else
  int x_flag_expensive_optimizations;
#define flag_expensive_optimizations global_options.x_flag_expensive_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_ext_numeric_literals;
#else
  int x_flag_ext_numeric_literals;
#define flag_ext_numeric_literals global_options.x_flag_ext_numeric_literals
#endif
#ifdef GENERATOR_FILE
extern int flag_extern_stdcpp;
#else
  int x_flag_extern_stdcpp;
#define flag_extern_stdcpp global_options.x_flag_extern_stdcpp
#endif
#ifdef GENERATOR_FILE
extern int flag_extern_tls_init;
#else
  int x_flag_extern_tls_init;
#define flag_extern_tls_init global_options.x_flag_extern_tls_init
#endif
#ifdef GENERATOR_FILE
extern int flag_external_blas;
#else
  int x_flag_external_blas;
#define flag_external_blas global_options.x_flag_external_blas
#endif
#ifdef GENERATOR_FILE
extern int flag_f2c;
#else
  int x_flag_f2c;
#define flag_f2c global_options.x_flag_f2c
#endif
#ifdef GENERATOR_FILE
extern int flag_fat_lto_objects;
#else
  int x_flag_fat_lto_objects;
#define flag_fat_lto_objects global_options.x_flag_fat_lto_objects
#endif
#ifdef GENERATOR_FILE
extern int flag_finite_loops;
#else
  int x_flag_finite_loops;
#define flag_finite_loops global_options.x_flag_finite_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_finite_math_only;
#else
  int x_flag_finite_math_only;
#define flag_finite_math_only global_options.x_flag_finite_math_only
#endif
#ifdef GENERATOR_FILE
extern int flag_fixed_line_length;
#else
  int x_flag_fixed_line_length;
#define flag_fixed_line_length global_options.x_flag_fixed_line_length
#endif
#ifdef GENERATOR_FILE
extern int flag_float_store;
#else
  int x_flag_float_store;
#define flag_float_store global_options.x_flag_float_store
#endif
#ifdef GENERATOR_FILE
extern int flag_fold_mem_offsets;
#else
  int x_flag_fold_mem_offsets;
#define flag_fold_mem_offsets global_options.x_flag_fold_mem_offsets
#endif
#ifdef GENERATOR_FILE
extern int flag_fold_simple_inlines;
#else
  int x_flag_fold_simple_inlines;
#define flag_fold_simple_inlines global_options.x_flag_fold_simple_inlines
#endif
#ifdef GENERATOR_FILE
extern int flag_forward_propagate;
#else
  int x_flag_forward_propagate;
#define flag_forward_propagate global_options.x_flag_forward_propagate
#endif
#ifdef GENERATOR_FILE
extern enum fp_contract_mode flag_fp_contract_mode;
#else
  enum fp_contract_mode x_flag_fp_contract_mode;
#define flag_fp_contract_mode global_options.x_flag_fp_contract_mode
#endif
#ifdef GENERATOR_FILE
extern int flag_fp_int_builtin_inexact;
#else
  int x_flag_fp_int_builtin_inexact;
#define flag_fp_int_builtin_inexact global_options.x_flag_fp_int_builtin_inexact
#endif
#ifdef GENERATOR_FILE
extern int flag_free_line_length;
#else
  int x_flag_free_line_length;
#define flag_free_line_length global_options.x_flag_free_line_length
#endif
#ifdef GENERATOR_FILE
extern int flag_frontend_loop_interchange;
#else
  int x_flag_frontend_loop_interchange;
#define flag_frontend_loop_interchange global_options.x_flag_frontend_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int flag_frontend_optimize;
#else
  int x_flag_frontend_optimize;
#define flag_frontend_optimize global_options.x_flag_frontend_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_no_function_cse;
#else
  int x_flag_no_function_cse;
#define flag_no_function_cse global_options.x_flag_no_function_cse
#endif
#ifdef GENERATOR_FILE
extern int flag_function_sections;
#else
  int x_flag_function_sections;
#define flag_function_sections global_options.x_flag_function_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse;
#else
  int x_flag_gcse;
#define flag_gcse global_options.x_flag_gcse
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_after_reload;
#else
  int x_flag_gcse_after_reload;
#define flag_gcse_after_reload global_options.x_flag_gcse_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_las;
#else
  int x_flag_gcse_las;
#define flag_gcse_las global_options.x_flag_gcse_las
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_lm;
#else
  int x_flag_gcse_lm;
#define flag_gcse_lm global_options.x_flag_gcse_lm
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_sm;
#else
  int x_flag_gcse_sm;
#define flag_gcse_sm global_options.x_flag_gcse_sm
#endif
#ifdef GENERATOR_FILE
extern int flag_gimple;
#else
  int x_flag_gimple;
#define flag_gimple global_options.x_flag_gimple
#endif
#ifdef GENERATOR_FILE
extern int flag_no_gnu_keywords;
#else
  int x_flag_no_gnu_keywords;
#define flag_no_gnu_keywords global_options.x_flag_no_gnu_keywords
#endif
#ifdef GENERATOR_FILE
extern int flag_next_runtime;
#else
  int x_flag_next_runtime;
#define flag_next_runtime global_options.x_flag_next_runtime
#endif
#ifdef GENERATOR_FILE
extern int flag_tm;
#else
  int x_flag_tm;
#define flag_tm global_options.x_flag_tm
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu_unique;
#else
  int x_flag_gnu_unique;
#define flag_gnu_unique global_options.x_flag_gnu_unique
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu89_inline;
#else
  int x_flag_gnu89_inline;
#define flag_gnu89_inline global_options.x_flag_gnu89_inline
#endif
#ifdef GENERATOR_FILE
extern int go_check_divide_overflow;
#else
  int x_go_check_divide_overflow;
#define go_check_divide_overflow global_options.x_go_check_divide_overflow
#endif
#ifdef GENERATOR_FILE
extern int go_check_divide_zero;
#else
  int x_go_check_divide_zero;
#define go_check_divide_zero global_options.x_go_check_divide_zero
#endif
#ifdef GENERATOR_FILE
extern int go_compiling_runtime;
#else
  int x_go_compiling_runtime;
#define go_compiling_runtime global_options.x_go_compiling_runtime
#endif
#ifdef GENERATOR_FILE
extern int go_debug_escape_level;
#else
  int x_go_debug_escape_level;
#define go_debug_escape_level global_options.x_go_debug_escape_level
#endif
#ifdef GENERATOR_FILE
extern const char *go_debug_escape_hash;
#else
  const char *x_go_debug_escape_hash;
#define go_debug_escape_hash global_options.x_go_debug_escape_hash
#endif
#ifdef GENERATOR_FILE
extern int go_debug_optimization;
#else
  int x_go_debug_optimization;
#define go_debug_optimization global_options.x_go_debug_optimization
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite;
#else
  int x_flag_graphite;
#define flag_graphite global_options.x_flag_graphite
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite_identity;
#else
  int x_flag_graphite_identity;
#define flag_graphite_identity global_options.x_flag_graphite_identity
#endif
#ifdef GENERATOR_FILE
extern int flag_guess_branch_prob;
#else
  int x_flag_guess_branch_prob;
#define flag_guess_branch_prob global_options.x_flag_guess_branch_prob
#endif
#ifdef GENERATOR_FILE
extern int flag_harden_control_flow_redundancy_check_exceptions;
#else
  int x_flag_harden_control_flow_redundancy_check_exceptions;
#define flag_harden_control_flow_redundancy_check_exceptions global_options.x_flag_harden_control_flow_redundancy_check_exceptions
#endif
#ifdef GENERATOR_FILE
extern enum hardcfr_noret flag_harden_control_flow_redundancy_check_noreturn;
#else
  enum hardcfr_noret x_flag_harden_control_flow_redundancy_check_noreturn;
#define flag_harden_control_flow_redundancy_check_noreturn global_options.x_flag_harden_control_flow_redundancy_check_noreturn
#endif
#ifdef GENERATOR_FILE
extern int flag_harden_control_flow_redundancy_check_returning_calls;
#else
  int x_flag_harden_control_flow_redundancy_check_returning_calls;
#define flag_harden_control_flow_redundancy_check_returning_calls global_options.x_flag_harden_control_flow_redundancy_check_returning_calls
#endif
#ifdef GENERATOR_FILE
extern int flag_harden_control_flow_redundancy_skip_leaf;
#else
  int x_flag_harden_control_flow_redundancy_skip_leaf;
#define flag_harden_control_flow_redundancy_skip_leaf global_options.x_flag_harden_control_flow_redundancy_skip_leaf
#endif
#ifdef GENERATOR_FILE
extern int flag_harden_compares;
#else
  int x_flag_harden_compares;
#define flag_harden_compares global_options.x_flag_harden_compares
#endif
#ifdef GENERATOR_FILE
extern int flag_harden_conditional_branches;
#else
  int x_flag_harden_conditional_branches;
#define flag_harden_conditional_branches global_options.x_flag_harden_conditional_branches
#endif
#ifdef GENERATOR_FILE
extern int flag_harden_control_flow_redundancy;
#else
  int x_flag_harden_control_flow_redundancy;
#define flag_harden_control_flow_redundancy global_options.x_flag_harden_control_flow_redundancy
#endif
#ifdef GENERATOR_FILE
extern int flag_hardened;
#else
  int x_flag_hardened;
#define flag_hardened global_options.x_flag_hardened
#endif
#ifdef GENERATOR_FILE
extern int flag_hoist_adjacent_loads;
#else
  int x_flag_hoist_adjacent_loads;
#define flag_hoist_adjacent_loads global_options.x_flag_hoist_adjacent_loads
#endif
#ifdef GENERATOR_FILE
extern int flag_no_ident;
#else
  int x_flag_no_ident;
#define flag_no_ident global_options.x_flag_no_ident
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion;
#else
  int x_flag_if_conversion;
#define flag_if_conversion global_options.x_flag_if_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion2;
#else
  int x_flag_if_conversion2;
#define flag_if_conversion2 global_options.x_flag_if_conversion2
#endif
#ifdef GENERATOR_FILE
extern int flag_immediate_escalation;
#else
  int x_flag_immediate_escalation;
#define flag_immediate_escalation global_options.x_flag_immediate_escalation
#endif
#ifdef GENERATOR_FILE
extern int flag_implement_inlines;
#else
  int x_flag_implement_inlines;
#define flag_implement_inlines global_options.x_flag_implement_inlines
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_constexpr;
#else
  int x_flag_implicit_constexpr;
#define flag_implicit_constexpr global_options.x_flag_implicit_constexpr
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_inline_templates;
#else
  int x_flag_implicit_inline_templates;
#define flag_implicit_inline_templates global_options.x_flag_implicit_inline_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_none;
#else
  int x_flag_implicit_none;
#define flag_implicit_none global_options.x_flag_implicit_none
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_templates;
#else
  int x_flag_implicit_templates;
#define flag_implicit_templates global_options.x_flag_implicit_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_inlining;
#else
  int x_flag_indirect_inlining;
#define flag_indirect_inlining global_options.x_flag_indirect_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_inhibit_size_directive;
#else
  int x_flag_inhibit_size_directive;
#define flag_inhibit_size_directive global_options.x_flag_inhibit_size_directive
#endif
#ifdef GENERATOR_FILE
extern int flag_init_derived;
#else
  int x_flag_init_derived;
#define flag_init_derived global_options.x_flag_init_derived
#endif
#ifdef GENERATOR_FILE
extern enum gfc_init_local_real flag_init_real;
#else
  enum gfc_init_local_real x_flag_init_real;
#define flag_init_real global_options.x_flag_init_real
#endif
#ifdef GENERATOR_FILE
extern int flag_no_inline;
#else
  int x_flag_no_inline;
#define flag_no_inline global_options.x_flag_no_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_arg_packing;
#else
  int x_flag_inline_arg_packing;
#define flag_inline_arg_packing global_options.x_flag_inline_arg_packing
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_atomics;
#else
  int x_flag_inline_atomics;
#define flag_inline_atomics global_options.x_flag_inline_atomics
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions;
#else
  int x_flag_inline_functions;
#define flag_inline_functions global_options.x_flag_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions_called_once;
#else
  int x_flag_inline_functions_called_once;
#define flag_inline_functions_called_once global_options.x_flag_inline_functions_called_once
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_matmul_limit;
#else
  int x_flag_inline_matmul_limit;
#define flag_inline_matmul_limit global_options.x_flag_inline_matmul_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_small_functions;
#else
  int x_flag_inline_small_functions;
#define flag_inline_small_functions global_options.x_flag_inline_small_functions
#endif
#ifdef GENERATOR_FILE
extern enum ilsop_fn flag_inline_stringops;
#else
  enum ilsop_fn x_flag_inline_stringops;
#define flag_inline_stringops global_options.x_flag_inline_stringops
#endif
#ifdef GENERATOR_FILE
extern int flag_instrument_function_entry_exit;
#else
  int x_flag_instrument_function_entry_exit;
#define flag_instrument_function_entry_exit global_options.x_flag_instrument_function_entry_exit
#endif
#ifdef GENERATOR_FILE
extern int flag_integer4_kind;
#else
  int x_flag_integer4_kind;
#define flag_integer4_kind global_options.x_flag_integer4_kind
#endif
#ifdef GENERATOR_FILE
extern int flag_invariants;
#else
  int x_flag_invariants;
#define flag_invariants global_options.x_flag_invariants
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_bit_cp;
#else
  int x_flag_ipa_bit_cp;
#define flag_ipa_bit_cp global_options.x_flag_ipa_bit_cp
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp;
#else
  int x_flag_ipa_cp;
#define flag_ipa_cp global_options.x_flag_ipa_cp
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp_clone;
#else
  int x_flag_ipa_cp_clone;
#define flag_ipa_cp_clone global_options.x_flag_ipa_cp_clone
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf;
#else
  int x_flag_ipa_icf;
#define flag_ipa_icf global_options.x_flag_ipa_icf
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf_functions;
#else
  int x_flag_ipa_icf_functions;
#define flag_ipa_icf_functions global_options.x_flag_ipa_icf_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf_variables;
#else
  int x_flag_ipa_icf_variables;
#define flag_ipa_icf_variables global_options.x_flag_ipa_icf_variables
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_modref;
#else
  int x_flag_ipa_modref;
#define flag_ipa_modref global_options.x_flag_ipa_modref
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_profile;
#else
  int x_flag_ipa_profile;
#define flag_ipa_profile global_options.x_flag_ipa_profile
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pta;
#else
  int x_flag_ipa_pta;
#define flag_ipa_pta global_options.x_flag_ipa_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pure_const;
#else
  int x_flag_ipa_pure_const;
#define flag_ipa_pure_const global_options.x_flag_ipa_pure_const
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_ra;
#else
  int x_flag_ipa_ra;
#define flag_ipa_ra global_options.x_flag_ipa_ra
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_reference;
#else
  int x_flag_ipa_reference;
#define flag_ipa_reference global_options.x_flag_ipa_reference
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_reference_addressable;
#else
  int x_flag_ipa_reference_addressable;
#define flag_ipa_reference_addressable global_options.x_flag_ipa_reference_addressable
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_sra;
#else
  int x_flag_ipa_sra;
#define flag_ipa_sra global_options.x_flag_ipa_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_stack_alignment;
#else
  int x_flag_ipa_stack_alignment;
#define flag_ipa_stack_alignment global_options.x_flag_ipa_stack_alignment
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_strict_aliasing;
#else
  int x_flag_ipa_strict_aliasing;
#define flag_ipa_strict_aliasing global_options.x_flag_ipa_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_vrp;
#else
  int x_flag_ipa_vrp;
#define flag_ipa_vrp global_options.x_flag_ipa_vrp
#endif
#ifdef GENERATOR_FILE
extern enum ira_algorithm flag_ira_algorithm;
#else
  enum ira_algorithm x_flag_ira_algorithm;
#define flag_ira_algorithm global_options.x_flag_ira_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_hoist_pressure;
#else
  int x_flag_ira_hoist_pressure;
#define flag_ira_hoist_pressure global_options.x_flag_ira_hoist_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_loop_pressure;
#else
  int x_flag_ira_loop_pressure;
#define flag_ira_loop_pressure global_options.x_flag_ira_loop_pressure
#endif
#ifdef GENERATOR_FILE
extern enum ira_region flag_ira_region;
#else
  enum ira_region x_flag_ira_region;
#define flag_ira_region global_options.x_flag_ira_region
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_save_slots;
#else
  int x_flag_ira_share_save_slots;
#define flag_ira_share_save_slots global_options.x_flag_ira_share_save_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_spill_slots;
#else
  int x_flag_ira_share_spill_slots;
#define flag_ira_share_spill_slots global_options.x_flag_ira_share_spill_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_verbose;
#else
  int x_flag_ira_verbose;
#define flag_ira_verbose global_options.x_flag_ira_verbose
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_attribute;
#else
  int x_flag_isolate_erroneous_paths_attribute;
#define flag_isolate_erroneous_paths_attribute global_options.x_flag_isolate_erroneous_paths_attribute
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_dereference;
#else
  int x_flag_isolate_erroneous_paths_dereference;
#define flag_isolate_erroneous_paths_dereference global_options.x_flag_isolate_erroneous_paths_dereference
#endif
#ifdef GENERATOR_FILE
extern enum ivar_visibility default_ivar_visibility;
#else
  enum ivar_visibility x_default_ivar_visibility;
#define default_ivar_visibility global_options.x_default_ivar_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_ivopts;
#else
  int x_flag_ivopts;
#define flag_ivopts global_options.x_flag_ivopts
#endif
#ifdef GENERATOR_FILE
extern int flag_jump_tables;
#else
  int x_flag_jump_tables;
#define flag_jump_tables global_options.x_flag_jump_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_gc_roots_live;
#else
  int x_flag_keep_gc_roots_live;
#define flag_keep_gc_roots_live global_options.x_flag_keep_gc_roots_live
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_dllexport;
#else
  int x_flag_keep_inline_dllexport;
#define flag_keep_inline_dllexport global_options.x_flag_keep_inline_dllexport
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_functions;
#else
  int x_flag_keep_inline_functions;
#define flag_keep_inline_functions global_options.x_flag_keep_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_consts;
#else
  int x_flag_keep_static_consts;
#define flag_keep_static_consts global_options.x_flag_keep_static_consts
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_functions;
#else
  int x_flag_keep_static_functions;
#define flag_keep_static_functions global_options.x_flag_keep_static_functions
#endif
#ifdef GENERATOR_FILE
extern int note_include_translate_yes;
#else
  int x_note_include_translate_yes;
#define note_include_translate_yes global_options.x_note_include_translate_yes
#endif
#ifdef GENERATOR_FILE
extern int note_include_translate_no;
#else
  int x_note_include_translate_no;
#define note_include_translate_no global_options.x_note_include_translate_no
#endif
#ifdef GENERATOR_FILE
extern int note_module_cmi_yes;
#else
  int x_note_module_cmi_yes;
#define note_module_cmi_yes global_options.x_note_module_cmi_yes
#endif
#ifdef GENERATOR_FILE
extern int flag_large_source_files;
#else
  int x_flag_large_source_files;
#define flag_large_source_files global_options.x_flag_large_source_files
#endif
#ifdef GENERATOR_FILE
extern int flag_lax_vector_conversions;
#else
  int x_flag_lax_vector_conversions;
#define flag_lax_vector_conversions global_options.x_flag_lax_vector_conversions
#endif
#ifdef GENERATOR_FILE
extern int flag_leading_underscore;
#else
  int x_flag_leading_underscore;
#define flag_leading_underscore global_options.x_flag_leading_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_lifetime_dse;
#else
  int x_flag_lifetime_dse;
#define flag_lifetime_dse global_options.x_flag_lifetime_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_limit_function_alignment;
#else
  int x_flag_limit_function_alignment;
#define flag_limit_function_alignment global_options.x_flag_limit_function_alignment
#endif
#ifdef GENERATOR_FILE
extern enum lto_linker_output flag_lto_linker_output;
#else
  enum lto_linker_output x_flag_lto_linker_output;
#define flag_lto_linker_output global_options.x_flag_lto_linker_output
#endif
#ifdef GENERATOR_FILE
extern enum live_patching_level flag_live_patching;
#else
  enum live_patching_level x_flag_live_patching;
#define flag_live_patching global_options.x_flag_live_patching
#endif
#ifdef GENERATOR_FILE
extern int flag_live_range_shrinkage;
#else
  int x_flag_live_range_shrinkage;
#define flag_live_range_shrinkage global_options.x_flag_live_range_shrinkage
#endif
#ifdef GENERATOR_FILE
extern int flag_local_ivars;
#else
  int x_flag_local_ivars;
#define flag_local_ivars global_options.x_flag_local_ivars
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_interchange;
#else
  int x_flag_loop_interchange;
#define flag_loop_interchange global_options.x_flag_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_nest_optimize;
#else
  int x_flag_loop_nest_optimize;
#define flag_loop_nest_optimize global_options.x_flag_loop_nest_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_parallelize_all;
#else
  int x_flag_loop_parallelize_all;
#define flag_loop_parallelize_all global_options.x_flag_loop_parallelize_all
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_jam;
#else
  int x_flag_unroll_jam;
#define flag_unroll_jam global_options.x_flag_unroll_jam
#endif
#ifdef GENERATOR_FILE
extern int flag_lra_remat;
#else
  int x_flag_lra_remat;
#define flag_lra_remat global_options.x_flag_lra_remat
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_compression_level;
#else
  int x_flag_lto_compression_level;
#define flag_lto_compression_level global_options.x_flag_lto_compression_level
#endif
#ifdef GENERATOR_FILE
extern enum lto_partition_model flag_lto_partition;
#else
  enum lto_partition_model x_flag_lto_partition;
#define flag_lto_partition global_options.x_flag_lto_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report;
#else
  int x_flag_lto_report;
#define flag_lto_report global_options.x_flag_lto_report
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report_wpa;
#else
  int x_flag_lto_report_wpa;
#define flag_lto_report_wpa global_options.x_flag_lto_report_wpa
#endif
#ifdef GENERATOR_FILE
extern const char *flag_lto;
#else
  const char *x_flag_lto;
#define flag_lto global_options.x_flag_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans;
#else
  int x_flag_ltrans;
#define flag_ltrans global_options.x_flag_ltrans
#endif
#ifdef GENERATOR_FILE
extern const char *ltrans_output_list;
#else
  const char *x_ltrans_output_list;
#define ltrans_output_list global_options.x_ltrans_output_list
#endif
#ifdef GENERATOR_FILE
extern int flag_errno_math;
#else
  int x_flag_errno_math;
#define flag_errno_math global_options.x_flag_errno_math
#endif
#ifdef GENERATOR_FILE
extern int flag_max_array_constructor;
#else
  int x_flag_max_array_constructor;
#define flag_max_array_constructor global_options.x_flag_max_array_constructor
#endif
#ifdef GENERATOR_FILE
extern int flag_max_errors;
#else
  int x_flag_max_errors;
#define flag_max_errors global_options.x_flag_max_errors
#endif
#ifdef GENERATOR_FILE
extern int flag_max_stack_var_size;
#else
  int x_flag_max_stack_var_size;
#define flag_max_stack_var_size global_options.x_flag_max_stack_var_size
#endif
#ifdef GENERATOR_FILE
extern int flag_max_subrecord_length;
#else
  int x_flag_max_subrecord_length;
#define flag_max_subrecord_length global_options.x_flag_max_subrecord_length
#endif
#ifdef GENERATOR_FILE
extern int mem_report;
#else
  int x_mem_report;
#define mem_report global_options.x_mem_report
#endif
#ifdef GENERATOR_FILE
extern int mem_report_wpa;
#else
  int x_mem_report_wpa;
#define mem_report_wpa global_options.x_mem_report_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_constants;
#else
  int x_flag_merge_constants;
#define flag_merge_constants global_options.x_flag_merge_constants
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_debug_strings;
#else
  int x_flag_merge_debug_strings;
#define flag_merge_debug_strings global_options.x_flag_merge_debug_strings
#endif
#ifdef GENERATOR_FILE
extern int flag_min_function_alignment;
#else
  int x_flag_min_function_alignment;
#define flag_min_function_alignment global_options.x_flag_min_function_alignment
#endif
#ifdef GENERATOR_FILE
extern int flag_header_unit;
#else
  int x_flag_header_unit;
#define flag_header_unit global_options.x_flag_header_unit
#endif
#ifdef GENERATOR_FILE
extern int flag_module_implicit_inline;
#else
  int x_flag_module_implicit_inline;
#define flag_module_implicit_inline global_options.x_flag_module_implicit_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_module_lazy;
#else
  int x_flag_module_lazy;
#define flag_module_lazy global_options.x_flag_module_lazy
#endif
#ifdef GENERATOR_FILE
extern int flag_module_only;
#else
  int x_flag_module_only;
#define flag_module_only global_options.x_flag_module_only
#endif
#ifdef GENERATOR_FILE
extern int flag_module_private;
#else
  int x_flag_module_private;
#define flag_module_private global_options.x_flag_module_private
#endif
#ifdef GENERATOR_FILE
extern int flag_module_version_ignore;
#else
  int x_flag_module_version_ignore;
#define flag_module_version_ignore global_options.x_flag_module_version_ignore
#endif
#ifdef GENERATOR_FILE
extern int flag_moduleinfo;
#else
  int x_flag_moduleinfo;
#define flag_moduleinfo global_options.x_flag_moduleinfo
#endif
#ifdef GENERATOR_FILE
extern int flag_modules;
#else
  int x_flag_modules;
#define flag_modules global_options.x_flag_modules
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched;
#else
  int x_flag_modulo_sched;
#define flag_modulo_sched global_options.x_flag_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched_allow_regmoves;
#else
  int x_flag_modulo_sched_allow_regmoves;
#define flag_modulo_sched_allow_regmoves global_options.x_flag_modulo_sched_allow_regmoves
#endif
#ifdef GENERATOR_FILE
extern int flag_move_loop_invariants;
#else
  int x_flag_move_loop_invariants;
#define flag_move_loop_invariants global_options.x_flag_move_loop_invariants
#endif
#ifdef GENERATOR_FILE
extern int flag_move_loop_stores;
#else
  int x_flag_move_loop_stores;
#define flag_move_loop_stores global_options.x_flag_move_loop_stores
#endif
#ifdef GENERATOR_FILE
extern int flag_ms_extensions;
#else
  int x_flag_ms_extensions;
#define flag_ms_extensions global_options.x_flag_ms_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_new_inheriting_ctors;
#else
  int x_flag_new_inheriting_ctors;
#define flag_new_inheriting_ctors global_options.x_flag_new_inheriting_ctors
#endif
#ifdef GENERATOR_FILE
extern int flag_new_ttp;
#else
  int x_flag_new_ttp;
#define flag_new_ttp global_options.x_flag_new_ttp
#endif
#ifdef GENERATOR_FILE
extern int flag_nil_receivers;
#else
  int x_flag_nil_receivers;
#define flag_nil_receivers global_options.x_flag_nil_receivers
#endif
#ifdef GENERATOR_FILE
extern int flag_non_call_exceptions;
#else
  int x_flag_non_call_exceptions;
#define flag_non_call_exceptions global_options.x_flag_non_call_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_no_nonansi_builtin;
#else
  int x_flag_no_nonansi_builtin;
#define flag_no_nonansi_builtin global_options.x_flag_no_nonansi_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_nothrow_opt;
#else
  int x_flag_nothrow_opt;
#define flag_nothrow_opt global_options.x_flag_nothrow_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_abi;
#else
  int x_flag_objc_abi;
#define flag_objc_abi global_options.x_flag_objc_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_call_cxx_cdtors;
#else
  int x_flag_objc_call_cxx_cdtors;
#define flag_objc_call_cxx_cdtors global_options.x_flag_objc_call_cxx_cdtors
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_direct_dispatch;
#else
  int x_flag_objc_direct_dispatch;
#define flag_objc_direct_dispatch global_options.x_flag_objc_direct_dispatch
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_exceptions;
#else
  int x_flag_objc_exceptions;
#define flag_objc_exceptions global_options.x_flag_objc_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_gc;
#else
  int x_flag_objc_gc;
#define flag_objc_gc global_options.x_flag_objc_gc
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_nilcheck;
#else
  int x_flag_objc_nilcheck;
#define flag_objc_nilcheck global_options.x_flag_objc_nilcheck
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_sjlj_exceptions;
#else
  int x_flag_objc_sjlj_exceptions;
#define flag_objc_sjlj_exceptions global_options.x_flag_objc_sjlj_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc1_only;
#else
  int x_flag_objc1_only;
#define flag_objc1_only global_options.x_flag_objc1_only
#endif
#ifdef GENERATOR_FILE
extern int flag_omit_frame_pointer;
#else
  int x_flag_omit_frame_pointer;
#define flag_omit_frame_pointer global_options.x_flag_omit_frame_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_openacc;
#else
  int x_flag_openacc;
#define flag_openacc global_options.x_flag_openacc
#endif
#ifdef GENERATOR_FILE
extern const char *flag_openacc_dims;
#else
  const char *x_flag_openacc_dims;
#define flag_openacc_dims global_options.x_flag_openacc_dims
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp;
#else
  int x_flag_openmp;
#define flag_openmp global_options.x_flag_openmp
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp_allocators;
#else
  int x_flag_openmp_allocators;
#define flag_openmp_allocators global_options.x_flag_openmp_allocators
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp_simd;
#else
  int x_flag_openmp_simd;
#define flag_openmp_simd global_options.x_flag_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp_target_simd_clone;
#else
  int x_flag_openmp_target_simd_clone;
#define flag_openmp_target_simd_clone global_options.x_flag_openmp_target_simd_clone
#endif
#ifdef GENERATOR_FILE
extern int flag_opt_info;
#else
  int x_flag_opt_info;
#define flag_opt_info global_options.x_flag_opt_info
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_sibling_calls;
#else
  int x_flag_optimize_sibling_calls;
#define flag_optimize_sibling_calls global_options.x_flag_optimize_sibling_calls
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_strlen;
#else
  int x_flag_optimize_strlen;
#define flag_optimize_strlen global_options.x_flag_optimize_strlen
#endif
#ifdef GENERATOR_FILE
extern int flag_pack_derived;
#else
  int x_flag_pack_derived;
#define flag_pack_derived global_options.x_flag_pack_derived
#endif
#ifdef GENERATOR_FILE
extern int flag_pack_struct;
#else
  int x_flag_pack_struct;
#define flag_pack_struct global_options.x_flag_pack_struct
#endif
#ifdef GENERATOR_FILE
extern int flag_pad_source;
#else
  int x_flag_pad_source;
#define flag_pad_source global_options.x_flag_pad_source
#endif
#ifdef GENERATOR_FILE
extern int flag_partial_inlining;
#else
  int x_flag_partial_inlining;
#define flag_partial_inlining global_options.x_flag_partial_inlining
#endif
#ifdef GENERATOR_FILE
extern const char *flag_patchable_function_entry;
#else
  const char *x_flag_patchable_function_entry;
#define flag_patchable_function_entry global_options.x_flag_patchable_function_entry
#endif
#ifdef GENERATOR_FILE
extern int flag_pcc_struct_return;
#else
  int x_flag_pcc_struct_return;
#define flag_pcc_struct_return global_options.x_flag_pcc_struct_return
#endif
#ifdef GENERATOR_FILE
extern int flag_peel_loops;
#else
  int x_flag_peel_loops;
#define flag_peel_loops global_options.x_flag_peel_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_no_peephole;
#else
  int x_flag_no_peephole;
#define flag_no_peephole global_options.x_flag_no_peephole
#endif
#ifdef GENERATOR_FILE
extern int flag_peephole2;
#else
  int x_flag_peephole2;
#define flag_peephole2 global_options.x_flag_peephole2
#endif
#ifdef GENERATOR_FILE
extern int flag_permissive;
#else
  int x_flag_permissive;
#define flag_permissive global_options.x_flag_permissive
#endif
#ifdef GENERATOR_FILE
extern enum permitted_flt_eval_methods flag_permitted_flt_eval_methods;
#else
  enum permitted_flt_eval_methods x_flag_permitted_flt_eval_methods;
#define flag_permitted_flt_eval_methods global_options.x_flag_permitted_flt_eval_methods
#endif
#ifdef GENERATOR_FILE
extern int flag_plan9_extensions;
#else
  int x_flag_plan9_extensions;
#define flag_plan9_extensions global_options.x_flag_plan9_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_plt;
#else
  int x_flag_plt;
#define flag_plt global_options.x_flag_plt
#endif
#ifdef GENERATOR_FILE
extern int post_ipa_mem_report;
#else
  int x_post_ipa_mem_report;
#define post_ipa_mem_report global_options.x_post_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_postconditions;
#else
  int x_flag_postconditions;
#define flag_postconditions global_options.x_flag_postconditions
#endif
#ifdef GENERATOR_FILE
extern const char *flag_pre_include;
#else
  const char *x_flag_pre_include;
#define flag_pre_include global_options.x_flag_pre_include
#endif
#ifdef GENERATOR_FILE
extern int pre_ipa_mem_report;
#else
  int x_pre_ipa_mem_report;
#define pre_ipa_mem_report global_options.x_pre_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_preconditions;
#else
  int x_flag_preconditions;
#define flag_preconditions global_options.x_flag_preconditions
#endif
#ifdef GENERATOR_FILE
extern int flag_predictive_commoning;
#else
  int x_flag_predictive_commoning;
#define flag_predictive_commoning global_options.x_flag_predictive_commoning
#endif
#ifdef GENERATOR_FILE
extern int flag_prefetch_loop_arrays;
#else
  int x_flag_prefetch_loop_arrays;
#define flag_prefetch_loop_arrays global_options.x_flag_prefetch_loop_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_pretty_templates;
#else
  int x_flag_pretty_templates;
#define flag_pretty_templates global_options.x_flag_pretty_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_printf_return_value;
#else
  int x_flag_printf_return_value;
#define flag_printf_return_value global_options.x_flag_printf_return_value
#endif
#ifdef GENERATOR_FILE
extern int profile_flag;
#else
  int x_profile_flag;
#define profile_flag global_options.x_profile_flag
#endif
#ifdef GENERATOR_FILE
extern int profile_abs_path_flag;
#else
  int x_profile_abs_path_flag;
#define profile_abs_path_flag global_options.x_profile_abs_path_flag
#endif
#ifdef GENERATOR_FILE
extern int profile_arc_flag;
#else
  int x_profile_arc_flag;
#define profile_arc_flag global_options.x_profile_arc_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_correction;
#else
  int x_flag_profile_correction;
#define flag_profile_correction global_options.x_flag_profile_correction
#endif
#ifdef GENERATOR_FILE
extern const char *profile_data_prefix;
#else
  const char *x_profile_data_prefix;
#define profile_data_prefix global_options.x_profile_data_prefix
#endif
#ifdef GENERATOR_FILE
extern const char *flag_profile_exclude_files;
#else
  const char *x_flag_profile_exclude_files;
#define flag_profile_exclude_files global_options.x_flag_profile_exclude_files
#endif
#ifdef GENERATOR_FILE
extern const char *flag_profile_filter_files;
#else
  const char *x_flag_profile_filter_files;
#define flag_profile_filter_files global_options.x_flag_profile_filter_files
#endif
#ifdef GENERATOR_FILE
extern const char *profile_info_section;
#else
  const char *x_profile_info_section;
#define profile_info_section global_options.x_profile_info_section
#endif
#ifdef GENERATOR_FILE
extern const char *profile_note_location;
#else
  const char *x_profile_note_location;
#define profile_note_location global_options.x_profile_note_location
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_partial_training;
#else
  int x_flag_profile_partial_training;
#define flag_profile_partial_training global_options.x_flag_profile_partial_training
#endif
#ifdef GENERATOR_FILE
extern const char *profile_prefix_path;
#else
  const char *x_profile_prefix_path;
#define profile_prefix_path global_options.x_profile_prefix_path
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_reorder_functions;
#else
  int x_flag_profile_reorder_functions;
#define flag_profile_reorder_functions global_options.x_flag_profile_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int profile_report;
#else
  int x_profile_report;
#define profile_report global_options.x_profile_report
#endif
#ifdef GENERATOR_FILE
extern enum profile_reproducibility flag_profile_reproducible;
#else
  enum profile_reproducibility x_flag_profile_reproducible;
#define flag_profile_reproducible global_options.x_flag_profile_reproducible
#endif
#ifdef GENERATOR_FILE
extern enum profile_update flag_profile_update;
#else
  enum profile_update x_flag_profile_update;
#define flag_profile_update global_options.x_flag_profile_update
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_use;
#else
  int x_flag_profile_use;
#define flag_profile_use global_options.x_flag_profile_use
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_values;
#else
  int x_flag_profile_values;
#define flag_profile_values global_options.x_flag_profile_values
#endif
#ifdef GENERATOR_FILE
extern int flag_protect_parens;
#else
  int x_flag_protect_parens;
#define flag_protect_parens global_options.x_flag_protect_parens
#endif
#ifdef GENERATOR_FILE
extern int flag_range_check;
#else
  int x_flag_range_check;
#define flag_range_check global_options.x_flag_range_check
#endif
#ifdef GENERATOR_FILE
extern int flag_real4_kind;
#else
  int x_flag_real4_kind;
#define flag_real4_kind global_options.x_flag_real4_kind
#endif
#ifdef GENERATOR_FILE
extern int flag_real8_kind;
#else
  int x_flag_real8_kind;
#define flag_real8_kind global_options.x_flag_real8_kind
#endif
#ifdef GENERATOR_FILE
extern int flag_realloc_lhs;
#else
  int x_flag_realloc_lhs;
#define flag_realloc_lhs global_options.x_flag_realloc_lhs
#endif
#ifdef GENERATOR_FILE
extern int flag_reciprocal_math;
#else
  int x_flag_reciprocal_math;
#define flag_reciprocal_math global_options.x_flag_reciprocal_math
#endif
#ifdef GENERATOR_FILE
extern int flag_record_gcc_switches;
#else
  int x_flag_record_gcc_switches;
#define flag_record_gcc_switches global_options.x_flag_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int flag_record_marker;
#else
  int x_flag_record_marker;
#define flag_record_marker global_options.x_flag_record_marker
#endif
#ifdef GENERATOR_FILE
extern int flag_recursive;
#else
  int x_flag_recursive;
#define flag_recursive global_options.x_flag_recursive
#endif
#ifdef GENERATOR_FILE
extern int flag_ree;
#else
  int x_flag_ree;
#define flag_ree global_options.x_flag_ree
#endif
#ifdef GENERATOR_FILE
extern int flag_rename_registers;
#else
  int x_flag_rename_registers;
#define flag_rename_registers global_options.x_flag_rename_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks;
#else
  int x_flag_reorder_blocks;
#define flag_reorder_blocks global_options.x_flag_reorder_blocks
#endif
#ifdef GENERATOR_FILE
extern enum reorder_blocks_algorithm flag_reorder_blocks_algorithm;
#else
  enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;
#define flag_reorder_blocks_algorithm global_options.x_flag_reorder_blocks_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks_and_partition;
#else
  int x_flag_reorder_blocks_and_partition;
#define flag_reorder_blocks_and_partition global_options.x_flag_reorder_blocks_and_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_functions;
#else
  int x_flag_reorder_functions;
#define flag_reorder_functions global_options.x_flag_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_repack_arrays;
#else
  int x_flag_repack_arrays;
#define flag_repack_arrays global_options.x_flag_repack_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_replace_objc_classes;
#else
  int x_flag_replace_objc_classes;
#define flag_replace_objc_classes global_options.x_flag_replace_objc_classes
#endif
#ifdef GENERATOR_FILE
extern int flag_report_bug;
#else
  int x_flag_report_bug;
#define flag_report_bug global_options.x_flag_report_bug
#endif
#ifdef GENERATOR_FILE
extern int go_require_return_statement;
#else
  int x_go_require_return_statement;
#define go_require_return_statement global_options.x_go_require_return_statement
#endif
#ifdef GENERATOR_FILE
extern int flag_rerun_cse_after_loop;
#else
  int x_flag_rerun_cse_after_loop;
#define flag_rerun_cse_after_loop global_options.x_flag_rerun_cse_after_loop
#endif
#ifdef GENERATOR_FILE
extern int flag_resched_modulo_sched;
#else
  int x_flag_resched_modulo_sched;
#define flag_resched_modulo_sched global_options.x_flag_resched_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_rounding_math;
#else
  int x_flag_rounding_math;
#define flag_rounding_math global_options.x_flag_rounding_math
#endif
#ifdef GENERATOR_FILE
extern int flag_rtti;
#else
  int x_flag_rtti;
#define flag_rtti global_options.x_flag_rtti
#endif
#ifdef GENERATOR_FILE
extern int flag_borrowcheck;
#else
  int x_flag_borrowcheck;
#define flag_borrowcheck global_options.x_flag_borrowcheck
#endif
#ifdef GENERATOR_FILE
extern int flag_rust_compile_until;
#else
  int x_flag_rust_compile_until;
#define flag_rust_compile_until global_options.x_flag_rust_compile_until
#endif
#ifdef GENERATOR_FILE
extern int flag_rust_crate_type;
#else
  int x_flag_rust_crate_type;
#define flag_rust_crate_type global_options.x_flag_rust_crate_type
#endif
#ifdef GENERATOR_FILE
extern int flag_rust_debug;
#else
  int x_flag_rust_debug;
#define flag_rust_debug global_options.x_flag_rust_debug
#endif
#ifdef GENERATOR_FILE
extern int flag_rust_edition;
#else
  int x_flag_rust_edition;
#define flag_rust_edition global_options.x_flag_rust_edition
#endif
#ifdef GENERATOR_FILE
extern int flag_rust_embed_metadata;
#else
  int x_flag_rust_embed_metadata;
#define flag_rust_embed_metadata global_options.x_flag_rust_embed_metadata
#endif
#ifdef GENERATOR_FILE
extern int flag_rust_experimental;
#else
  int x_flag_rust_experimental;
#define flag_rust_experimental global_options.x_flag_rust_experimental
#endif
#ifdef GENERATOR_FILE
extern int flag_rust_mangling;
#else
  int x_flag_rust_mangling;
#define flag_rust_mangling global_options.x_flag_rust_mangling
#endif
#ifdef GENERATOR_FILE
extern int rust_max_recursion_depth;
#else
  int x_rust_max_recursion_depth;
#define rust_max_recursion_depth global_options.x_rust_max_recursion_depth
#endif
#ifdef GENERATOR_FILE
extern int flag_name_resolution_2_0;
#else
  int x_flag_name_resolution_2_0;
#define flag_name_resolution_2_0 global_options.x_flag_name_resolution_2_0
#endif
#ifdef GENERATOR_FILE
extern int flag_sanitize_address_use_after_scope;
#else
  int x_flag_sanitize_address_use_after_scope;
#define flag_sanitize_address_use_after_scope global_options.x_flag_sanitize_address_use_after_scope
#endif
#ifdef GENERATOR_FILE
extern int flag_sanitize_coverage;
#else
  int x_flag_sanitize_coverage;
#define flag_sanitize_coverage global_options.x_flag_sanitize_coverage
#endif
#ifdef GENERATOR_FILE
extern int flag_save_optimization_record;
#else
  int x_flag_save_optimization_record;
#define flag_save_optimization_record global_options.x_flag_save_optimization_record
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_critical_path_heuristic;
#else
  int x_flag_sched_critical_path_heuristic;
#define flag_sched_critical_path_heuristic global_options.x_flag_sched_critical_path_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_dep_count_heuristic;
#else
  int x_flag_sched_dep_count_heuristic;
#define flag_sched_dep_count_heuristic global_options.x_flag_sched_dep_count_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_group_heuristic;
#else
  int x_flag_sched_group_heuristic;
#define flag_sched_group_heuristic global_options.x_flag_sched_group_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_interblock;
#else
  int x_flag_schedule_interblock;
#define flag_schedule_interblock global_options.x_flag_schedule_interblock
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_last_insn_heuristic;
#else
  int x_flag_sched_last_insn_heuristic;
#define flag_sched_last_insn_heuristic global_options.x_flag_sched_last_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_pressure;
#else
  int x_flag_sched_pressure;
#define flag_sched_pressure global_options.x_flag_sched_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_rank_heuristic;
#else
  int x_flag_sched_rank_heuristic;
#define flag_sched_rank_heuristic global_options.x_flag_sched_rank_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative;
#else
  int x_flag_schedule_speculative;
#define flag_schedule_speculative global_options.x_flag_schedule_speculative
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_spec_insn_heuristic;
#else
  int x_flag_sched_spec_insn_heuristic;
#define flag_sched_spec_insn_heuristic global_options.x_flag_sched_spec_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load;
#else
  int x_flag_schedule_speculative_load;
#define flag_schedule_speculative_load global_options.x_flag_schedule_speculative_load
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load_dangerous;
#else
  int x_flag_schedule_speculative_load_dangerous;
#define flag_schedule_speculative_load_dangerous global_options.x_flag_schedule_speculative_load_dangerous
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns;
#else
  int x_flag_sched_stalled_insns;
#define flag_sched_stalled_insns global_options.x_flag_sched_stalled_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns_dep;
#else
  int x_flag_sched_stalled_insns_dep;
#define flag_sched_stalled_insns_dep global_options.x_flag_sched_stalled_insns_dep
#endif
#ifdef GENERATOR_FILE
extern int sched_verbose_param;
#else
  int x_sched_verbose_param;
#define sched_verbose_param global_options.x_sched_verbose_param
#endif
#ifdef GENERATOR_FILE
extern int flag_sched2_use_superblocks;
#else
  int x_flag_sched2_use_superblocks;
#define flag_sched2_use_superblocks global_options.x_flag_sched2_use_superblocks
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_fusion;
#else
  int x_flag_schedule_fusion;
#define flag_schedule_fusion global_options.x_flag_schedule_fusion
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns;
#else
  int x_flag_schedule_insns;
#define flag_schedule_insns global_options.x_flag_schedule_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns_after_reload;
#else
  int x_flag_schedule_insns_after_reload;
#define flag_schedule_insns_after_reload global_options.x_flag_schedule_insns_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_second_underscore;
#else
  int x_flag_second_underscore;
#define flag_second_underscore global_options.x_flag_second_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_section_anchors;
#else
  int x_flag_section_anchors;
#define flag_section_anchors global_options.x_flag_section_anchors
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining;
#else
  int x_flag_sel_sched_pipelining;
#define flag_sel_sched_pipelining global_options.x_flag_sel_sched_pipelining
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining_outer_loops;
#else
  int x_flag_sel_sched_pipelining_outer_loops;
#define flag_sel_sched_pipelining_outer_loops global_options.x_flag_sel_sched_pipelining_outer_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_reschedule_pipelined;
#else
  int x_flag_sel_sched_reschedule_pipelined;
#define flag_sel_sched_reschedule_pipelined global_options.x_flag_sel_sched_reschedule_pipelined
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling;
#else
  int x_flag_selective_scheduling;
#define flag_selective_scheduling global_options.x_flag_selective_scheduling
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling2;
#else
  int x_flag_selective_scheduling2;
#define flag_selective_scheduling2 global_options.x_flag_selective_scheduling2
#endif
#ifdef GENERATOR_FILE
extern const char *flag_self_test;
#else
  const char *x_flag_self_test;
#define flag_self_test global_options.x_flag_self_test
#endif
#ifdef GENERATOR_FILE
extern int flag_semantic_interposition;
#else
  int x_flag_semantic_interposition;
#define flag_semantic_interposition global_options.x_flag_semantic_interposition
#endif
#ifdef GENERATOR_FILE
extern int flag_short_enums;
#else
  int x_flag_short_enums;
#define flag_short_enums global_options.x_flag_short_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_short_wchar;
#else
  int x_flag_short_wchar;
#define flag_short_wchar global_options.x_flag_short_wchar
#endif
#ifdef GENERATOR_FILE
extern int flag_show_column;
#else
  int x_flag_show_column;
#define flag_show_column global_options.x_flag_show_column
#endif
#ifdef GENERATOR_FILE
extern int flag_shrink_wrap;
#else
  int x_flag_shrink_wrap;
#define flag_shrink_wrap global_options.x_flag_shrink_wrap
#endif
#ifdef GENERATOR_FILE
extern int flag_shrink_wrap_separate;
#else
  int x_flag_shrink_wrap_separate;
#define flag_shrink_wrap_separate global_options.x_flag_shrink_wrap_separate
#endif
#ifdef GENERATOR_FILE
extern int flag_sign_zero;
#else
  int x_flag_sign_zero;
#define flag_sign_zero global_options.x_flag_sign_zero
#endif
#ifdef GENERATOR_FILE
extern int flag_signaling_nans;
#else
  int x_flag_signaling_nans;
#define flag_signaling_nans global_options.x_flag_signaling_nans
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_bitfields;
#else
  int x_flag_signed_bitfields;
#define flag_signed_bitfields global_options.x_flag_signed_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_char;
#else
  int x_flag_signed_char;
#define flag_signed_char global_options.x_flag_signed_char
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_zeros;
#else
  int x_flag_signed_zeros;
#define flag_signed_zeros global_options.x_flag_signed_zeros
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_simd_cost_model;
#else
  enum vect_cost_model x_flag_simd_cost_model;
#define flag_simd_cost_model global_options.x_flag_simd_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_single_precision_constant;
#else
  int x_flag_single_precision_constant;
#define flag_single_precision_constant global_options.x_flag_single_precision_constant
#endif
#ifdef GENERATOR_FILE
extern int flag_sized_deallocation;
#else
  int x_flag_sized_deallocation;
#define flag_sized_deallocation global_options.x_flag_sized_deallocation
#endif
#ifdef GENERATOR_FILE
extern int flag_split_ivs_in_unroller;
#else
  int x_flag_split_ivs_in_unroller;
#define flag_split_ivs_in_unroller global_options.x_flag_split_ivs_in_unroller
#endif
#ifdef GENERATOR_FILE
extern int flag_split_loops;
#else
  int x_flag_split_loops;
#define flag_split_loops global_options.x_flag_split_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_split_paths;
#else
  int x_flag_split_paths;
#define flag_split_paths global_options.x_flag_split_paths
#endif
#ifdef GENERATOR_FILE
extern int flag_split_stack;
#else
  int x_flag_split_stack;
#define flag_split_stack global_options.x_flag_split_stack
#endif
#ifdef GENERATOR_FILE
extern int flag_split_wide_types;
#else
  int x_flag_split_wide_types;
#define flag_split_wide_types global_options.x_flag_split_wide_types
#endif
#ifdef GENERATOR_FILE
extern int flag_split_wide_types_early;
#else
  int x_flag_split_wide_types_early;
#define flag_split_wide_types_early global_options.x_flag_split_wide_types_early
#endif
#ifdef GENERATOR_FILE
extern int flag_ssa_backprop;
#else
  int x_flag_ssa_backprop;
#define flag_ssa_backprop global_options.x_flag_ssa_backprop
#endif
#ifdef GENERATOR_FILE
extern int flag_ssa_phiopt;
#else
  int x_flag_ssa_phiopt;
#define flag_ssa_phiopt global_options.x_flag_ssa_phiopt
#endif
#ifdef GENERATOR_FILE
extern enum scalar_storage_order_kind default_sso;
#else
  enum scalar_storage_order_kind x_default_sso;
#define default_sso global_options.x_default_sso
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_arrays;
#else
  int x_flag_stack_arrays;
#define flag_stack_arrays global_options.x_flag_stack_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_clash_protection;
#else
  int x_flag_stack_clash_protection;
#define flag_stack_clash_protection global_options.x_flag_stack_clash_protection
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_protect;
#else
  int x_flag_stack_protect;
#define flag_stack_protect global_options.x_flag_stack_protect
#endif
#ifdef GENERATOR_FILE
extern enum stack_reuse_level flag_stack_reuse;
#else
  enum stack_reuse_level x_flag_stack_reuse;
#define flag_stack_reuse global_options.x_flag_stack_reuse
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_usage;
#else
  int x_flag_stack_usage;
#define flag_stack_usage global_options.x_flag_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int flag_detailed_statistics;
#else
  int x_flag_detailed_statistics;
#define flag_detailed_statistics global_options.x_flag_detailed_statistics
#endif
#ifdef GENERATOR_FILE
extern int flag_stdarg_opt;
#else
  int x_flag_stdarg_opt;
#define flag_stdarg_opt global_options.x_flag_stdarg_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_store_merging;
#else
  int x_flag_store_merging;
#define flag_store_merging global_options.x_flag_store_merging
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_aliasing;
#else
  int x_flag_strict_aliasing;
#define flag_strict_aliasing global_options.x_flag_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_enums;
#else
  int x_flag_strict_enums;
#define flag_strict_enums global_options.x_flag_strict_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_flex_arrays;
#else
  int x_flag_strict_flex_arrays;
#define flag_strict_flex_arrays global_options.x_flag_strict_flex_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_volatile_bitfields;
#else
  int x_flag_strict_volatile_bitfields;
#define flag_strict_volatile_bitfields global_options.x_flag_strict_volatile_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_strong_eval_order;
#else
  int x_flag_strong_eval_order;
#define flag_strong_eval_order global_options.x_flag_strong_eval_order
#endif
#ifdef GENERATOR_FILE
extern int flag_strub;
#else
  int x_flag_strub;
#define flag_strub global_options.x_flag_strub
#endif
#ifdef GENERATOR_FILE
extern int flag_switch_errors;
#else
  int x_flag_switch_errors;
#define flag_switch_errors global_options.x_flag_switch_errors
#endif
#ifdef GENERATOR_FILE
extern int flag_sync_libcalls;
#else
  int x_flag_sync_libcalls;
#define flag_sync_libcalls global_options.x_flag_sync_libcalls
#endif
#ifdef GENERATOR_FILE
extern int flag_syntax_only;
#else
  int x_flag_syntax_only;
#define flag_syntax_only global_options.x_flag_syntax_only
#endif
#ifdef GENERATOR_FILE
extern int flag_tail_call_workaround;
#else
  int x_flag_tail_call_workaround;
#define flag_tail_call_workaround global_options.x_flag_tail_call_workaround
#endif
#ifdef GENERATOR_FILE
extern int template_backtrace_limit;
#else
  int x_template_backtrace_limit;
#define template_backtrace_limit global_options.x_template_backtrace_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_test_coverage;
#else
  int x_flag_test_coverage;
#define flag_test_coverage global_options.x_flag_test_coverage
#endif
#ifdef GENERATOR_FILE
extern int flag_test_forall_temp;
#else
  int x_flag_test_forall_temp;
#define flag_test_forall_temp global_options.x_flag_test_forall_temp
#endif
#ifdef GENERATOR_FILE
extern int flag_thread_jumps;
#else
  int x_flag_thread_jumps;
#define flag_thread_jumps global_options.x_flag_thread_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_threadsafe_statics;
#else
  int x_flag_threadsafe_statics;
#define flag_threadsafe_statics global_options.x_flag_threadsafe_statics
#endif
#ifdef GENERATOR_FILE
extern int time_report;
#else
  int x_time_report;
#define time_report global_options.x_time_report
#endif
#ifdef GENERATOR_FILE
extern int time_report_details;
#else
  int x_time_report_details;
#define time_report_details global_options.x_time_report_details
#endif
#ifdef GENERATOR_FILE
extern enum tls_model flag_tls_default;
#else
  enum tls_model x_flag_tls_default;
#define flag_tls_default global_options.x_flag_tls_default
#endif
#ifdef GENERATOR_FILE
extern int flag_toplevel_reorder;
#else
  int x_flag_toplevel_reorder;
#define flag_toplevel_reorder global_options.x_flag_toplevel_reorder
#endif
#ifdef GENERATOR_FILE
extern int flag_tracer;
#else
  int x_flag_tracer;
#define flag_tracer global_options.x_flag_tracer
#endif
#ifdef GENERATOR_FILE
extern enum trampoline_impl flag_trampoline_impl;
#else
  enum trampoline_impl x_flag_trampoline_impl;
#define flag_trampoline_impl global_options.x_flag_trampoline_impl
#endif
#ifdef GENERATOR_FILE
extern int flag_trampolines;
#else
  int x_flag_trampolines;
#define flag_trampolines global_options.x_flag_trampolines
#endif
#ifdef GENERATOR_FILE
extern int flag_trapping_math;
#else
  int x_flag_trapping_math;
#define flag_trapping_math global_options.x_flag_trapping_math
#endif
#ifdef GENERATOR_FILE
extern int flag_trapv;
#else
  int x_flag_trapv;
#define flag_trapv global_options.x_flag_trapv
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_bit_ccp;
#else
  int x_flag_tree_bit_ccp;
#define flag_tree_bit_ccp global_options.x_flag_tree_bit_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_builtin_call_dce;
#else
  int x_flag_tree_builtin_call_dce;
#define flag_tree_builtin_call_dce global_options.x_flag_tree_builtin_call_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ccp;
#else
  int x_flag_tree_ccp;
#define flag_tree_ccp global_options.x_flag_tree_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ch;
#else
  int x_flag_tree_ch;
#define flag_tree_ch global_options.x_flag_tree_ch
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_coalesce_vars;
#else
  int x_flag_tree_coalesce_vars;
#define flag_tree_coalesce_vars global_options.x_flag_tree_coalesce_vars
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_copy_prop;
#else
  int x_flag_tree_copy_prop;
#define flag_tree_copy_prop global_options.x_flag_tree_copy_prop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_cselim;
#else
  int x_flag_tree_cselim;
#define flag_tree_cselim global_options.x_flag_tree_cselim
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dce;
#else
  int x_flag_tree_dce;
#define flag_tree_dce global_options.x_flag_tree_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dom;
#else
  int x_flag_tree_dom;
#define flag_tree_dom global_options.x_flag_tree_dom
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dse;
#else
  int x_flag_tree_dse;
#define flag_tree_dse global_options.x_flag_tree_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_forwprop;
#else
  int x_flag_tree_forwprop;
#define flag_tree_forwprop global_options.x_flag_tree_forwprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_fre;
#else
  int x_flag_tree_fre;
#define flag_tree_fre global_options.x_flag_tree_fre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribute_patterns;
#else
  int x_flag_tree_loop_distribute_patterns;
#define flag_tree_loop_distribute_patterns global_options.x_flag_tree_loop_distribute_patterns
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribution;
#else
  int x_flag_tree_loop_distribution;
#define flag_tree_loop_distribution global_options.x_flag_tree_loop_distribution
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert;
#else
  int x_flag_tree_loop_if_convert;
#define flag_tree_loop_if_convert global_options.x_flag_tree_loop_if_convert
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_im;
#else
  int x_flag_tree_loop_im;
#define flag_tree_loop_im global_options.x_flag_tree_loop_im
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_ivcanon;
#else
  int x_flag_tree_loop_ivcanon;
#define flag_tree_loop_ivcanon global_options.x_flag_tree_loop_ivcanon
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_optimize;
#else
  int x_flag_tree_loop_optimize;
#define flag_tree_loop_optimize global_options.x_flag_tree_loop_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_vectorize;
#else
  int x_flag_tree_loop_vectorize;
#define flag_tree_loop_vectorize global_options.x_flag_tree_loop_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_live_range_split;
#else
  int x_flag_tree_live_range_split;
#define flag_tree_live_range_split global_options.x_flag_tree_live_range_split
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_parallelize_loops;
#else
  int x_flag_tree_parallelize_loops;
#define flag_tree_parallelize_loops global_options.x_flag_tree_parallelize_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_partial_pre;
#else
  int x_flag_tree_partial_pre;
#define flag_tree_partial_pre global_options.x_flag_tree_partial_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_phiprop;
#else
  int x_flag_tree_phiprop;
#define flag_tree_phiprop global_options.x_flag_tree_phiprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pre;
#else
  int x_flag_tree_pre;
#define flag_tree_pre global_options.x_flag_tree_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pta;
#else
  int x_flag_tree_pta;
#define flag_tree_pta global_options.x_flag_tree_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_reassoc;
#else
  int x_flag_tree_reassoc;
#define flag_tree_reassoc global_options.x_flag_tree_reassoc
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_scev_cprop;
#else
  int x_flag_tree_scev_cprop;
#define flag_tree_scev_cprop global_options.x_flag_tree_scev_cprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sink;
#else
  int x_flag_tree_sink;
#define flag_tree_sink global_options.x_flag_tree_sink
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slp_vectorize;
#else
  int x_flag_tree_slp_vectorize;
#define flag_tree_slp_vectorize global_options.x_flag_tree_slp_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slsr;
#else
  int x_flag_tree_slsr;
#define flag_tree_slsr global_options.x_flag_tree_slsr
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sra;
#else
  int x_flag_tree_sra;
#define flag_tree_sra global_options.x_flag_tree_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_switch_conversion;
#else
  int x_flag_tree_switch_conversion;
#define flag_tree_switch_conversion global_options.x_flag_tree_switch_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_tail_merge;
#else
  int x_flag_tree_tail_merge;
#define flag_tree_tail_merge global_options.x_flag_tree_tail_merge
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ter;
#else
  int x_flag_tree_ter;
#define flag_tree_ter global_options.x_flag_tree_ter
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vectorize;
#else
  int x_flag_tree_vectorize;
#define flag_tree_vectorize global_options.x_flag_tree_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vrp;
#else
  int x_flag_tree_vrp;
#define flag_tree_vrp global_options.x_flag_tree_vrp
#endif
#ifdef GENERATOR_FILE
extern enum auto_init_type flag_auto_var_init;
#else
  enum auto_init_type x_flag_auto_var_init;
#define flag_auto_var_init global_options.x_flag_auto_var_init
#endif
#ifdef GENERATOR_FILE
extern int flag_unconstrained_commons;
#else
  int x_flag_unconstrained_commons;
#define flag_unconstrained_commons global_options.x_flag_unconstrained_commons
#endif
#ifdef GENERATOR_FILE
extern int flag_underscoring;
#else
  int x_flag_underscoring;
#define flag_underscoring global_options.x_flag_underscoring
#endif
#ifdef GENERATOR_FILE
extern int flag_unit_at_a_time;
#else
  int x_flag_unit_at_a_time;
#define flag_unit_at_a_time global_options.x_flag_unit_at_a_time
#endif
#ifdef GENERATOR_FILE
extern int flag_unreachable_traps;
#else
  int x_flag_unreachable_traps;
#define flag_unreachable_traps global_options.x_flag_unreachable_traps
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_all_loops;
#else
  int x_flag_unroll_all_loops;
#define flag_unroll_all_loops global_options.x_flag_unroll_all_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_cunroll_grow_size;
#else
  int x_flag_cunroll_grow_size;
#define flag_cunroll_grow_size global_options.x_flag_cunroll_grow_size
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_loops;
#else
  int x_flag_unroll_loops;
#define flag_unroll_loops global_options.x_flag_unroll_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_math_optimizations;
#else
  int x_flag_unsafe_math_optimizations;
#define flag_unsafe_math_optimizations global_options.x_flag_unsafe_math_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unswitch_loops;
#else
  int x_flag_unswitch_loops;
#define flag_unswitch_loops global_options.x_flag_unswitch_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unwind_tables;
#else
  int x_flag_unwind_tables;
#define flag_unwind_tables global_options.x_flag_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_atexit;
#else
  int x_flag_use_cxa_atexit;
#define flag_use_cxa_atexit global_options.x_flag_use_cxa_atexit
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_get_exception_ptr;
#else
  int x_flag_use_cxa_get_exception_ptr;
#define flag_use_cxa_get_exception_ptr global_options.x_flag_use_cxa_get_exception_ptr
#endif
#ifdef GENERATOR_FILE
extern int flag_use_linker_plugin;
#else
  int x_flag_use_linker_plugin;
#define flag_use_linker_plugin global_options.x_flag_use_linker_plugin
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking;
#else
  int x_flag_var_tracking;
#define flag_var_tracking global_options.x_flag_var_tracking
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments;
#else
  int x_flag_var_tracking_assignments;
#define flag_var_tracking_assignments global_options.x_flag_var_tracking_assignments
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments_toggle;
#else
  int x_flag_var_tracking_assignments_toggle;
#define flag_var_tracking_assignments_toggle global_options.x_flag_var_tracking_assignments_toggle
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_uninit;
#else
  int x_flag_var_tracking_uninit;
#define flag_var_tracking_uninit global_options.x_flag_var_tracking_uninit
#endif
#ifdef GENERATOR_FILE
extern int flag_variable_expansion_in_unroller;
#else
  int x_flag_variable_expansion_in_unroller;
#define flag_variable_expansion_in_unroller global_options.x_flag_variable_expansion_in_unroller
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_vect_cost_model;
#else
  enum vect_cost_model x_flag_vect_cost_model;
#define flag_vect_cost_model global_options.x_flag_vect_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_verbose_asm;
#else
  int x_flag_verbose_asm;
#define flag_verbose_asm global_options.x_flag_verbose_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_version_loops_for_strides;
#else
  int x_flag_version_loops_for_strides;
#define flag_version_loops_for_strides global_options.x_flag_version_loops_for_strides
#endif
#ifdef GENERATOR_FILE
extern int flag_visibility_ms_compat;
#else
  int x_flag_visibility_ms_compat;
#define flag_visibility_ms_compat global_options.x_flag_visibility_ms_compat
#endif
#ifdef GENERATOR_FILE
extern enum symbol_visibility default_visibility;
#else
  enum symbol_visibility x_default_visibility;
#define default_visibility global_options.x_default_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_value_profile_transformations;
#else
  int x_flag_value_profile_transformations;
#define flag_value_profile_transformations global_options.x_flag_value_profile_transformations
#endif
#ifdef GENERATOR_FILE
extern enum vtv_priority flag_vtable_verify;
#else
  enum vtv_priority x_flag_vtable_verify;
#define flag_vtable_verify global_options.x_flag_vtable_verify
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_counts;
#else
  int x_flag_vtv_counts;
#define flag_vtv_counts global_options.x_flag_vtv_counts
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_debug;
#else
  int x_flag_vtv_debug;
#define flag_vtv_debug global_options.x_flag_vtv_debug
#endif
#ifdef GENERATOR_FILE
extern int flag_weak;
#else
  int x_flag_weak;
#define flag_weak global_options.x_flag_weak
#endif
#ifdef GENERATOR_FILE
extern int flag_weak_templates;
#else
  int x_flag_weak_templates;
#define flag_weak_templates global_options.x_flag_weak_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_web;
#else
  int x_flag_web;
#define flag_web global_options.x_flag_web
#endif
#ifdef GENERATOR_FILE
extern int flag_whole_program;
#else
  int x_flag_whole_program;
#define flag_whole_program global_options.x_flag_whole_program
#endif
#ifdef GENERATOR_FILE
extern int flag_working_directory;
#else
  int x_flag_working_directory;
#define flag_working_directory global_options.x_flag_working_directory
#endif
#ifdef GENERATOR_FILE
extern const char *flag_wpa;
#else
  const char *x_flag_wpa;
#define flag_wpa global_options.x_flag_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_wrapv;
#else
  int x_flag_wrapv;
#define flag_wrapv global_options.x_flag_wrapv
#endif
#ifdef GENERATOR_FILE
extern int flag_wrapv_pointer;
#else
  int x_flag_wrapv_pointer;
#define flag_wrapv_pointer global_options.x_flag_wrapv_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_initialized_in_bss;
#else
  int x_flag_zero_initialized_in_bss;
#define flag_zero_initialized_in_bss global_options.x_flag_zero_initialized_in_bss
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_link;
#else
  int x_flag_zero_link;
#define flag_zero_link global_options.x_flag_zero_link
#endif
#ifdef GENERATOR_FILE
extern int dwarf2out_as_loc_support;
#else
  int x_dwarf2out_as_loc_support;
#define dwarf2out_as_loc_support global_options.x_dwarf2out_as_loc_support
#endif
#ifdef GENERATOR_FILE
extern int dwarf2out_as_locview_support;
#else
  int x_dwarf2out_as_locview_support;
#define dwarf2out_as_locview_support global_options.x_dwarf2out_as_locview_support
#endif
#ifdef GENERATOR_FILE
extern int debug_column_info;
#else
  int x_debug_column_info;
#define debug_column_info global_options.x_debug_column_info
#endif
#ifdef GENERATOR_FILE
extern int flag_describe_dies;
#else
  int x_flag_describe_dies;
#define flag_describe_dies global_options.x_flag_describe_dies
#endif
#ifdef GENERATOR_FILE
extern int dwarf_version;
#else
  int x_dwarf_version;
#define dwarf_version global_options.x_dwarf_version
#endif
#ifdef GENERATOR_FILE
extern int dwarf_offset_size;
#else
  int x_dwarf_offset_size;
#define dwarf_offset_size global_options.x_dwarf_offset_size
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_declaration;
#else
  int x_flag_gen_declaration;
#define flag_gen_declaration global_options.x_flag_gen_declaration
#endif
#ifdef GENERATOR_FILE
extern int debug_generate_pub_sections;
#else
  int x_debug_generate_pub_sections;
#define debug_generate_pub_sections global_options.x_debug_generate_pub_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_gimple_stats;
#else
  int x_flag_lto_gimple_stats;
#define flag_lto_gimple_stats global_options.x_flag_lto_gimple_stats
#endif
#ifdef GENERATOR_FILE
extern int debug_inline_points;
#else
  int x_debug_inline_points;
#define debug_inline_points global_options.x_debug_inline_points
#endif
#ifdef GENERATOR_FILE
extern int debug_internal_reset_location_views;
#else
  int x_debug_internal_reset_location_views;
#define debug_internal_reset_location_views global_options.x_debug_internal_reset_location_views
#endif
#ifdef GENERATOR_FILE
extern int dwarf_record_gcc_switches;
#else
  int x_dwarf_record_gcc_switches;
#define dwarf_record_gcc_switches global_options.x_dwarf_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int dwarf_split_debug_info;
#else
  int x_dwarf_split_debug_info;
#define dwarf_split_debug_info global_options.x_dwarf_split_debug_info
#endif
#ifdef GENERATOR_FILE
extern int debug_nonbind_markers_p;
#else
  int x_debug_nonbind_markers_p;
#define debug_nonbind_markers_p global_options.x_debug_nonbind_markers_p
#endif
#ifdef GENERATOR_FILE
extern int dwarf_strict;
#else
  int x_dwarf_strict;
#define dwarf_strict global_options.x_dwarf_strict
#endif
#ifdef GENERATOR_FILE
extern int flag_gtoggle;
#else
  int x_flag_gtoggle;
#define flag_gtoggle global_options.x_flag_gtoggle
#endif
#ifdef GENERATOR_FILE
extern int debug_variable_location_views;
#else
  int x_debug_variable_location_views;
#define debug_variable_location_views global_options.x_debug_variable_location_views
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_tool_help;
#else
  int x_flag_lto_dump_tool_help;
#define flag_lto_dump_tool_help global_options.x_flag_lto_dump_tool_help
#endif
#ifdef GENERATOR_FILE
extern const char *imultiarch;
#else
  const char *x_imultiarch;
#define imultiarch global_options.x_imultiarch
#endif
#ifdef GENERATOR_FILE
extern const char *plugindir_string;
#else
  const char *x_plugindir_string;
#define plugindir_string global_options.x_plugindir_string
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_list;
#else
  int x_flag_lto_dump_list;
#define flag_lto_dump_list global_options.x_flag_lto_dump_list
#endif
#ifdef GENERATOR_FILE
extern enum arm_abi_type arm_abi;
#else
  enum arm_abi_type x_arm_abi;
#define arm_abi global_options.x_arm_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_android;
#else
  int x_flag_android;
#define flag_android global_options.x_flag_android
#endif
#ifdef GENERATOR_FILE
extern const char *arm_arch_string;
#else
  const char *x_arm_arch_string;
#define arm_arch_string global_options.x_arm_arch_string
#endif
#ifdef GENERATOR_FILE
extern int inline_asm_unified;
#else
  int x_inline_asm_unified;
#define inline_asm_unified global_options.x_inline_asm_unified
#endif
#ifdef GENERATOR_FILE
extern int linux_libc;
#else
  int x_linux_libc;
#define linux_libc global_options.x_linux_libc
#endif
#ifdef GENERATOR_FILE
extern int arm_branch_cost;
#else
  int x_arm_branch_cost;
#define arm_branch_cost global_options.x_arm_branch_cost
#endif
#ifdef GENERATOR_FILE
extern const char *arm_branch_protection_string;
#else
  const char *x_arm_branch_protection_string;
#define arm_branch_protection_string global_options.x_arm_branch_protection_string
#endif
#ifdef GENERATOR_FILE
extern int use_cmse;
#else
  int x_use_cmse;
#define use_cmse global_options.x_use_cmse
#endif
#ifdef GENERATOR_FILE
extern const char *arm_cpu_string;
#else
  const char *x_arm_cpu_string;
#define arm_cpu_string global_options.x_arm_cpu_string
#endif
#ifdef GENERATOR_FILE
extern int fix_vlldm;
#else
  int x_fix_vlldm;
#define fix_vlldm global_options.x_fix_vlldm
#endif
#ifdef GENERATOR_FILE
extern int fix_aes_erratum_1742098;
#else
  int x_fix_aes_erratum_1742098;
#define fix_aes_erratum_1742098 global_options.x_fix_aes_erratum_1742098
#endif
#ifdef GENERATOR_FILE
extern int fix_cm3_ldrd;
#else
  int x_fix_cm3_ldrd;
#define fix_cm3_ldrd global_options.x_fix_cm3_ldrd
#endif
#ifdef GENERATOR_FILE
extern int TARGET_FLIP_THUMB;
#else
  int x_TARGET_FLIP_THUMB;
#define TARGET_FLIP_THUMB global_options.x_TARGET_FLIP_THUMB
#endif
#ifdef GENERATOR_FILE
extern enum float_abi_type arm_float_abi;
#else
  enum float_abi_type x_arm_float_abi;
#define arm_float_abi global_options.x_arm_float_abi
#endif
#ifdef GENERATOR_FILE
extern enum arm_fp16_format_type arm_fp16_format;
#else
  enum arm_fp16_format_type x_arm_fp16_format;
#define arm_fp16_format global_options.x_arm_fp16_format
#endif
#ifdef GENERATOR_FILE
extern enum fpu_type arm_fpu_index;
#else
  enum fpu_type x_arm_fpu_index;
#define arm_fpu_index global_options.x_arm_fpu_index
#endif
#ifdef GENERATOR_FILE
extern int arm_pic_data_is_text_relative;
#else
  int x_arm_pic_data_is_text_relative;
#define arm_pic_data_is_text_relative global_options.x_arm_pic_data_is_text_relative
#endif
#ifdef GENERATOR_FILE
extern const char *arm_pic_register_string;
#else
  const char *x_arm_pic_register_string;
#define arm_pic_register_string global_options.x_arm_pic_register_string
#endif
#ifdef GENERATOR_FILE
extern int print_tune_info;
#else
  int x_print_tune_info;
#define print_tune_info global_options.x_print_tune_info
#endif
#ifdef GENERATOR_FILE
extern int target_pure_code;
#else
  int x_target_pure_code;
#define target_pure_code global_options.x_target_pure_code
#endif
#ifdef GENERATOR_FILE
extern int arm_restrict_it;
#else
  int x_arm_restrict_it;
#define arm_restrict_it global_options.x_arm_restrict_it
#endif
#ifdef GENERATOR_FILE
extern int target_slow_flash_data;
#else
  int x_target_slow_flash_data;
#define target_slow_flash_data global_options.x_target_slow_flash_data
#endif
#ifdef GENERATOR_FILE
extern const char *arm_stack_protector_guard_offset_str;
#else
  const char *x_arm_stack_protector_guard_offset_str;
#define arm_stack_protector_guard_offset_str global_options.x_arm_stack_protector_guard_offset_str
#endif
#ifdef GENERATOR_FILE
extern enum stack_protector_guard arm_stack_protector_guard;
#else
  enum stack_protector_guard x_arm_stack_protector_guard;
#define arm_stack_protector_guard global_options.x_arm_stack_protector_guard
#endif
#ifdef GENERATOR_FILE
extern int arm_structure_size_boundary;
#else
  int x_arm_structure_size_boundary;
#define arm_structure_size_boundary global_options.x_arm_structure_size_boundary
#endif
#ifdef GENERATOR_FILE
extern enum arm_tls_type target_tls_dialect;
#else
  enum arm_tls_type x_target_tls_dialect;
#define target_tls_dialect global_options.x_target_tls_dialect
#endif
#ifdef GENERATOR_FILE
extern enum arm_tp_type target_thread_pointer;
#else
  enum arm_tp_type x_target_thread_pointer;
#define target_thread_pointer global_options.x_target_thread_pointer
#endif
#ifdef GENERATOR_FILE
extern const char *arm_tune_string;
#else
  const char *x_arm_tune_string;
#define arm_tune_string global_options.x_arm_tune_string
#endif
#ifdef GENERATOR_FILE
extern int unaligned_access;
#else
  int x_unaligned_access;
#define unaligned_access global_options.x_unaligned_access
#endif
#ifdef GENERATOR_FILE
extern int arm_verbose_cost;
#else
  int x_arm_verbose_cost;
#define arm_verbose_cost global_options.x_arm_verbose_cost
#endif
#ifdef GENERATOR_FILE
extern int target_word_relocations;
#else
  int x_target_word_relocations;
#define target_word_relocations global_options.x_target_word_relocations
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_name_sort;
#else
  int x_flag_lto_name_sort;
#define flag_lto_name_sort global_options.x_flag_lto_name_sort
#endif
#ifdef GENERATOR_FILE
extern const char *asm_file_name;
#else
  const char *x_asm_file_name;
#define asm_file_name global_options.x_asm_file_name
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_objects;
#else
  int x_flag_lto_dump_objects;
#define flag_lto_dump_objects global_options.x_flag_lto_dump_objects
#endif
#ifdef GENERATOR_FILE
extern int pass_exit_codes;
#else
  int x_pass_exit_codes;
#define pass_exit_codes global_options.x_pass_exit_codes
#endif
#ifdef GENERATOR_FILE
extern int flag_pedantic_errors;
#else
  int x_flag_pedantic_errors;
#define flag_pedantic_errors global_options.x_flag_pedantic_errors
#endif
#ifdef GENERATOR_FILE
extern int use_pipes;
#else
  int x_use_pipes;
#define use_pipes global_options.x_use_pipes
#endif
#ifdef GENERATOR_FILE
extern const char *print_file_name;
#else
  const char *x_print_file_name;
#define print_file_name global_options.x_print_file_name
#endif
#ifdef GENERATOR_FILE
extern int print_multi_directory;
#else
  int x_print_multi_directory;
#define print_multi_directory global_options.x_print_multi_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multi_lib;
#else
  int x_print_multi_lib;
#define print_multi_lib global_options.x_print_multi_lib
#endif
#ifdef GENERATOR_FILE
extern int print_multi_os_directory;
#else
  int x_print_multi_os_directory;
#define print_multi_os_directory global_options.x_print_multi_os_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multiarch;
#else
  int x_print_multiarch;
#define print_multiarch global_options.x_print_multiarch
#endif
#ifdef GENERATOR_FILE
extern const char *print_prog_name;
#else
  const char *x_print_prog_name;
#define print_prog_name global_options.x_print_prog_name
#endif
#ifdef GENERATOR_FILE
extern int print_search_dirs;
#else
  int x_print_search_dirs;
#define print_search_dirs global_options.x_print_search_dirs
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot;
#else
  int x_print_sysroot;
#define print_sysroot global_options.x_print_sysroot
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot_headers_suffix;
#else
  int x_print_sysroot_headers_suffix;
#define print_sysroot_headers_suffix global_options.x_print_sysroot_headers_suffix
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_print_value;
#else
  int x_flag_lto_print_value;
#define flag_lto_print_value global_options.x_flag_lto_print_value
#endif
#ifdef GENERATOR_FILE
extern int quiet_flag;
#else
  int x_quiet_flag;
#define quiet_flag global_options.x_quiet_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_reverse_sort;
#else
  int x_flag_lto_reverse_sort;
#define flag_lto_reverse_sort global_options.x_flag_lto_reverse_sort
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_size_sort;
#else
  int x_flag_lto_size_sort;
#define flag_lto_size_sort global_options.x_flag_lto_size_sort
#endif
#ifdef GENERATOR_FILE
extern int flag_stdlib_kind;
#else
  int x_flag_stdlib_kind;
#define flag_stdlib_kind global_options.x_flag_stdlib_kind
#endif
#ifdef GENERATOR_FILE
extern const char *flag_lto_dump_symbol;
#else
  const char *x_flag_lto_dump_symbol;
#define flag_lto_dump_symbol global_options.x_flag_lto_dump_symbol
#endif
#ifdef GENERATOR_FILE
extern int report_times;
#else
  int x_report_times;
#define report_times global_options.x_report_times
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_tree_stats;
#else
  int x_flag_lto_tree_stats;
#define flag_lto_tree_stats global_options.x_flag_lto_tree_stats
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_dump_type_stats;
#else
  int x_flag_lto_dump_type_stats;
#define flag_lto_dump_type_stats global_options.x_flag_lto_dump_type_stats
#endif
#ifdef GENERATOR_FILE
extern int flag_undef;
#else
  int x_flag_undef;
#define flag_undef global_options.x_flag_undef
#endif
#ifdef GENERATOR_FILE
extern int verbose_flag;
#else
  int x_verbose_flag;
#define verbose_flag global_options.x_verbose_flag
#endif
#ifdef GENERATOR_FILE
extern int version_flag;
#else
  int x_version_flag;
#define version_flag global_options.x_version_flag
#endif
#ifdef GENERATOR_FILE
extern int inhibit_warnings;
#else
  int x_inhibit_warnings;
#define inhibit_warnings global_options.x_inhibit_warnings
#endif
#ifdef GENERATOR_FILE
extern const char *wrapper_string;
#else
  const char *x_wrapper_string;
#define wrapper_string global_options.x_wrapper_string
#endif
#ifndef GENERATOR_FILE
  const char *x_VAR_mlibarch_;
#define x_VAR_mlibarch_ do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mneon_for_64bits;
#define x_VAR_mneon_for_64bits do_not_use
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_associative_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_cx_limited_range;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_excess_precision;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_finite_math_only;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_errno_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_reciprocal_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_rounding_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signaling_nans;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signed_zeros;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_trapping_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_unsafe_math_optimizations;
#endif
#ifndef GENERATOR_FILE
};
extern struct gcc_options global_options;
extern const struct gcc_options global_options_init;
extern struct gcc_options global_options_set;
#define target_flags_explicit global_options_set.x_target_flags
#endif
#endif

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)

/* Structure to save/restore optimization and target specific options.  */
struct GTY(()) cl_optimization
{
  const char *x_str_align_functions;
  const char *x_str_align_jumps;
  const char *x_str_align_labels;
  const char *x_str_align_loops;
  const char *x_flag_patchable_function_entry;
  int x_param_align_loop_iterations;
  int x_param_align_threshold;
  int x_param_asan_protect_allocas;
  int x_param_asan_instrument_reads;
  int x_param_asan_instrument_writes;
  int x_param_asan_instrumentation_with_call_threshold;
  int x_param_asan_kernel_mem_intrinsic_prefix;
  int x_param_asan_memintrin;
  int x_param_asan_stack;
  int x_param_asan_use_after_return;
  int x_param_avg_loop_niter;
  int x_param_avoid_fma_max_bits;
  int x_param_builtin_expect_probability;
  int x_param_builtin_string_cmp_inline_length;
  int x_param_case_values_threshold;
  int x_param_comdat_sharing_probability;
  int x_param_construct_interfere_size;
  int x_param_destruct_interfere_size;
  int x_param_dse_max_alias_queries_per_store;
  int x_param_dse_max_object_size;
  int x_param_early_inlining_insns;
  int x_param_fsm_scale_path_stmts;
  int x_param_fully_pipelined_fma;
  int x_param_gcse_after_reload_critical_fraction;
  int x_param_gcse_after_reload_partial_fraction;
  int x_param_gcse_cost_distance_ratio;
  int x_param_gcse_unrestricted_cost;
  int x_param_graphite_max_arrays_per_scop;
  int x_param_graphite_max_nb_scop_params;
  int x_param_hardcfr_max_blocks;
  int x_param_hardcfr_max_inline_blocks;
  int x_param_hwasan_instrument_allocas;
  int x_param_hwasan_instrument_mem_intrinsics;
  int x_param_hwasan_instrument_reads;
  int x_param_hwasan_instrument_stack;
  int x_param_hwasan_instrument_writes;
  int x_param_hwasan_random_frame_tag;
  int x_param_inline_heuristics_hint_percent;
  int x_param_inline_min_speedup;
  int x_param_inline_unit_growth;
  int x_param_ipa_cp_eval_threshold;
  int x_param_ipa_cp_large_unit_insns;
  int x_param_ipa_cp_loop_hint_bonus;
  int x_param_ipa_cp_max_recursive_depth;
  int x_param_ipa_cp_min_recursive_probability;
  int x_param_ipa_cp_profile_count_base;
  int x_param_ipa_cp_recursion_penalty;
  int x_param_ipa_cp_recursive_freq_factor;
  int x_param_ipa_cp_single_call_penalty;
  int x_param_ipa_cp_unit_growth;
  int x_param_ipa_cp_value_list_size;
  int x_param_ipa_jump_function_lookups;
  int x_param_ipa_max_aa_steps;
  int x_param_ipa_max_agg_items;
  int x_param_ipa_max_loop_predicates;
  int x_param_ipa_max_param_expr_ops;
  int x_param_ipa_max_switch_predicate_bounds;
  int x_param_ipa_sra_deref_prob_threshold;
  int x_param_ipa_sra_max_replacements;
  int x_param_ipa_sra_ptr_growth_factor;
  int x_param_ipa_sra_ptrwrap_growth_factor;
  int x_param_ira_consider_dup_in_all_alts;
  int x_param_ira_loop_reserved_regs;
  int x_param_ira_max_conflict_table_size;
  int x_param_ira_max_loops_num;
  int x_param_ira_simple_lra_insn_threshold;
  int x_param_iv_always_prune_cand_set_bound;
  int x_param_iv_consider_all_candidates_bound;
  int x_param_iv_max_considered_uses;
  int x_param_jump_table_max_growth_ratio_for_size;
  int x_param_jump_table_max_growth_ratio_for_speed;
  int x_param_l1_cache_line_size;
  int x_param_l1_cache_size;
  int x_param_l2_cache_size;
  int x_param_large_function_growth;
  int x_param_large_function_insns;
  int x_param_stack_frame_growth;
  int x_param_large_stack_frame;
  int x_param_large_unit_insns;
  int x_param_lim_expensive;
  int x_param_loop_block_tile_size;
  int x_param_loop_interchange_max_num_stmts;
  int x_param_loop_interchange_stride_ratio;
  int x_param_loop_invariant_max_bbs_in_loop;
  int x_param_loop_max_datarefs_for_datadeps;
  int x_param_loop_versioning_max_inner_insns;
  int x_param_loop_versioning_max_outer_insns;
  int x_param_lra_inheritance_ebb_probability_cutoff;
  int x_param_lra_max_considered_reload_pseudos;
  int x_param_max_average_unrolled_insns;
  int x_param_max_combine_insns;
  int x_param_max_unroll_iterations;
  int x_param_max_completely_peel_times;
  int x_param_max_completely_peeled_insns;
  int x_param_max_crossjump_edges;
  int x_param_max_cse_insns;
  int x_param_max_cse_path_length;
  int x_param_max_cselib_memory_locations;
  int x_param_max_debug_marker_count;
  int x_param_max_delay_slot_insn_search;
  int x_param_max_delay_slot_live_search;
  int x_param_max_dse_active_local_stores;
  int x_param_early_inliner_max_iterations;
  int x_param_max_find_base_term_values;
  int x_param_max_fsm_thread_path_insns;
  int x_param_max_gcse_insertion_ratio;
  int x_param_max_gcse_memory;
  int x_param_max_goto_duplication_insns;
  int x_param_max_grow_copy_bb_insns;
  int x_param_max_hoist_depth;
  int x_param_inline_functions_called_once_insns;
  int x_param_inline_functions_called_once_loop_depth;
  int x_param_max_inline_insns_auto;
  int x_param_max_inline_insns_recursive_auto;
  int x_param_max_inline_insns_recursive;
  int x_param_max_inline_insns_single;
  int x_param_max_inline_insns_size;
  int x_param_max_inline_insns_small;
  int x_param_max_inline_recursive_depth_auto;
  int x_param_max_inline_recursive_depth;
  int x_param_max_isl_operations;
  int x_param_max_iterations_computation_cost;
  int x_param_max_iterations_to_track;
  int x_param_max_jump_thread_duplication_stmts;
  int x_param_max_jump_thread_paths;
  int x_param_max_last_value_rtl;
  int x_param_max_loop_header_insns;
  int x_param_max_modulo_backtrack_attempts;
  int x_param_max_partial_antic_length;
  int x_param_max_peel_branches;
  int x_param_max_peel_times;
  int x_param_max_peeled_insns;
  int x_param_max_pending_list_length;
  int x_param_max_pipeline_region_blocks;
  int x_param_max_pipeline_region_insns;
  int x_param_max_pow_sqrt_depth;
  int x_param_max_predicted_iterations;
  int x_param_max_reload_search_insns;
  int x_param_max_rtl_if_conversion_insns;
  int x_param_max_rtl_if_conversion_predictable_cost;
  int x_param_max_rtl_if_conversion_unpredictable_cost;
  int x_param_max_sched_extend_regions_iters;
  int x_param_max_sched_insn_conflict_delay;
  int x_param_max_sched_ready_insns;
  int x_param_max_sched_region_blocks;
  int x_param_max_sched_region_insns;
  int x_param_max_slsr_candidate_scan;
  int x_param_max_speculative_devirt_maydefs;
  int x_param_max_stores_to_merge;
  int x_param_max_stores_to_sink;
  int x_param_max_tail_merge_comparisons;
  int x_param_max_tail_merge_iterations;
  int x_param_max_tracked_strlens;
  int x_param_max_tree_if_conversion_phi_args;
  int x_param_max_unroll_times;
  int x_param_max_unrolled_insns;
  int x_param_max_unswitch_depth;
  int x_param_max_unswitch_insns;
  int x_param_max_variable_expansions;
  int x_param_max_vartrack_expr_depth;
  int x_param_max_vartrack_reverse_op_size;
  int x_param_max_vartrack_size;
  int x_param_min_crossjump_insns;
  int x_param_min_inline_recursive_probability;
  int x_param_min_insn_to_prefetch_ratio;
  int x_param_min_loop_cond_split_prob;
  int x_param_min_pagesize;
  int x_param_min_size_for_stack_sharing;
  int x_param_min_spec_prob;
  int x_param_min_vect_loop_bound;
  int x_param_modref_max_accesses;
  int x_param_modref_max_adjustments;
  int x_param_modref_max_bases;
  int x_param_modref_max_depth;
  int x_param_modref_max_escape_points;
  int x_param_modref_max_refs;
  int x_param_modref_max_tests;
  int x_param_parloops_chunk_size;
  int x_param_parloops_min_per_thread;
  int x_param_parloops_schedule;
  int x_param_partial_inlining_entry_probability;
  int x_param_predictable_branch_outcome;
  int x_param_prefetch_dynamic_strides;
  int x_param_prefetch_latency;
  int x_param_prefetch_min_insn_to_mem_ratio;
  int x_param_prefetch_minimum_stride;
  int x_param_ranger_logical_depth;
  int x_param_ranger_recompute_depth;
  int x_param_relation_block_limit;
  int x_param_rpo_vn_max_loop_depth;
  int x_param_sccvn_max_alias_queries_per_access;
  int x_param_scev_max_expr_complexity;
  int x_param_scev_max_expr_size;
  int x_param_sched_autopref_queue_depth;
  int x_param_sched_mem_true_dep_cost;
  int x_param_sched_pressure_algorithm;
  int x_param_sched_spec_prob_cutoff;
  int x_param_sched_state_edge_prob_cutoff;
  int x_param_selsched_insns_to_rename;
  int x_param_selsched_max_lookahead;
  int x_param_selsched_max_sched_times;
  int x_param_simultaneous_prefetches;
  int x_param_sink_frequency_threshold;
  int x_param_sms_dfa_history;
  int x_param_sms_loop_average_count_threshold;
  int x_param_sms_max_ii_factor;
  int x_param_sms_min_sc;
  int x_param_sra_max_propagations;
  int x_param_sra_max_scalarization_size_size;
  int x_param_sra_max_scalarization_size_speed;
  int x_param_ssa_name_def_chain_limit;
  int x_param_ssp_buffer_size;
  int x_param_stack_clash_protection_guard_size;
  int x_param_stack_clash_protection_probe_interval;
  int x_param_store_merging_allow_unaligned;
  int x_param_store_merging_max_size;
  int x_param_switch_conversion_branch_ratio;
  int x_param_tm_max_aggregate_size;
  int x_param_tracer_dynamic_coverage_feedback;
  int x_param_tracer_dynamic_coverage;
  int x_param_tracer_max_code_growth;
  int x_param_tracer_min_branch_probability_feedback;
  int x_param_tracer_min_branch_probability;
  int x_param_tracer_min_branch_ratio;
  int x_param_tree_reassoc_width;
  int x_param_uninit_control_dep_attempts;
  int x_param_uninit_max_chain_len;
  int x_param_uninit_max_num_chains;
  int x_param_uninlined_function_insns;
  int x_param_uninlined_function_time;
  int x_param_uninlined_function_thunk_insns;
  int x_param_uninlined_function_thunk_time;
  int x_param_unlikely_bb_count_fraction;
  int x_param_unroll_jam_max_unroll;
  int x_param_unroll_jam_min_percent;
  int x_param_use_after_scope_direct_emission_threshold;
  int x_param_vect_epilogues_nomask;
  int x_param_vect_induction_float;
  int x_param_vect_inner_loop_cost_factor;
  int x_param_vect_max_layout_candidates;
  int x_param_vect_max_peeling_for_alignment;
  int x_param_vect_max_version_for_alias_checks;
  int x_param_vect_max_version_for_alignment_checks;
  int x_param_vect_partial_vector_usage;
  int x_param_vrp_sparse_threshold;
  int x_param_vrp_switch_limit;
  int x_param_vrp_vector_threshold;
  int x_flag_min_function_alignment;
  int x_flag_openmp_target_simd_clone;
  int x_flag_sched_stalled_insns;
  int x_flag_sched_stalled_insns_dep;
  int x_flag_tree_parallelize_loops;
  enum ranger_debug x_param_ranger_debug;
  enum threader_debug x_param_threader_debug;
  enum excess_precision x_flag_excess_precision;
  enum fp_contract_mode x_flag_fp_contract_mode;
  enum hardcfr_noret x_flag_harden_control_flow_redundancy_check_noreturn;
  enum ilsop_fn x_flag_inline_stringops;
  enum ira_algorithm x_flag_ira_algorithm;
  enum ira_region x_flag_ira_region;
  enum live_patching_level x_flag_live_patching;
  enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;
  enum vect_cost_model x_flag_simd_cost_model;
  enum stack_reuse_level x_flag_stack_reuse;
  enum auto_init_type x_flag_auto_var_init;
  enum vect_cost_model x_flag_vect_cost_model;
  unsigned char x_optimize;
  unsigned char x_optimize_size;
  unsigned char x_optimize_debug;
  unsigned char x_optimize_fast;
  signed char x_warn_inline;
  signed char x_flag_aggressive_loop_optimizations;
  signed char x_flag_align_functions;
  signed char x_flag_align_jumps;
  signed char x_flag_align_labels;
  signed char x_flag_align_loops;
  signed char x_flag_allocation_dce;
  signed char x_flag_store_data_races;
  signed char x_flag_associative_math;
  signed char x_flag_asynchronous_unwind_tables;
  signed char x_flag_auto_inc_dec;
  signed char x_flag_bit_tests;
  signed char x_flag_branch_on_count_reg;
  signed char x_flag_branch_probabilities;
  signed char x_flag_caller_saves;
  signed char x_flag_code_hoisting;
  signed char x_flag_combine_stack_adjustments;
  signed char x_flag_compare_elim_after_reload;
  signed char x_flag_conserve_stack;
  signed char x_flag_cprop_registers;
  signed char x_flag_crossjumping;
  signed char x_flag_cse_follow_jumps;
  signed char x_flag_cx_fortran_rules;
  signed char x_flag_cx_limited_range;
  signed char x_flag_dce;
  signed char x_flag_defer_pop;
  signed char x_flag_delayed_branch;
  signed char x_flag_delete_dead_exceptions;
  signed char x_flag_delete_null_pointer_checks;
  signed char x_flag_devirtualize;
  signed char x_flag_devirtualize_speculatively;
  signed char x_flag_dse;
  signed char x_flag_early_inlining;
  signed char x_flag_exceptions;
  signed char x_flag_expensive_optimizations;
  signed char x_flag_finite_loops;
  signed char x_flag_finite_math_only;
  signed char x_flag_float_store;
  signed char x_flag_fold_mem_offsets;
  signed char x_flag_fold_simple_inlines;
  signed char x_flag_forward_propagate;
  signed char x_flag_fp_int_builtin_inexact;
  signed char x_flag_no_function_cse;
  signed char x_flag_gcse;
  signed char x_flag_gcse_after_reload;
  signed char x_flag_gcse_las;
  signed char x_flag_gcse_lm;
  signed char x_flag_gcse_sm;
  signed char x_flag_graphite;
  signed char x_flag_graphite_identity;
  signed char x_flag_guess_branch_prob;
  signed char x_flag_harden_control_flow_redundancy_check_exceptions;
  signed char x_flag_harden_control_flow_redundancy_check_returning_calls;
  signed char x_flag_harden_control_flow_redundancy_skip_leaf;
  signed char x_flag_harden_compares;
  signed char x_flag_harden_conditional_branches;
  signed char x_flag_harden_control_flow_redundancy;
  signed char x_flag_hoist_adjacent_loads;
  signed char x_flag_if_conversion;
  signed char x_flag_if_conversion2;
  signed char x_flag_indirect_inlining;
  signed char x_flag_no_inline;
  signed char x_flag_inline_atomics;
  signed char x_flag_inline_functions;
  signed char x_flag_inline_functions_called_once;
  signed char x_flag_inline_small_functions;
  signed char x_flag_ipa_bit_cp;
  signed char x_flag_ipa_cp;
  signed char x_flag_ipa_cp_clone;
  signed char x_flag_ipa_icf;
  signed char x_flag_ipa_icf_functions;
  signed char x_flag_ipa_icf_variables;
  signed char x_flag_ipa_modref;
  signed char x_flag_ipa_profile;
  signed char x_flag_ipa_pta;
  signed char x_flag_ipa_pure_const;
  signed char x_flag_ipa_ra;
  signed char x_flag_ipa_reference;
  signed char x_flag_ipa_reference_addressable;
  signed char x_flag_ipa_sra;
  signed char x_flag_ipa_stack_alignment;
  signed char x_flag_ipa_strict_aliasing;
  signed char x_flag_ipa_vrp;
  signed char x_flag_ira_hoist_pressure;
  signed char x_flag_ira_loop_pressure;
  signed char x_flag_ira_share_save_slots;
  signed char x_flag_ira_share_spill_slots;
  signed char x_flag_isolate_erroneous_paths_attribute;
  signed char x_flag_isolate_erroneous_paths_dereference;
  signed char x_flag_ivopts;
  signed char x_flag_jump_tables;
  signed char x_flag_keep_gc_roots_live;
  signed char x_flag_lifetime_dse;
  signed char x_flag_limit_function_alignment;
  signed char x_flag_live_range_shrinkage;
  signed char x_flag_loop_interchange;
  signed char x_flag_loop_nest_optimize;
  signed char x_flag_loop_parallelize_all;
  signed char x_flag_unroll_jam;
  signed char x_flag_lra_remat;
  signed char x_flag_errno_math;
  signed char x_flag_modulo_sched;
  signed char x_flag_modulo_sched_allow_regmoves;
  signed char x_flag_move_loop_invariants;
  signed char x_flag_move_loop_stores;
  signed char x_flag_non_call_exceptions;
  signed char x_flag_nothrow_opt;
  signed char x_flag_omit_frame_pointer;
  signed char x_flag_opt_info;
  signed char x_flag_optimize_sibling_calls;
  signed char x_flag_optimize_strlen;
  signed char x_flag_pack_struct;
  signed char x_flag_partial_inlining;
  signed char x_flag_peel_loops;
  signed char x_flag_no_peephole;
  signed char x_flag_peephole2;
  signed char x_flag_plt;
  signed char x_flag_predictive_commoning;
  signed char x_flag_prefetch_loop_arrays;
  signed char x_flag_printf_return_value;
  signed char x_flag_profile_partial_training;
  signed char x_flag_profile_reorder_functions;
  signed char x_flag_reciprocal_math;
  signed char x_flag_ree;
  signed char x_flag_pcc_struct_return;
  signed char x_flag_rename_registers;
  signed char x_flag_reorder_blocks;
  signed char x_flag_reorder_blocks_and_partition;
  signed char x_flag_reorder_functions;
  signed char x_flag_rerun_cse_after_loop;
  signed char x_flag_resched_modulo_sched;
  signed char x_flag_rounding_math;
  signed char x_flag_rtti;
  signed char x_flag_save_optimization_record;
  signed char x_flag_sched_critical_path_heuristic;
  signed char x_flag_sched_dep_count_heuristic;
  signed char x_flag_sched_group_heuristic;
  signed char x_flag_schedule_interblock;
  signed char x_flag_sched_last_insn_heuristic;
  signed char x_flag_sched_pressure;
  signed char x_flag_sched_rank_heuristic;
  signed char x_flag_schedule_speculative;
  signed char x_flag_sched_spec_insn_heuristic;
  signed char x_flag_schedule_speculative_load;
  signed char x_flag_schedule_speculative_load_dangerous;
  signed char x_flag_sched2_use_superblocks;
  signed char x_flag_schedule_fusion;
  signed char x_flag_schedule_insns;
  signed char x_flag_schedule_insns_after_reload;
  signed char x_flag_section_anchors;
  signed char x_flag_sel_sched_pipelining;
  signed char x_flag_sel_sched_pipelining_outer_loops;
  signed char x_flag_sel_sched_reschedule_pipelined;
  signed char x_flag_selective_scheduling;
  signed char x_flag_selective_scheduling2;
  signed char x_flag_semantic_interposition;
  signed char x_flag_short_enums;
  signed char x_flag_short_wchar;
  signed char x_flag_shrink_wrap;
  signed char x_flag_shrink_wrap_separate;
  signed char x_flag_signaling_nans;
  signed char x_flag_signed_zeros;
  signed char x_flag_single_precision_constant;
  signed char x_flag_split_ivs_in_unroller;
  signed char x_flag_split_loops;
  signed char x_flag_split_paths;
  signed char x_flag_split_wide_types;
  signed char x_flag_split_wide_types_early;
  signed char x_flag_ssa_backprop;
  signed char x_flag_ssa_phiopt;
  signed char x_flag_stack_clash_protection;
  signed char x_flag_stack_protect;
  signed char x_flag_stdarg_opt;
  signed char x_flag_store_merging;
  signed char x_flag_strict_aliasing;
  signed char x_flag_strict_enums;
  signed char x_flag_strict_volatile_bitfields;
  signed char x_flag_thread_jumps;
  signed char x_flag_threadsafe_statics;
  signed char x_flag_toplevel_reorder;
  signed char x_flag_tracer;
  signed char x_flag_trapping_math;
  signed char x_flag_trapv;
  signed char x_flag_tree_bit_ccp;
  signed char x_flag_tree_builtin_call_dce;
  signed char x_flag_tree_ccp;
  signed char x_flag_tree_ch;
  signed char x_flag_tree_coalesce_vars;
  signed char x_flag_tree_copy_prop;
  signed char x_flag_tree_cselim;
  signed char x_flag_tree_dce;
  signed char x_flag_tree_dom;
  signed char x_flag_tree_dse;
  signed char x_flag_tree_forwprop;
  signed char x_flag_tree_fre;
  signed char x_flag_tree_loop_distribute_patterns;
  signed char x_flag_tree_loop_distribution;
  signed char x_flag_tree_loop_if_convert;
  signed char x_flag_tree_loop_im;
  signed char x_flag_tree_loop_ivcanon;
  signed char x_flag_tree_loop_optimize;
  signed char x_flag_tree_loop_vectorize;
  signed char x_flag_tree_live_range_split;
  signed char x_flag_tree_partial_pre;
  signed char x_flag_tree_phiprop;
  signed char x_flag_tree_pre;
  signed char x_flag_tree_pta;
  signed char x_flag_tree_reassoc;
  signed char x_flag_tree_scev_cprop;
  signed char x_flag_tree_sink;
  signed char x_flag_tree_slp_vectorize;
  signed char x_flag_tree_slsr;
  signed char x_flag_tree_sra;
  signed char x_flag_tree_switch_conversion;
  signed char x_flag_tree_tail_merge;
  signed char x_flag_tree_ter;
  signed char x_flag_tree_vectorize;
  signed char x_flag_tree_vrp;
  signed char x_flag_unconstrained_commons;
  signed char x_flag_unreachable_traps;
  signed char x_flag_unroll_all_loops;
  signed char x_flag_cunroll_grow_size;
  signed char x_flag_unroll_loops;
  signed char x_flag_unsafe_math_optimizations;
  signed char x_flag_unswitch_loops;
  signed char x_flag_unwind_tables;
  signed char x_flag_var_tracking;
  signed char x_flag_var_tracking_assignments;
  signed char x_flag_var_tracking_assignments_toggle;
  signed char x_flag_var_tracking_uninit;
  signed char x_flag_variable_expansion_in_unroller;
  signed char x_flag_version_loops_for_strides;
  signed char x_flag_value_profile_transformations;
  signed char x_flag_web;
  signed char x_flag_wrapv;
  signed char x_flag_wrapv_pointer;
  signed char x_debug_nonbind_markers_p;
  /* 512 members */
  unsigned HOST_WIDE_INT explicit_mask[8];
};

/* Structure to save/restore selected target specific options.  */
struct GTY(()) cl_target_option
{
  long x_arm_stack_protector_guard_offset;
  unsigned x_aarch_enable_bti;
  const char *x_arm_arch_string;
  const char *x_arm_branch_protection_string;
  const char *x_arm_cpu_string;
  enum fpu_type x_arm_fpu_index;
  /* - */ int x_target_flags;
  const char *x_arm_tune_string;
  enum aarch_function_type x_aarch_ra_sign_scope;
  signed char x_inline_asm_unified;
  signed char x_fix_aes_erratum_1742098;
  signed char x_arm_restrict_it;
  signed char x_unaligned_access;
  /* 12 members */
  unsigned HOST_WIDE_INT explicit_mask[1];
  /* - */ int explicit_mask_target_flags;
};


/* Save optimization variables into a structure.  */
extern void cl_optimization_save (struct cl_optimization *, struct gcc_options *, struct gcc_options *);

/* Restore optimization variables from a structure.  */
extern void cl_optimization_restore (struct gcc_options *, struct gcc_options *, struct cl_optimization *);

/* Print optimization variables from a structure.  */
extern void cl_optimization_print (FILE *, int, struct cl_optimization *);

/* Print different optimization variables from structures provided as arguments.  */
extern void cl_optimization_print_diff (FILE *, int, cl_optimization *ptr1, cl_optimization *ptr2);

/* Save selected option variables into a structure.  */
extern void cl_target_option_save (struct cl_target_option *, struct gcc_options *, struct gcc_options *);

/* Restore selected option variables from a structure.  */
extern void cl_target_option_restore (struct gcc_options *, struct gcc_options *, struct cl_target_option *);

/* Print target option variables from a structure.  */
extern void cl_target_option_print (FILE *, int, struct cl_target_option *);

/* Print different target option variables from structures provided as arguments.  */
extern void cl_target_option_print_diff (FILE *, int, cl_target_option *ptr1, cl_target_option *ptr2);

/* Compare two target option variables from a structure.  */
extern bool cl_target_option_eq (const struct cl_target_option *, const struct cl_target_option *);

/* Free heap memory used by target option variables.  */
extern void cl_target_option_free (struct cl_target_option *);

/* Hash option variables from a structure.  */
extern hashval_t cl_target_option_hash (const struct cl_target_option *);

/* Hash optimization from a structure.  */
extern hashval_t cl_optimization_hash (const struct cl_optimization *);

/* Compare two optimization options.  */
extern bool cl_optimization_option_eq (cl_optimization const *ptr1, cl_optimization const *ptr2);

/* Free heap memory used by optimization options.  */
extern void cl_optimization_option_free (cl_optimization *ptr1);

/* Compare and report difference for a part of cl_optimization options.  */
extern void cl_optimization_compare (gcc_options *ptr1, gcc_options *ptr2);

/* Generator files may not have access to location_t, and don't need these.  */
#if defined(UNKNOWN_LOCATION)
bool                                                                  
common_handle_option_auto (struct gcc_options *opts,                  
                           struct gcc_options *opts_set,              
                           const struct cl_decoded_option *decoded,   
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool
Ada_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
AdaSCIL_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
AdaWhy_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
C_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
CXX_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
D_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
Fortran_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
Go_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
LTO_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
LTODump_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
ModulaX2_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
ObjC_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
ObjCXX_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
bool
Rust_handle_option_auto (struct gcc_options *opts,
                           struct gcc_options *opts_set,
                           size_t scode, const char *arg,
                           HOST_WIDE_INT value,
                           unsigned int lang_mask, int kind,
                           location_t loc,
                           const struct cl_option_handlers *handlers,
                           diagnostic_context *dc);
void cpp_handle_option_auto (const struct gcc_options * opts, size_t scode,
                             struct cpp_options * cpp_opts);
void init_global_opts_from_cpp(struct gcc_options * opts,      
                               const struct cpp_options * cpp_opts);
#endif
#endif

#define MASK_ABORT_NORETURN (1U << 0)
#define OPTION_MASK_ANDROID (1U << 0)
#define MASK_APCS_FRAME (1U << 1)
#define MASK_APCS_REENT (1U << 2)
#define MASK_APCS_STACK (1U << 3)
#define MASK_THUMB (1U << 4)
#define MASK_BE8 (1U << 5)
#define MASK_BIG_END (1U << 6)
#define MASK_CALLEE_INTERWORKING (1U << 7)
#define MASK_CALLER_INTERWORKING (1U << 8)
#define MASK_FDPIC (1U << 9)
#define MASK_GENERAL_REGS_ONLY (1U << 10)
#define MASK_LONG_CALLS (1U << 11)
#define MASK_POKE_FUNCTION_NAME (1U << 12)
#define MASK_SCHED_PROLOG (1U << 13)
#define MASK_SINGLE_PIC_BASE (1U << 14)
#define MASK_INTERWORK (1U << 15)
#define MASK_TPCS_FRAME (1U << 16)
#define MASK_TPCS_LEAF_FRAME (1U << 17)
#define MASK_NEON_VECTORIZE_DOUBLE (1U << 18)

/* ABORT_NORETURN mask */
#define TARGET_ABORT_NORETURN ((target_flags & MASK_ABORT_NORETURN) != 0)
#define TARGET_ABORT_NORETURN_P(target_flags) (((target_flags) & MASK_ABORT_NORETURN) != 0)
#define TARGET_ABORT_NORETURN_OPTS_P(opts) (((opts->x_target_flags) & MASK_ABORT_NORETURN) != 0)
#define TARGET_EXPLICIT_ABORT_NORETURN_P(opts) ((opts->x_target_flags_explicit & MASK_ABORT_NORETURN) != 0)
#define SET_TARGET_ABORT_NORETURN(opts) opts->x_target_flags |= MASK_ABORT_NORETURN
/* ANDROID mask */
#define TARGET_ANDROID ((flag_android & OPTION_MASK_ANDROID) != 0)
#define TARGET_ANDROID_P(flag_android) (((flag_android) & OPTION_MASK_ANDROID) != 0)
#define TARGET_ANDROID_OPTS_P(opts) (((opts->x_flag_android) & OPTION_MASK_ANDROID) != 0)
#define TARGET_EXPLICIT_ANDROID_P(opts) ((opts->x_flag_android_explicit & OPTION_MASK_ANDROID) != 0)
#define SET_TARGET_ANDROID(opts) opts->x_flag_android |= OPTION_MASK_ANDROID
/* APCS_FRAME mask */
#define TARGET_APCS_FRAME ((target_flags & MASK_APCS_FRAME) != 0)
#define TARGET_APCS_FRAME_P(target_flags) (((target_flags) & MASK_APCS_FRAME) != 0)
#define TARGET_APCS_FRAME_OPTS_P(opts) (((opts->x_target_flags) & MASK_APCS_FRAME) != 0)
#define TARGET_EXPLICIT_APCS_FRAME_P(opts) ((opts->x_target_flags_explicit & MASK_APCS_FRAME) != 0)
#define SET_TARGET_APCS_FRAME(opts) opts->x_target_flags |= MASK_APCS_FRAME
/* APCS_REENT mask */
#define TARGET_APCS_REENT ((target_flags & MASK_APCS_REENT) != 0)
#define TARGET_APCS_REENT_P(target_flags) (((target_flags) & MASK_APCS_REENT) != 0)
#define TARGET_APCS_REENT_OPTS_P(opts) (((opts->x_target_flags) & MASK_APCS_REENT) != 0)
#define TARGET_EXPLICIT_APCS_REENT_P(opts) ((opts->x_target_flags_explicit & MASK_APCS_REENT) != 0)
#define SET_TARGET_APCS_REENT(opts) opts->x_target_flags |= MASK_APCS_REENT
/* APCS_STACK mask */
#define TARGET_APCS_STACK ((target_flags & MASK_APCS_STACK) != 0)
#define TARGET_APCS_STACK_P(target_flags) (((target_flags) & MASK_APCS_STACK) != 0)
#define TARGET_APCS_STACK_OPTS_P(opts) (((opts->x_target_flags) & MASK_APCS_STACK) != 0)
#define TARGET_EXPLICIT_APCS_STACK_P(opts) ((opts->x_target_flags_explicit & MASK_APCS_STACK) != 0)
#define SET_TARGET_APCS_STACK(opts) opts->x_target_flags |= MASK_APCS_STACK
/* THUMB mask */
#define TARGET_THUMB ((target_flags & MASK_THUMB) != 0)
#define TARGET_THUMB_P(target_flags) (((target_flags) & MASK_THUMB) != 0)
#define TARGET_THUMB_OPTS_P(opts) (((opts->x_target_flags) & MASK_THUMB) != 0)
#define TARGET_EXPLICIT_THUMB_P(opts) ((opts->x_target_flags_explicit & MASK_THUMB) != 0)
#define SET_TARGET_THUMB(opts) opts->x_target_flags |= MASK_THUMB
/* BE8 mask */
#define TARGET_BE8 ((target_flags & MASK_BE8) != 0)
#define TARGET_BE8_P(target_flags) (((target_flags) & MASK_BE8) != 0)
#define TARGET_BE8_OPTS_P(opts) (((opts->x_target_flags) & MASK_BE8) != 0)
#define TARGET_EXPLICIT_BE8_P(opts) ((opts->x_target_flags_explicit & MASK_BE8) != 0)
#define SET_TARGET_BE8(opts) opts->x_target_flags |= MASK_BE8
/* BIG_END mask */
#define TARGET_BIG_END ((target_flags & MASK_BIG_END) != 0)
#define TARGET_BIG_END_P(target_flags) (((target_flags) & MASK_BIG_END) != 0)
#define TARGET_BIG_END_OPTS_P(opts) (((opts->x_target_flags) & MASK_BIG_END) != 0)
#define TARGET_EXPLICIT_BIG_END_P(opts) ((opts->x_target_flags_explicit & MASK_BIG_END) != 0)
#define SET_TARGET_BIG_END(opts) opts->x_target_flags |= MASK_BIG_END
/* CALLEE_INTERWORKING mask */
#define TARGET_CALLEE_INTERWORKING ((target_flags & MASK_CALLEE_INTERWORKING) != 0)
#define TARGET_CALLEE_INTERWORKING_P(target_flags) (((target_flags) & MASK_CALLEE_INTERWORKING) != 0)
#define TARGET_CALLEE_INTERWORKING_OPTS_P(opts) (((opts->x_target_flags) & MASK_CALLEE_INTERWORKING) != 0)
#define TARGET_EXPLICIT_CALLEE_INTERWORKING_P(opts) ((opts->x_target_flags_explicit & MASK_CALLEE_INTERWORKING) != 0)
#define SET_TARGET_CALLEE_INTERWORKING(opts) opts->x_target_flags |= MASK_CALLEE_INTERWORKING
/* CALLER_INTERWORKING mask */
#define TARGET_CALLER_INTERWORKING ((target_flags & MASK_CALLER_INTERWORKING) != 0)
#define TARGET_CALLER_INTERWORKING_P(target_flags) (((target_flags) & MASK_CALLER_INTERWORKING) != 0)
#define TARGET_CALLER_INTERWORKING_OPTS_P(opts) (((opts->x_target_flags) & MASK_CALLER_INTERWORKING) != 0)
#define TARGET_EXPLICIT_CALLER_INTERWORKING_P(opts) ((opts->x_target_flags_explicit & MASK_CALLER_INTERWORKING) != 0)
#define SET_TARGET_CALLER_INTERWORKING(opts) opts->x_target_flags |= MASK_CALLER_INTERWORKING
/* FDPIC mask */
#define TARGET_FDPIC ((target_flags & MASK_FDPIC) != 0)
#define TARGET_FDPIC_P(target_flags) (((target_flags) & MASK_FDPIC) != 0)
#define TARGET_FDPIC_OPTS_P(opts) (((opts->x_target_flags) & MASK_FDPIC) != 0)
#define TARGET_EXPLICIT_FDPIC_P(opts) ((opts->x_target_flags_explicit & MASK_FDPIC) != 0)
#define SET_TARGET_FDPIC(opts) opts->x_target_flags |= MASK_FDPIC
/* GENERAL_REGS_ONLY mask */
#define TARGET_GENERAL_REGS_ONLY ((target_flags & MASK_GENERAL_REGS_ONLY) != 0)
#define TARGET_GENERAL_REGS_ONLY_P(target_flags) (((target_flags) & MASK_GENERAL_REGS_ONLY) != 0)
#define TARGET_GENERAL_REGS_ONLY_OPTS_P(opts) (((opts->x_target_flags) & MASK_GENERAL_REGS_ONLY) != 0)
#define TARGET_EXPLICIT_GENERAL_REGS_ONLY_P(opts) ((opts->x_target_flags_explicit & MASK_GENERAL_REGS_ONLY) != 0)
#define SET_TARGET_GENERAL_REGS_ONLY(opts) opts->x_target_flags |= MASK_GENERAL_REGS_ONLY
/* LONG_CALLS mask */
#define TARGET_LONG_CALLS ((target_flags & MASK_LONG_CALLS) != 0)
#define TARGET_LONG_CALLS_P(target_flags) (((target_flags) & MASK_LONG_CALLS) != 0)
#define TARGET_LONG_CALLS_OPTS_P(opts) (((opts->x_target_flags) & MASK_LONG_CALLS) != 0)
#define TARGET_EXPLICIT_LONG_CALLS_P(opts) ((opts->x_target_flags_explicit & MASK_LONG_CALLS) != 0)
#define SET_TARGET_LONG_CALLS(opts) opts->x_target_flags |= MASK_LONG_CALLS
/* POKE_FUNCTION_NAME mask */
#define TARGET_POKE_FUNCTION_NAME ((target_flags & MASK_POKE_FUNCTION_NAME) != 0)
#define TARGET_POKE_FUNCTION_NAME_P(target_flags) (((target_flags) & MASK_POKE_FUNCTION_NAME) != 0)
#define TARGET_POKE_FUNCTION_NAME_OPTS_P(opts) (((opts->x_target_flags) & MASK_POKE_FUNCTION_NAME) != 0)
#define TARGET_EXPLICIT_POKE_FUNCTION_NAME_P(opts) ((opts->x_target_flags_explicit & MASK_POKE_FUNCTION_NAME) != 0)
#define SET_TARGET_POKE_FUNCTION_NAME(opts) opts->x_target_flags |= MASK_POKE_FUNCTION_NAME
/* SCHED_PROLOG mask */
#define TARGET_SCHED_PROLOG ((target_flags & MASK_SCHED_PROLOG) != 0)
#define TARGET_SCHED_PROLOG_P(target_flags) (((target_flags) & MASK_SCHED_PROLOG) != 0)
#define TARGET_SCHED_PROLOG_OPTS_P(opts) (((opts->x_target_flags) & MASK_SCHED_PROLOG) != 0)
#define TARGET_EXPLICIT_SCHED_PROLOG_P(opts) ((opts->x_target_flags_explicit & MASK_SCHED_PROLOG) != 0)
#define SET_TARGET_SCHED_PROLOG(opts) opts->x_target_flags |= MASK_SCHED_PROLOG
/* SINGLE_PIC_BASE mask */
#define TARGET_SINGLE_PIC_BASE ((target_flags & MASK_SINGLE_PIC_BASE) != 0)
#define TARGET_SINGLE_PIC_BASE_P(target_flags) (((target_flags) & MASK_SINGLE_PIC_BASE) != 0)
#define TARGET_SINGLE_PIC_BASE_OPTS_P(opts) (((opts->x_target_flags) & MASK_SINGLE_PIC_BASE) != 0)
#define TARGET_EXPLICIT_SINGLE_PIC_BASE_P(opts) ((opts->x_target_flags_explicit & MASK_SINGLE_PIC_BASE) != 0)
#define SET_TARGET_SINGLE_PIC_BASE(opts) opts->x_target_flags |= MASK_SINGLE_PIC_BASE
/* INTERWORK mask */
#define TARGET_INTERWORK ((target_flags & MASK_INTERWORK) != 0)
#define TARGET_INTERWORK_P(target_flags) (((target_flags) & MASK_INTERWORK) != 0)
#define TARGET_INTERWORK_OPTS_P(opts) (((opts->x_target_flags) & MASK_INTERWORK) != 0)
#define TARGET_EXPLICIT_INTERWORK_P(opts) ((opts->x_target_flags_explicit & MASK_INTERWORK) != 0)
#define SET_TARGET_INTERWORK(opts) opts->x_target_flags |= MASK_INTERWORK
/* TPCS_FRAME mask */
#define TARGET_TPCS_FRAME ((target_flags & MASK_TPCS_FRAME) != 0)
#define TARGET_TPCS_FRAME_P(target_flags) (((target_flags) & MASK_TPCS_FRAME) != 0)
#define TARGET_TPCS_FRAME_OPTS_P(opts) (((opts->x_target_flags) & MASK_TPCS_FRAME) != 0)
#define TARGET_EXPLICIT_TPCS_FRAME_P(opts) ((opts->x_target_flags_explicit & MASK_TPCS_FRAME) != 0)
#define SET_TARGET_TPCS_FRAME(opts) opts->x_target_flags |= MASK_TPCS_FRAME
/* TPCS_LEAF_FRAME mask */
#define TARGET_TPCS_LEAF_FRAME ((target_flags & MASK_TPCS_LEAF_FRAME) != 0)
#define TARGET_TPCS_LEAF_FRAME_P(target_flags) (((target_flags) & MASK_TPCS_LEAF_FRAME) != 0)
#define TARGET_TPCS_LEAF_FRAME_OPTS_P(opts) (((opts->x_target_flags) & MASK_TPCS_LEAF_FRAME) != 0)
#define TARGET_EXPLICIT_TPCS_LEAF_FRAME_P(opts) ((opts->x_target_flags_explicit & MASK_TPCS_LEAF_FRAME) != 0)
#define SET_TARGET_TPCS_LEAF_FRAME(opts) opts->x_target_flags |= MASK_TPCS_LEAF_FRAME
/* NEON_VECTORIZE_DOUBLE mask */
#define TARGET_NEON_VECTORIZE_DOUBLE ((target_flags & MASK_NEON_VECTORIZE_DOUBLE) != 0)
#define TARGET_NEON_VECTORIZE_DOUBLE_P(target_flags) (((target_flags) & MASK_NEON_VECTORIZE_DOUBLE) != 0)
#define TARGET_NEON_VECTORIZE_DOUBLE_OPTS_P(opts) (((opts->x_target_flags) & MASK_NEON_VECTORIZE_DOUBLE) != 0)
#define TARGET_EXPLICIT_NEON_VECTORIZE_DOUBLE_P(opts) ((opts->x_target_flags_explicit & MASK_NEON_VECTORIZE_DOUBLE) != 0)
#define SET_TARGET_NEON_VECTORIZE_DOUBLE(opts) opts->x_target_flags |= MASK_NEON_VECTORIZE_DOUBLE


#define CL_Ada        (1U << 0)
#define CL_AdaSCIL    (1U << 1)
#define CL_AdaWhy     (1U << 2)
#define CL_C          (1U << 3)
#define CL_CXX        (1U << 4)
#define CL_D          (1U << 5)
#define CL_Fortran    (1U << 6)
#define CL_Go         (1U << 7)
#define CL_LTO        (1U << 8)
#define CL_LTODump    (1U << 9)
#define CL_ModulaX2   (1U << 10)
#define CL_ObjC       (1U << 11)
#define CL_ObjCXX     (1U << 12)
#define CL_Rust       (1U << 13)
#define CL_LANG_ALL   ((1U << 14) - 1)

enum opt_code
{
  OPT____ = 0,                               /* -### */
  /* OPT__all_warnings = 1, */               /* --all-warnings */
  /* OPT__ansi = 2, */                       /* --ansi */
  /* OPT__assemble = 3, */                   /* --assemble */
  /* OPT__assert = 4, */                     /* --assert */
  /* OPT__assert_ = 5, */                    /* --assert= */
  /* OPT__comments = 6, */                   /* --comments */
  /* OPT__comments_in_macros = 7, */         /* --comments-in-macros */
  /* OPT__compile = 8, */                    /* --compile */
  OPT__completion_ = 9,                      /* --completion= */
  /* OPT__coverage = 10, */                  /* --coverage */
  /* OPT__debug = 11, */                     /* --debug */
  /* OPT__define_macro = 12, */              /* --define-macro */
  /* OPT__define_macro_ = 13, */             /* --define-macro= */
  /* OPT__dependencies = 14, */              /* --dependencies */
  /* OPT__dump = 15, */                      /* --dump */
  /* OPT__dump_ = 16, */                     /* --dump= */
  /* OPT__dumpbase = 17, */                  /* --dumpbase */
  /* OPT__dumpbase_ext = 18, */              /* --dumpbase-ext */
  /* OPT__dumpdir = 19, */                   /* --dumpdir */
  /* OPT__entry = 20, */                     /* --entry */
  /* OPT__entry_ = 21, */                    /* --entry= */
  /* OPT__extra_warnings = 22, */            /* --extra-warnings */
  /* OPT__for_assembler = 23, */             /* --for-assembler */
  /* OPT__for_assembler_ = 24, */            /* --for-assembler= */
  /* OPT__for_linker = 25, */                /* --for-linker */
  /* OPT__for_linker_ = 26, */               /* --for-linker= */
  /* OPT__force_link = 27, */                /* --force-link */
  /* OPT__force_link_ = 28, */               /* --force-link= */
  OPT__help = 29,                            /* --help */
  OPT__help_ = 30,                           /* --help= */
  /* OPT__imacros = 31, */                   /* --imacros */
  /* OPT__imacros_ = 32, */                  /* --imacros= */
  /* OPT__include = 33, */                   /* --include */
  /* OPT__include_barrier = 34, */           /* --include-barrier */
  /* OPT__include_directory = 35, */         /* --include-directory */
  /* OPT__include_directory_after = 36, */   /* --include-directory-after */
  /* OPT__include_directory_after_ = 37, */  /* --include-directory-after= */
  /* OPT__include_directory_ = 38, */        /* --include-directory= */
  /* OPT__include_prefix = 39, */            /* --include-prefix */
  /* OPT__include_prefix_ = 40, */           /* --include-prefix= */
  /* OPT__include_with_prefix = 41, */       /* --include-with-prefix */
  /* OPT__include_with_prefix_after = 42, */ /* --include-with-prefix-after */
  /* OPT__include_with_prefix_after_ = 43, *//* --include-with-prefix-after= */
  /* OPT__include_with_prefix_before = 44, *//* --include-with-prefix-before */
  /* OPT__include_with_prefix_before_ = 45, *//* --include-with-prefix-before= */
  /* OPT__include_with_prefix_ = 46, */      /* --include-with-prefix= */
  /* OPT__include_ = 47, */                  /* --include= */
  /* OPT__language = 48, */                  /* --language */
  /* OPT__language_ = 49, */                 /* --language= */
  /* OPT__library_directory = 50, */         /* --library-directory */
  /* OPT__library_directory_ = 51, */        /* --library-directory= */
  /* OPT__no_canonical_prefixes = 52, */     /* --no-canonical-prefixes */
  /* OPT__no_integrated_cpp = 53, */         /* --no-integrated-cpp */
  /* OPT__no_line_commands = 54, */          /* --no-line-commands */
  /* OPT__no_standard_includes = 55, */      /* --no-standard-includes */
  /* OPT__no_standard_libraries = 56, */     /* --no-standard-libraries */
  OPT__no_sysroot_suffix = 57,               /* --no-sysroot-suffix */
  /* OPT__no_warnings = 58, */               /* --no-warnings */
  /* OPT__optimize = 59, */                  /* --optimize */
  /* OPT__output = 60, */                    /* --output */
  OPT__output_pch = 61,                      /* --output-pch */
  /* OPT__output_ = 62, */                   /* --output= */
  OPT__param_align_loop_iterations_ = 63,    /* --param=align-loop-iterations= */
  OPT__param_align_threshold_ = 64,          /* --param=align-threshold= */
  OPT__param_analyzer_bb_explosion_factor_ = 65,/* --param=analyzer-bb-explosion-factor= */
  OPT__param_analyzer_max_constraints_ = 66, /* --param=analyzer-max-constraints= */
  OPT__param_analyzer_max_enodes_for_full_dump_ = 67,/* --param=analyzer-max-enodes-for-full-dump= */
  OPT__param_analyzer_max_enodes_per_program_point_ = 68,/* --param=analyzer-max-enodes-per-program-point= */
  OPT__param_analyzer_max_infeasible_edges_ = 69,/* --param=analyzer-max-infeasible-edges= */
  OPT__param_analyzer_max_recursion_depth_ = 70,/* --param=analyzer-max-recursion-depth= */
  OPT__param_analyzer_max_svalue_depth_ = 71,/* --param=analyzer-max-svalue-depth= */
  OPT__param_analyzer_min_snodes_for_call_summary_ = 72,/* --param=analyzer-min-snodes-for-call-summary= */
  OPT__param_analyzer_text_art_ideal_canvas_width_ = 73,/* --param=analyzer-text-art-ideal-canvas-width= */
  OPT__param_analyzer_text_art_string_ellipsis_head_len_ = 74,/* --param=analyzer-text-art-string-ellipsis-head-len= */
  OPT__param_analyzer_text_art_string_ellipsis_tail_len_ = 75,/* --param=analyzer-text-art-string-ellipsis-tail-len= */
  OPT__param_analyzer_text_art_string_ellipsis_threshold_ = 76,/* --param=analyzer-text-art-string-ellipsis-threshold= */
  OPT__param_asan_globals_ = 77,             /* --param=asan-globals= */
  OPT__param_asan_instrument_allocas_ = 78,  /* --param=asan-instrument-allocas= */
  OPT__param_asan_instrument_reads_ = 79,    /* --param=asan-instrument-reads= */
  OPT__param_asan_instrument_writes_ = 80,   /* --param=asan-instrument-writes= */
  OPT__param_asan_instrumentation_with_call_threshold_ = 81,/* --param=asan-instrumentation-with-call-threshold= */
  OPT__param_asan_kernel_mem_intrinsic_prefix_ = 82,/* --param=asan-kernel-mem-intrinsic-prefix= */
  OPT__param_asan_memintrin_ = 83,           /* --param=asan-memintrin= */
  OPT__param_asan_stack_ = 84,               /* --param=asan-stack= */
  OPT__param_asan_use_after_return_ = 85,    /* --param=asan-use-after-return= */
  OPT__param_avg_loop_niter_ = 86,           /* --param=avg-loop-niter= */
  OPT__param_avoid_fma_max_bits_ = 87,       /* --param=avoid-fma-max-bits= */
  OPT__param_builtin_expect_probability_ = 88,/* --param=builtin-expect-probability= */
  OPT__param_builtin_string_cmp_inline_length_ = 89,/* --param=builtin-string-cmp-inline-length= */
  OPT__param_case_values_threshold_ = 90,    /* --param=case-values-threshold= */
  OPT__param_comdat_sharing_probability_ = 91,/* --param=comdat-sharing-probability= */
  OPT__param_constructive_interference_size_ = 92,/* --param=constructive-interference-size= */
  OPT__param_cxx_max_namespaces_for_diagnostic_help_ = 93,/* --param=cxx-max-namespaces-for-diagnostic-help= */
  OPT__param_destructive_interference_size_ = 94,/* --param=destructive-interference-size= */
  OPT__param_dse_max_alias_queries_per_store_ = 95,/* --param=dse-max-alias-queries-per-store= */
  OPT__param_dse_max_object_size_ = 96,      /* --param=dse-max-object-size= */
  OPT__param_early_inlining_insns_ = 97,     /* --param=early-inlining-insns= */
  OPT__param_fsm_scale_path_stmts_ = 98,     /* --param=fsm-scale-path-stmts= */
  OPT__param_fully_pipelined_fma_ = 99,      /* --param=fully-pipelined-fma= */
  OPT__param_gcse_after_reload_critical_fraction_ = 100,/* --param=gcse-after-reload-critical-fraction= */
  OPT__param_gcse_after_reload_partial_fraction_ = 101,/* --param=gcse-after-reload-partial-fraction= */
  OPT__param_gcse_cost_distance_ratio_ = 102,/* --param=gcse-cost-distance-ratio= */
  OPT__param_gcse_unrestricted_cost_ = 103,  /* --param=gcse-unrestricted-cost= */
  OPT__param_ggc_min_expand_ = 104,          /* --param=ggc-min-expand= */
  OPT__param_ggc_min_heapsize_ = 105,        /* --param=ggc-min-heapsize= */
  OPT__param_gimple_fe_computed_hot_bb_threshold_ = 106,/* --param=gimple-fe-computed-hot-bb-threshold= */
  OPT__param_graphite_allow_codegen_errors_ = 107,/* --param=graphite-allow-codegen-errors= */
  OPT__param_graphite_max_arrays_per_scop_ = 108,/* --param=graphite-max-arrays-per-scop= */
  OPT__param_graphite_max_nb_scop_params_ = 109,/* --param=graphite-max-nb-scop-params= */
  OPT__param_hardcfr_max_blocks_ = 110,      /* --param=hardcfr-max-blocks= */
  OPT__param_hardcfr_max_inline_blocks_ = 111,/* --param=hardcfr-max-inline-blocks= */
  OPT__param_hash_table_verification_limit_ = 112,/* --param=hash-table-verification-limit= */
  OPT__param_hot_bb_count_fraction_ = 113,   /* --param=hot-bb-count-fraction= */
  OPT__param_hot_bb_count_ws_permille_ = 114,/* --param=hot-bb-count-ws-permille= */
  OPT__param_hot_bb_frequency_fraction_ = 115,/* --param=hot-bb-frequency-fraction= */
  OPT__param_hwasan_instrument_allocas_ = 116,/* --param=hwasan-instrument-allocas= */
  OPT__param_hwasan_instrument_mem_intrinsics_ = 117,/* --param=hwasan-instrument-mem-intrinsics= */
  OPT__param_hwasan_instrument_reads_ = 118, /* --param=hwasan-instrument-reads= */
  OPT__param_hwasan_instrument_stack_ = 119, /* --param=hwasan-instrument-stack= */
  OPT__param_hwasan_instrument_writes_ = 120,/* --param=hwasan-instrument-writes= */
  OPT__param_hwasan_random_frame_tag_ = 121, /* --param=hwasan-random-frame-tag= */
  OPT__param_inline_heuristics_hint_percent_ = 122,/* --param=inline-heuristics-hint-percent= */
  OPT__param_inline_min_speedup_ = 123,      /* --param=inline-min-speedup= */
  OPT__param_inline_unit_growth_ = 124,      /* --param=inline-unit-growth= */
  OPT__param_integer_share_limit_ = 125,     /* --param=integer-share-limit= */
  OPT__param_ipa_cp_eval_threshold_ = 126,   /* --param=ipa-cp-eval-threshold= */
  OPT__param_ipa_cp_large_unit_insns_ = 127, /* --param=ipa-cp-large-unit-insns= */
  OPT__param_ipa_cp_loop_hint_bonus_ = 128,  /* --param=ipa-cp-loop-hint-bonus= */
  OPT__param_ipa_cp_max_recursive_depth_ = 129,/* --param=ipa-cp-max-recursive-depth= */
  OPT__param_ipa_cp_min_recursive_probability_ = 130,/* --param=ipa-cp-min-recursive-probability= */
  OPT__param_ipa_cp_profile_count_base_ = 131,/* --param=ipa-cp-profile-count-base= */
  OPT__param_ipa_cp_recursion_penalty_ = 132,/* --param=ipa-cp-recursion-penalty= */
  OPT__param_ipa_cp_recursive_freq_factor_ = 133,/* --param=ipa-cp-recursive-freq-factor= */
  OPT__param_ipa_cp_single_call_penalty_ = 134,/* --param=ipa-cp-single-call-penalty= */
  OPT__param_ipa_cp_unit_growth_ = 135,      /* --param=ipa-cp-unit-growth= */
  OPT__param_ipa_cp_value_list_size_ = 136,  /* --param=ipa-cp-value-list-size= */
  OPT__param_ipa_jump_function_lookups_ = 137,/* --param=ipa-jump-function-lookups= */
  OPT__param_ipa_max_aa_steps_ = 138,        /* --param=ipa-max-aa-steps= */
  OPT__param_ipa_max_agg_items_ = 139,       /* --param=ipa-max-agg-items= */
  OPT__param_ipa_max_loop_predicates_ = 140, /* --param=ipa-max-loop-predicates= */
  OPT__param_ipa_max_param_expr_ops_ = 141,  /* --param=ipa-max-param-expr-ops= */
  OPT__param_ipa_max_switch_predicate_bounds_ = 142,/* --param=ipa-max-switch-predicate-bounds= */
  OPT__param_ipa_sra_deref_prob_threshold_ = 143,/* --param=ipa-sra-deref-prob-threshold= */
  OPT__param_ipa_sra_max_replacements_ = 144,/* --param=ipa-sra-max-replacements= */
  OPT__param_ipa_sra_ptr_growth_factor_ = 145,/* --param=ipa-sra-ptr-growth-factor= */
  OPT__param_ipa_sra_ptrwrap_growth_factor_ = 146,/* --param=ipa-sra-ptrwrap-growth-factor= */
  OPT__param_ira_consider_dup_in_all_alts_ = 147,/* --param=ira-consider-dup-in-all-alts= */
  OPT__param_ira_loop_reserved_regs_ = 148,  /* --param=ira-loop-reserved-regs= */
  OPT__param_ira_max_conflict_table_size_ = 149,/* --param=ira-max-conflict-table-size= */
  OPT__param_ira_max_loops_num_ = 150,       /* --param=ira-max-loops-num= */
  OPT__param_ira_simple_lra_insn_threshold_ = 151,/* --param=ira-simple-lra-insn-threshold= */
  OPT__param_iv_always_prune_cand_set_bound_ = 152,/* --param=iv-always-prune-cand-set-bound= */
  OPT__param_iv_consider_all_candidates_bound_ = 153,/* --param=iv-consider-all-candidates-bound= */
  OPT__param_iv_max_considered_uses_ = 154,  /* --param=iv-max-considered-uses= */
  OPT__param_jump_table_max_growth_ratio_for_size_ = 155,/* --param=jump-table-max-growth-ratio-for-size= */
  OPT__param_jump_table_max_growth_ratio_for_speed_ = 156,/* --param=jump-table-max-growth-ratio-for-speed= */
  OPT__param_l1_cache_line_size_ = 157,      /* --param=l1-cache-line-size= */
  OPT__param_l1_cache_size_ = 158,           /* --param=l1-cache-size= */
  OPT__param_l2_cache_size_ = 159,           /* --param=l2-cache-size= */
  OPT__param_large_function_growth_ = 160,   /* --param=large-function-growth= */
  OPT__param_large_function_insns_ = 161,    /* --param=large-function-insns= */
  OPT__param_large_stack_frame_growth_ = 162,/* --param=large-stack-frame-growth= */
  OPT__param_large_stack_frame_ = 163,       /* --param=large-stack-frame= */
  OPT__param_large_unit_insns_ = 164,        /* --param=large-unit-insns= */
  OPT__param_lazy_modules_ = 165,            /* --param=lazy-modules= */
  OPT__param_lim_expensive_ = 166,           /* --param=lim-expensive= */
  OPT__param_logical_op_non_short_circuit_ = 167,/* --param=logical-op-non-short-circuit= */
  OPT__param_loop_block_tile_size_ = 168,    /* --param=loop-block-tile-size= */
  OPT__param_loop_interchange_max_num_stmts_ = 169,/* --param=loop-interchange-max-num-stmts= */
  OPT__param_loop_interchange_stride_ratio_ = 170,/* --param=loop-interchange-stride-ratio= */
  OPT__param_loop_invariant_max_bbs_in_loop_ = 171,/* --param=loop-invariant-max-bbs-in-loop= */
  OPT__param_loop_max_datarefs_for_datadeps_ = 172,/* --param=loop-max-datarefs-for-datadeps= */
  OPT__param_loop_versioning_max_inner_insns_ = 173,/* --param=loop-versioning-max-inner-insns= */
  OPT__param_loop_versioning_max_outer_insns_ = 174,/* --param=loop-versioning-max-outer-insns= */
  OPT__param_lra_inheritance_ebb_probability_cutoff_ = 175,/* --param=lra-inheritance-ebb-probability-cutoff= */
  OPT__param_lra_max_considered_reload_pseudos_ = 176,/* --param=lra-max-considered-reload-pseudos= */
  OPT__param_lto_max_partition_ = 177,       /* --param=lto-max-partition= */
  OPT__param_lto_max_streaming_parallelism_ = 178,/* --param=lto-max-streaming-parallelism= */
  OPT__param_lto_min_partition_ = 179,       /* --param=lto-min-partition= */
  OPT__param_lto_partitions_ = 180,          /* --param=lto-partitions= */
  OPT__param_max_average_unrolled_insns_ = 181,/* --param=max-average-unrolled-insns= */
  OPT__param_max_combine_insns_ = 182,       /* --param=max-combine-insns= */
  OPT__param_max_completely_peel_loop_nest_depth_ = 183,/* --param=max-completely-peel-loop-nest-depth= */
  OPT__param_max_completely_peel_times_ = 184,/* --param=max-completely-peel-times= */
  OPT__param_max_completely_peeled_insns_ = 185,/* --param=max-completely-peeled-insns= */
  OPT__param_max_crossjump_edges_ = 186,     /* --param=max-crossjump-edges= */
  OPT__param_max_cse_insns_ = 187,           /* --param=max-cse-insns= */
  OPT__param_max_cse_path_length_ = 188,     /* --param=max-cse-path-length= */
  OPT__param_max_cselib_memory_locations_ = 189,/* --param=max-cselib-memory-locations= */
  OPT__param_max_debug_marker_count_ = 190,  /* --param=max-debug-marker-count= */
  OPT__param_max_delay_slot_insn_search_ = 191,/* --param=max-delay-slot-insn-search= */
  OPT__param_max_delay_slot_live_search_ = 192,/* --param=max-delay-slot-live-search= */
  OPT__param_max_dse_active_local_stores_ = 193,/* --param=max-dse-active-local-stores= */
  OPT__param_max_early_inliner_iterations_ = 194,/* --param=max-early-inliner-iterations= */
  OPT__param_max_fields_for_field_sensitive_ = 195,/* --param=max-fields-for-field-sensitive= */
  OPT__param_max_find_base_term_values_ = 196,/* --param=max-find-base-term-values= */
  OPT__param_max_fsm_thread_path_insns_ = 197,/* --param=max-fsm-thread-path-insns= */
  OPT__param_max_gcse_insertion_ratio_ = 198,/* --param=max-gcse-insertion-ratio= */
  OPT__param_max_gcse_memory_ = 199,         /* --param=max-gcse-memory= */
  OPT__param_max_goto_duplication_insns_ = 200,/* --param=max-goto-duplication-insns= */
  OPT__param_max_grow_copy_bb_insns_ = 201,  /* --param=max-grow-copy-bb-insns= */
  OPT__param_max_hoist_depth_ = 202,         /* --param=max-hoist-depth= */
  OPT__param_max_inline_functions_called_once_insns_ = 203,/* --param=max-inline-functions-called-once-insns= */
  OPT__param_max_inline_functions_called_once_loop_depth_ = 204,/* --param=max-inline-functions-called-once-loop-depth= */
  OPT__param_max_inline_insns_auto_ = 205,   /* --param=max-inline-insns-auto= */
  OPT__param_max_inline_insns_recursive_auto_ = 206,/* --param=max-inline-insns-recursive-auto= */
  OPT__param_max_inline_insns_recursive_ = 207,/* --param=max-inline-insns-recursive= */
  OPT__param_max_inline_insns_single_ = 208, /* --param=max-inline-insns-single= */
  OPT__param_max_inline_insns_size_ = 209,   /* --param=max-inline-insns-size= */
  OPT__param_max_inline_insns_small_ = 210,  /* --param=max-inline-insns-small= */
  OPT__param_max_inline_recursive_depth_auto_ = 211,/* --param=max-inline-recursive-depth-auto= */
  OPT__param_max_inline_recursive_depth_ = 212,/* --param=max-inline-recursive-depth= */
  OPT__param_max_isl_operations_ = 213,      /* --param=max-isl-operations= */
  OPT__param_max_iterations_computation_cost_ = 214,/* --param=max-iterations-computation-cost= */
  OPT__param_max_iterations_to_track_ = 215, /* --param=max-iterations-to-track= */
  OPT__param_max_jump_thread_duplication_stmts_ = 216,/* --param=max-jump-thread-duplication-stmts= */
  OPT__param_max_jump_thread_paths_ = 217,   /* --param=max-jump-thread-paths= */
  OPT__param_max_last_value_rtl_ = 218,      /* --param=max-last-value-rtl= */
  OPT__param_max_loop_header_insns_ = 219,   /* --param=max-loop-header-insns= */
  OPT__param_max_modulo_backtrack_attempts_ = 220,/* --param=max-modulo-backtrack-attempts= */
  OPT__param_max_partial_antic_length_ = 221,/* --param=max-partial-antic-length= */
  OPT__param_max_peel_branches_ = 222,       /* --param=max-peel-branches= */
  OPT__param_max_peel_times_ = 223,          /* --param=max-peel-times= */
  OPT__param_max_peeled_insns_ = 224,        /* --param=max-peeled-insns= */
  OPT__param_max_pending_list_length_ = 225, /* --param=max-pending-list-length= */
  OPT__param_max_pipeline_region_blocks_ = 226,/* --param=max-pipeline-region-blocks= */
  OPT__param_max_pipeline_region_insns_ = 227,/* --param=max-pipeline-region-insns= */
  OPT__param_max_pow_sqrt_depth_ = 228,      /* --param=max-pow-sqrt-depth= */
  OPT__param_max_predicted_iterations_ = 229,/* --param=max-predicted-iterations= */
  OPT__param_max_reload_search_insns_ = 230, /* --param=max-reload-search-insns= */
  OPT__param_max_rtl_if_conversion_insns_ = 231,/* --param=max-rtl-if-conversion-insns= */
  OPT__param_max_rtl_if_conversion_predictable_cost_ = 232,/* --param=max-rtl-if-conversion-predictable-cost= */
  OPT__param_max_rtl_if_conversion_unpredictable_cost_ = 233,/* --param=max-rtl-if-conversion-unpredictable-cost= */
  OPT__param_max_sched_extend_regions_iters_ = 234,/* --param=max-sched-extend-regions-iters= */
  OPT__param_max_sched_insn_conflict_delay_ = 235,/* --param=max-sched-insn-conflict-delay= */
  OPT__param_max_sched_ready_insns_ = 236,   /* --param=max-sched-ready-insns= */
  OPT__param_max_sched_region_blocks_ = 237, /* --param=max-sched-region-blocks= */
  OPT__param_max_sched_region_insns_ = 238,  /* --param=max-sched-region-insns= */
  OPT__param_max_slsr_cand_scan_ = 239,      /* --param=max-slsr-cand-scan= */
  OPT__param_max_speculative_devirt_maydefs_ = 240,/* --param=max-speculative-devirt-maydefs= */
  OPT__param_max_ssa_name_query_depth_ = 241,/* --param=max-ssa-name-query-depth= */
  OPT__param_max_store_chains_to_track_ = 242,/* --param=max-store-chains-to-track= */
  OPT__param_max_stores_to_merge_ = 243,     /* --param=max-stores-to-merge= */
  OPT__param_max_stores_to_sink_ = 244,      /* --param=max-stores-to-sink= */
  OPT__param_max_stores_to_track_ = 245,     /* --param=max-stores-to-track= */
  OPT__param_max_tail_merge_comparisons_ = 246,/* --param=max-tail-merge-comparisons= */
  OPT__param_max_tail_merge_iterations_ = 247,/* --param=max-tail-merge-iterations= */
  OPT__param_max_tracked_strlens_ = 248,     /* --param=max-tracked-strlens= */
  OPT__param_max_tree_if_conversion_phi_args_ = 249,/* --param=max-tree-if-conversion-phi-args= */
  OPT__param_max_unroll_times_ = 250,        /* --param=max-unroll-times= */
  OPT__param_max_unrolled_insns_ = 251,      /* --param=max-unrolled-insns= */
  OPT__param_max_unswitch_depth_ = 252,      /* --param=max-unswitch-depth= */
  OPT__param_max_unswitch_insns_ = 253,      /* --param=max-unswitch-insns= */
  OPT__param_max_variable_expansions_in_unroller_ = 254,/* --param=max-variable-expansions-in-unroller= */
  OPT__param_max_vartrack_expr_depth_ = 255, /* --param=max-vartrack-expr-depth= */
  OPT__param_max_vartrack_reverse_op_size_ = 256,/* --param=max-vartrack-reverse-op-size= */
  OPT__param_max_vartrack_size_ = 257,       /* --param=max-vartrack-size= */
  OPT__param_min_crossjump_insns_ = 258,     /* --param=min-crossjump-insns= */
  OPT__param_min_inline_recursive_probability_ = 259,/* --param=min-inline-recursive-probability= */
  OPT__param_min_insn_to_prefetch_ratio_ = 260,/* --param=min-insn-to-prefetch-ratio= */
  OPT__param_min_loop_cond_split_prob_ = 261,/* --param=min-loop-cond-split-prob= */
  OPT__param_min_nondebug_insn_uid_ = 262,   /* --param=min-nondebug-insn-uid= */
  OPT__param_min_pagesize_ = 263,            /* --param=min-pagesize= */
  OPT__param_min_size_for_stack_sharing_ = 264,/* --param=min-size-for-stack-sharing= */
  OPT__param_min_spec_prob_ = 265,           /* --param=min-spec-prob= */
  OPT__param_min_vect_loop_bound_ = 266,     /* --param=min-vect-loop-bound= */
  OPT__param_modref_max_accesses_ = 267,     /* --param=modref-max-accesses= */
  OPT__param_modref_max_adjustments_ = 268,  /* --param=modref-max-adjustments= */
  OPT__param_modref_max_bases_ = 269,        /* --param=modref-max-bases= */
  OPT__param_modref_max_depth_ = 270,        /* --param=modref-max-depth= */
  OPT__param_modref_max_escape_points_ = 271,/* --param=modref-max-escape-points= */
  OPT__param_modref_max_refs_ = 272,         /* --param=modref-max-refs= */
  OPT__param_modref_max_tests_ = 273,        /* --param=modref-max-tests= */
  OPT__param_openacc_kernels_ = 274,         /* --param=openacc-kernels= */
  OPT__param_openacc_privatization_ = 275,   /* --param=openacc-privatization= */
  OPT__param_parloops_chunk_size_ = 276,     /* --param=parloops-chunk-size= */
  OPT__param_parloops_min_per_thread_ = 277, /* --param=parloops-min-per-thread= */
  OPT__param_parloops_schedule_ = 278,       /* --param=parloops-schedule= */
  OPT__param_partial_inlining_entry_probability_ = 279,/* --param=partial-inlining-entry-probability= */
  OPT__param_predictable_branch_outcome_ = 280,/* --param=predictable-branch-outcome= */
  OPT__param_prefetch_dynamic_strides_ = 281,/* --param=prefetch-dynamic-strides= */
  OPT__param_prefetch_latency_ = 282,        /* --param=prefetch-latency= */
  OPT__param_prefetch_min_insn_to_mem_ratio_ = 283,/* --param=prefetch-min-insn-to-mem-ratio= */
  OPT__param_prefetch_minimum_stride_ = 284, /* --param=prefetch-minimum-stride= */
  OPT__param_profile_func_internal_id_ = 285,/* --param=profile-func-internal-id= */
  OPT__param_ranger_debug_ = 286,            /* --param=ranger-debug= */
  OPT__param_ranger_logical_depth_ = 287,    /* --param=ranger-logical-depth= */
  OPT__param_ranger_recompute_depth_ = 288,  /* --param=ranger-recompute-depth= */
  OPT__param_relation_block_limit_ = 289,    /* --param=relation-block-limit= */
  OPT__param_rpo_vn_max_loop_depth_ = 290,   /* --param=rpo-vn-max-loop-depth= */
  OPT__param_sccvn_max_alias_queries_per_access_ = 291,/* --param=sccvn-max-alias-queries-per-access= */
  OPT__param_scev_max_expr_complexity_ = 292,/* --param=scev-max-expr-complexity= */
  OPT__param_scev_max_expr_size_ = 293,      /* --param=scev-max-expr-size= */
  OPT__param_sched_autopref_queue_depth_ = 294,/* --param=sched-autopref-queue-depth= */
  OPT__param_sched_mem_true_dep_cost_ = 295, /* --param=sched-mem-true-dep-cost= */
  OPT__param_sched_pressure_algorithm_ = 296,/* --param=sched-pressure-algorithm= */
  OPT__param_sched_spec_prob_cutoff_ = 297,  /* --param=sched-spec-prob-cutoff= */
  OPT__param_sched_state_edge_prob_cutoff_ = 298,/* --param=sched-state-edge-prob-cutoff= */
  OPT__param_selsched_insns_to_rename_ = 299,/* --param=selsched-insns-to-rename= */
  OPT__param_selsched_max_lookahead_ = 300,  /* --param=selsched-max-lookahead= */
  OPT__param_selsched_max_sched_times_ = 301,/* --param=selsched-max-sched-times= */
  OPT__param_simultaneous_prefetches_ = 302, /* --param=simultaneous-prefetches= */
  OPT__param_sink_frequency_threshold_ = 303,/* --param=sink-frequency-threshold= */
  OPT__param_sms_dfa_history_ = 304,         /* --param=sms-dfa-history= */
  OPT__param_sms_loop_average_count_threshold_ = 305,/* --param=sms-loop-average-count-threshold= */
  OPT__param_sms_max_ii_factor_ = 306,       /* --param=sms-max-ii-factor= */
  OPT__param_sms_min_sc_ = 307,              /* --param=sms-min-sc= */
  OPT__param_sra_max_propagations_ = 308,    /* --param=sra-max-propagations= */
  OPT__param_sra_max_scalarization_size_Osize_ = 309,/* --param=sra-max-scalarization-size-Osize= */
  OPT__param_sra_max_scalarization_size_Ospeed_ = 310,/* --param=sra-max-scalarization-size-Ospeed= */
  OPT__param_ssa_name_def_chain_limit_ = 311,/* --param=ssa-name-def-chain-limit= */
  OPT__param_ssp_buffer_size_ = 312,         /* --param=ssp-buffer-size= */
  OPT__param_stack_clash_protection_guard_size_ = 313,/* --param=stack-clash-protection-guard-size= */
  OPT__param_stack_clash_protection_probe_interval_ = 314,/* --param=stack-clash-protection-probe-interval= */
  OPT__param_store_merging_allow_unaligned_ = 315,/* --param=store-merging-allow-unaligned= */
  OPT__param_store_merging_max_size_ = 316,  /* --param=store-merging-max-size= */
  OPT__param_switch_conversion_max_branch_ratio_ = 317,/* --param=switch-conversion-max-branch-ratio= */
  OPT__param_threader_debug_ = 318,          /* --param=threader-debug= */
  OPT__param_tm_max_aggregate_size_ = 319,   /* --param=tm-max-aggregate-size= */
  OPT__param_tracer_dynamic_coverage_feedback_ = 320,/* --param=tracer-dynamic-coverage-feedback= */
  OPT__param_tracer_dynamic_coverage_ = 321, /* --param=tracer-dynamic-coverage= */
  OPT__param_tracer_max_code_growth_ = 322,  /* --param=tracer-max-code-growth= */
  OPT__param_tracer_min_branch_probability_feedback_ = 323,/* --param=tracer-min-branch-probability-feedback= */
  OPT__param_tracer_min_branch_probability_ = 324,/* --param=tracer-min-branch-probability= */
  OPT__param_tracer_min_branch_ratio_ = 325, /* --param=tracer-min-branch-ratio= */
  OPT__param_tree_reassoc_width_ = 326,      /* --param=tree-reassoc-width= */
  OPT__param_tsan_distinguish_volatile_ = 327,/* --param=tsan-distinguish-volatile= */
  OPT__param_tsan_instrument_func_entry_exit_ = 328,/* --param=tsan-instrument-func-entry-exit= */
  OPT__param_uninit_control_dep_attempts_ = 329,/* --param=uninit-control-dep-attempts= */
  OPT__param_uninit_max_chain_len_ = 330,    /* --param=uninit-max-chain-len= */
  OPT__param_uninit_max_num_chains_ = 331,   /* --param=uninit-max-num-chains= */
  OPT__param_uninlined_function_insns_ = 332,/* --param=uninlined-function-insns= */
  OPT__param_uninlined_function_time_ = 333, /* --param=uninlined-function-time= */
  OPT__param_uninlined_thunk_insns_ = 334,   /* --param=uninlined-thunk-insns= */
  OPT__param_uninlined_thunk_time_ = 335,    /* --param=uninlined-thunk-time= */
  OPT__param_unlikely_bb_count_fraction_ = 336,/* --param=unlikely-bb-count-fraction= */
  OPT__param_unroll_jam_max_unroll_ = 337,   /* --param=unroll-jam-max-unroll= */
  OPT__param_unroll_jam_min_percent_ = 338,  /* --param=unroll-jam-min-percent= */
  OPT__param_use_after_scope_direct_emission_threshold_ = 339,/* --param=use-after-scope-direct-emission-threshold= */
  OPT__param_use_canonical_types_ = 340,     /* --param=use-canonical-types= */
  OPT__param_vect_epilogues_nomask_ = 341,   /* --param=vect-epilogues-nomask= */
  OPT__param_vect_induction_float_ = 342,    /* --param=vect-induction-float= */
  OPT__param_vect_inner_loop_cost_factor_ = 343,/* --param=vect-inner-loop-cost-factor= */
  OPT__param_vect_max_layout_candidates_ = 344,/* --param=vect-max-layout-candidates= */
  OPT__param_vect_max_peeling_for_alignment_ = 345,/* --param=vect-max-peeling-for-alignment= */
  OPT__param_vect_max_version_for_alias_checks_ = 346,/* --param=vect-max-version-for-alias-checks= */
  OPT__param_vect_max_version_for_alignment_checks_ = 347,/* --param=vect-max-version-for-alignment-checks= */
  OPT__param_vect_partial_vector_usage_ = 348,/* --param=vect-partial-vector-usage= */
  OPT__param_vrp_sparse_threshold_ = 349,    /* --param=vrp-sparse-threshold= */
  OPT__param_vrp_switch_limit_ = 350,        /* --param=vrp-switch-limit= */
  OPT__param_vrp_vector_threshold_ = 351,    /* --param=vrp-vector-threshold= */
  /* OPT__pass_exit_codes = 352, */          /* --pass-exit-codes */
  /* OPT__pedantic = 353, */                 /* --pedantic */
  /* OPT__pedantic_errors = 354, */          /* --pedantic-errors */
  /* OPT__pie = 355, */                      /* --pie */
  /* OPT__pipe = 356, */                     /* --pipe */
  /* OPT__prefix = 357, */                   /* --prefix */
  /* OPT__prefix_ = 358, */                  /* --prefix= */
  /* OPT__preprocess = 359, */               /* --preprocess */
  /* OPT__print_file_name = 360, */          /* --print-file-name */
  /* OPT__print_file_name_ = 361, */         /* --print-file-name= */
  /* OPT__print_libgcc_file_name = 362, */   /* --print-libgcc-file-name */
  /* OPT__print_missing_file_dependencies = 363, *//* --print-missing-file-dependencies */
  /* OPT__print_multi_directory = 364, */    /* --print-multi-directory */
  /* OPT__print_multi_lib = 365, */          /* --print-multi-lib */
  /* OPT__print_multi_os_directory = 366, */ /* --print-multi-os-directory */
  /* OPT__print_multiarch = 367, */          /* --print-multiarch */
  /* OPT__print_prog_name = 368, */          /* --print-prog-name */
  /* OPT__print_prog_name_ = 369, */         /* --print-prog-name= */
  /* OPT__print_search_dirs = 370, */        /* --print-search-dirs */
  /* OPT__print_sysroot = 371, */            /* --print-sysroot */
  /* OPT__print_sysroot_headers_suffix = 372, *//* --print-sysroot-headers-suffix */
  /* OPT__profile = 373, */                  /* --profile */
  /* OPT__save_temps = 374, */               /* --save-temps */
  /* OPT__shared = 375, */                   /* --shared */
  /* OPT__specs = 376, */                    /* --specs */
  /* OPT__specs_ = 377, */                   /* --specs= */
  /* OPT__static = 378, */                   /* --static */
  /* OPT__static_pie = 379, */               /* --static-pie */
  /* OPT__symbolic = 380, */                 /* --symbolic */
  /* OPT__sysroot = 381, */                  /* --sysroot */
  OPT__sysroot_ = 382,                       /* --sysroot= */
  OPT__target_help = 383,                    /* --target-help */
  /* OPT__time = 384, */                     /* --time */
  /* OPT__trace_includes = 385, */           /* --trace-includes */
  /* OPT__traditional = 386, */              /* --traditional */
  /* OPT__traditional_cpp = 387, */          /* --traditional-cpp */
  /* OPT__trigraphs = 388, */                /* --trigraphs */
  /* OPT__undefine_macro = 389, */           /* --undefine-macro */
  /* OPT__undefine_macro_ = 390, */          /* --undefine-macro= */
  /* OPT__user_dependencies = 391, */        /* --user-dependencies */
  /* OPT__verbose = 392, */                  /* --verbose */
  OPT__version = 393,                        /* --version */
  /* OPT__write_dependencies = 394, */       /* --write-dependencies */
  /* OPT__write_user_dependencies = 395, */  /* --write-user-dependencies */
  OPT_A = 396,                               /* -A */
  OPT_B = 397,                               /* -B */
  OPT_C = 398,                               /* -C */
  OPT_CC = 399,                              /* -CC */
  OPT_D = 400,                               /* -D */
  OPT_E = 401,                               /* -E */
  OPT_F = 402,                               /* -F */
  OPT_H = 403,                               /* -H */
  OPT_Hd = 404,                              /* -Hd */
  OPT_Hf = 405,                              /* -Hf */
  OPT_I = 406,                               /* -I */
  OPT_J = 407,                               /* -J */
  OPT_L = 408,                               /* -L */
  OPT_M = 409,                               /* -M */
  OPT_MD = 410,                              /* -MD */
  OPT_MF = 411,                              /* -MF */
  OPT_MG = 412,                              /* -MG */
  OPT_MM = 413,                              /* -MM */
  OPT_MMD = 414,                             /* -MMD */
  OPT_MP = 415,                              /* -MP */
  OPT_MQ = 416,                              /* -MQ */
  OPT_MT = 417,                              /* -MT */
  OPT_Mmodules = 418,                        /* -Mmodules */
  OPT_Mno_modules = 419,                     /* -Mno-modules */
  OPT_N = 420,                               /* -N */
  OPT_O = 421,                               /* -O */
  OPT_Ofast = 422,                           /* -Ofast */
  OPT_Og = 423,                              /* -Og */
  OPT_Os = 424,                              /* -Os */
  OPT_Oz = 425,                              /* -Oz */
  OPT_P = 426,                               /* -P */
  OPT_Q = 427,                               /* -Q */
  OPT_Qn = 428,                              /* -Qn */
  OPT_Qy = 429,                              /* -Qy */
  OPT_R = 430,                               /* -R */
  OPT_S = 431,                               /* -S */
  OPT_T = 432,                               /* -T */
  OPT_Tbss = 433,                            /* -Tbss */
  OPT_Tbss_ = 434,                           /* -Tbss= */
  OPT_Tdata = 435,                           /* -Tdata */
  OPT_Tdata_ = 436,                          /* -Tdata= */
  OPT_Ttext = 437,                           /* -Ttext */
  OPT_Ttext_ = 438,                          /* -Ttext= */
  OPT_U = 439,                               /* -U */
  /* OPT_W = 440, */                         /* -W */
  OPT_WNSObject_attribute = 441,             /* -WNSObject-attribute */
  OPT_Wa_ = 442,                             /* -Wa, */
  OPT_Wabi = 443,                            /* -Wabi */
  OPT_Wabi_tag = 444,                        /* -Wabi-tag */
  OPT_Wabi_ = 445,                           /* -Wabi= */
  OPT_Wabsolute_value = 446,                 /* -Wabsolute-value */
  OPT_Waddress = 447,                        /* -Waddress */
  OPT_Waddress_of_packed_member = 448,       /* -Waddress-of-packed-member */
  OPT_Waggregate_return = 449,               /* -Waggregate-return */
  OPT_Waggressive_loop_optimizations = 450,  /* -Waggressive-loop-optimizations */
  OPT_Waliasing = 451,                       /* -Waliasing */
  OPT_Walign_commons = 452,                  /* -Walign-commons */
  /* OPT_Waligned_new = 453, */              /* -Waligned-new */
  OPT_Waligned_new_ = 454,                   /* -Waligned-new= */
  OPT_Wall = 455,                            /* -Wall */
  OPT_Walloc_size = 456,                     /* -Walloc-size */
  OPT_Walloc_size_larger_than_ = 457,        /* -Walloc-size-larger-than= */
  OPT_Walloc_zero = 458,                     /* -Walloc-zero */
  OPT_Walloca = 459,                         /* -Walloca */
  OPT_Walloca_larger_than_ = 460,            /* -Walloca-larger-than= */
  OPT_Wampersand = 461,                      /* -Wampersand */
  OPT_Wanalyzer_allocation_size = 462,       /* -Wanalyzer-allocation-size */
  OPT_Wanalyzer_deref_before_check = 463,    /* -Wanalyzer-deref-before-check */
  OPT_Wanalyzer_double_fclose = 464,         /* -Wanalyzer-double-fclose */
  OPT_Wanalyzer_double_free = 465,           /* -Wanalyzer-double-free */
  OPT_Wanalyzer_exposure_through_output_file = 466,/* -Wanalyzer-exposure-through-output-file */
  OPT_Wanalyzer_exposure_through_uninit_copy = 467,/* -Wanalyzer-exposure-through-uninit-copy */
  OPT_Wanalyzer_fd_access_mode_mismatch = 468,/* -Wanalyzer-fd-access-mode-mismatch */
  OPT_Wanalyzer_fd_double_close = 469,       /* -Wanalyzer-fd-double-close */
  OPT_Wanalyzer_fd_leak = 470,               /* -Wanalyzer-fd-leak */
  OPT_Wanalyzer_fd_phase_mismatch = 471,     /* -Wanalyzer-fd-phase-mismatch */
  OPT_Wanalyzer_fd_type_mismatch = 472,      /* -Wanalyzer-fd-type-mismatch */
  OPT_Wanalyzer_fd_use_after_close = 473,    /* -Wanalyzer-fd-use-after-close */
  OPT_Wanalyzer_fd_use_without_check = 474,  /* -Wanalyzer-fd-use-without-check */
  OPT_Wanalyzer_file_leak = 475,             /* -Wanalyzer-file-leak */
  OPT_Wanalyzer_free_of_non_heap = 476,      /* -Wanalyzer-free-of-non-heap */
  OPT_Wanalyzer_imprecise_fp_arithmetic = 477,/* -Wanalyzer-imprecise-fp-arithmetic */
  OPT_Wanalyzer_infinite_loop = 478,         /* -Wanalyzer-infinite-loop */
  OPT_Wanalyzer_infinite_recursion = 479,    /* -Wanalyzer-infinite-recursion */
  OPT_Wanalyzer_jump_through_null = 480,     /* -Wanalyzer-jump-through-null */
  OPT_Wanalyzer_malloc_leak = 481,           /* -Wanalyzer-malloc-leak */
  OPT_Wanalyzer_mismatching_deallocation = 482,/* -Wanalyzer-mismatching-deallocation */
  OPT_Wanalyzer_null_argument = 483,         /* -Wanalyzer-null-argument */
  OPT_Wanalyzer_null_dereference = 484,      /* -Wanalyzer-null-dereference */
  OPT_Wanalyzer_out_of_bounds = 485,         /* -Wanalyzer-out-of-bounds */
  OPT_Wanalyzer_overlapping_buffers = 486,   /* -Wanalyzer-overlapping-buffers */
  OPT_Wanalyzer_possible_null_argument = 487,/* -Wanalyzer-possible-null-argument */
  OPT_Wanalyzer_possible_null_dereference = 488,/* -Wanalyzer-possible-null-dereference */
  OPT_Wanalyzer_putenv_of_auto_var = 489,    /* -Wanalyzer-putenv-of-auto-var */
  OPT_Wanalyzer_shift_count_negative = 490,  /* -Wanalyzer-shift-count-negative */
  OPT_Wanalyzer_shift_count_overflow = 491,  /* -Wanalyzer-shift-count-overflow */
  OPT_Wanalyzer_stale_setjmp_buffer = 492,   /* -Wanalyzer-stale-setjmp-buffer */
  OPT_Wanalyzer_symbol_too_complex = 493,    /* -Wanalyzer-symbol-too-complex */
  OPT_Wanalyzer_tainted_allocation_size = 494,/* -Wanalyzer-tainted-allocation-size */
  OPT_Wanalyzer_tainted_array_index = 495,   /* -Wanalyzer-tainted-array-index */
  OPT_Wanalyzer_tainted_assertion = 496,     /* -Wanalyzer-tainted-assertion */
  OPT_Wanalyzer_tainted_divisor = 497,       /* -Wanalyzer-tainted-divisor */
  OPT_Wanalyzer_tainted_offset = 498,        /* -Wanalyzer-tainted-offset */
  OPT_Wanalyzer_tainted_size = 499,          /* -Wanalyzer-tainted-size */
  OPT_Wanalyzer_too_complex = 500,           /* -Wanalyzer-too-complex */
  OPT_Wanalyzer_undefined_behavior_strtok = 501,/* -Wanalyzer-undefined-behavior-strtok */
  OPT_Wanalyzer_unsafe_call_within_signal_handler = 502,/* -Wanalyzer-unsafe-call-within-signal-handler */
  OPT_Wanalyzer_use_after_free = 503,        /* -Wanalyzer-use-after-free */
  OPT_Wanalyzer_use_of_pointer_in_stale_stack_frame = 504,/* -Wanalyzer-use-of-pointer-in-stale-stack-frame */
  OPT_Wanalyzer_use_of_uninitialized_value = 505,/* -Wanalyzer-use-of-uninitialized-value */
  OPT_Wanalyzer_va_arg_type_mismatch = 506,  /* -Wanalyzer-va-arg-type-mismatch */
  OPT_Wanalyzer_va_list_exhausted = 507,     /* -Wanalyzer-va-list-exhausted */
  OPT_Wanalyzer_va_list_leak = 508,          /* -Wanalyzer-va-list-leak */
  OPT_Wanalyzer_va_list_use_after_va_end = 509,/* -Wanalyzer-va-list-use-after-va-end */
  OPT_Wanalyzer_write_to_const = 510,        /* -Wanalyzer-write-to-const */
  OPT_Wanalyzer_write_to_string_literal = 511,/* -Wanalyzer-write-to-string-literal */
  OPT_Wargument_mismatch = 512,              /* -Wargument-mismatch */
  OPT_Warith_conversion = 513,               /* -Warith-conversion */
  /* OPT_Warray_bounds = 514, */             /* -Warray-bounds */
  OPT_Warray_bounds_ = 515,                  /* -Warray-bounds= */
  OPT_Warray_compare = 516,                  /* -Warray-compare */
  /* OPT_Warray_parameter = 517, */          /* -Warray-parameter */
  OPT_Warray_parameter_ = 518,               /* -Warray-parameter= */
  OPT_Warray_temporaries = 519,              /* -Warray-temporaries */
  OPT_Wassign_intercept = 520,               /* -Wassign-intercept */
  /* OPT_Wattribute_alias = 521, */          /* -Wattribute-alias */
  OPT_Wattribute_alias_ = 522,               /* -Wattribute-alias= */
  OPT_Wattribute_warning = 523,              /* -Wattribute-warning */
  OPT_Wattributes = 524,                     /* -Wattributes */
  OPT_Wattributes_ = 525,                    /* -Wattributes= */
  OPT_Wbad_function_cast = 526,              /* -Wbad-function-cast */
  /* OPT_Wbidi_chars = 527, */               /* -Wbidi-chars */
  OPT_Wbidi_chars_ = 528,                    /* -Wbidi-chars= */
  OPT_Wbool_compare = 529,                   /* -Wbool-compare */
  OPT_Wbool_operation = 530,                 /* -Wbool-operation */
  OPT_Wbuiltin_declaration_mismatch = 531,   /* -Wbuiltin-declaration-mismatch */
  OPT_Wbuiltin_macro_redefined = 532,        /* -Wbuiltin-macro-redefined */
  OPT_Wc___compat = 533,                     /* -Wc++-compat */
  /* OPT_Wc__0x_compat = 534, */             /* -Wc++0x-compat */
  OPT_Wc__11_compat = 535,                   /* -Wc++11-compat */
  OPT_Wc__11_extensions = 536,               /* -Wc++11-extensions */
  OPT_Wc__14_compat = 537,                   /* -Wc++14-compat */
  OPT_Wc__14_extensions = 538,               /* -Wc++14-extensions */
  OPT_Wc__17_compat = 539,                   /* -Wc++17-compat */
  OPT_Wc__17_extensions = 540,               /* -Wc++17-extensions */
  /* OPT_Wc__1z_compat = 541, */             /* -Wc++1z-compat */
  OPT_Wc__20_compat = 542,                   /* -Wc++20-compat */
  OPT_Wc__20_extensions = 543,               /* -Wc++20-extensions */
  OPT_Wc__23_extensions = 544,               /* -Wc++23-extensions */
  OPT_Wc__26_extensions = 545,               /* -Wc++26-extensions */
  /* OPT_Wc__2a_compat = 546, */             /* -Wc++2a-compat */
  OPT_Wc_binding_type = 547,                 /* -Wc-binding-type */
  OPT_Wc11_c23_compat = 548,                 /* -Wc11-c23-compat */
  /* OPT_Wc11_c2x_compat = 549, */           /* -Wc11-c2x-compat */
  OPT_Wc90_c99_compat = 550,                 /* -Wc90-c99-compat */
  OPT_Wc99_c11_compat = 551,                 /* -Wc99-c11-compat */
  OPT_Wcalloc_transposed_args = 552,         /* -Wcalloc-transposed-args */
  OPT_Wcannot_profile = 553,                 /* -Wcannot-profile */
  OPT_Wcase_enum = 554,                      /* -Wcase-enum */
  OPT_Wcast_align = 555,                     /* -Wcast-align */
  OPT_Wcast_align_strict = 556,              /* -Wcast-align=strict */
  OPT_Wcast_function_type = 557,             /* -Wcast-function-type */
  OPT_Wcast_qual = 558,                      /* -Wcast-qual */
  OPT_Wcast_result = 559,                    /* -Wcast-result */
  /* OPT_Wcatch_value = 560, */              /* -Wcatch-value */
  OPT_Wcatch_value_ = 561,                   /* -Wcatch-value= */
  OPT_Wchanges_meaning = 562,                /* -Wchanges-meaning */
  OPT_Wchar_subscripts = 563,                /* -Wchar-subscripts */
  OPT_Wcharacter_truncation = 564,           /* -Wcharacter-truncation */
  OPT_Wchkp = 565,                           /* -Wchkp */
  OPT_Wclass_conversion = 566,               /* -Wclass-conversion */
  OPT_Wclass_memaccess = 567,                /* -Wclass-memaccess */
  OPT_Wclobbered = 568,                      /* -Wclobbered */
  OPT_Wcomma_subscript = 569,                /* -Wcomma-subscript */
  OPT_Wcomment = 570,                        /* -Wcomment */
  /* OPT_Wcomments = 571, */                 /* -Wcomments */
  OPT_Wcompare_distinct_pointer_types = 572, /* -Wcompare-distinct-pointer-types */
  OPT_Wcompare_reals = 573,                  /* -Wcompare-reals */
  OPT_Wcomplain_wrong_lang = 574,            /* -Wcomplain-wrong-lang */
  OPT_Wconditionally_supported = 575,        /* -Wconditionally-supported */
  OPT_Wconversion = 576,                     /* -Wconversion */
  OPT_Wconversion_extra = 577,               /* -Wconversion-extra */
  OPT_Wconversion_null = 578,                /* -Wconversion-null */
  OPT_Wcoverage_invalid_line_number = 579,   /* -Wcoverage-invalid-line-number */
  OPT_Wcoverage_mismatch = 580,              /* -Wcoverage-mismatch */
  OPT_Wcpp = 581,                            /* -Wcpp */
  OPT_Wctad_maybe_unsupported = 582,         /* -Wctad-maybe-unsupported */
  OPT_Wctor_dtor_privacy = 583,              /* -Wctor-dtor-privacy */
  OPT_Wdangling_else = 584,                  /* -Wdangling-else */
  /* OPT_Wdangling_pointer = 585, */         /* -Wdangling-pointer */
  OPT_Wdangling_pointer_ = 586,              /* -Wdangling-pointer= */
  OPT_Wdangling_reference = 587,             /* -Wdangling-reference */
  OPT_Wdate_time = 588,                      /* -Wdate-time */
  OPT_Wdeclaration_after_statement = 589,    /* -Wdeclaration-after-statement */
  OPT_Wdeclaration_missing_parameter_type = 590,/* -Wdeclaration-missing-parameter-type */
  OPT_Wdelete_incomplete = 591,              /* -Wdelete-incomplete */
  OPT_Wdelete_non_virtual_dtor = 592,        /* -Wdelete-non-virtual-dtor */
  OPT_Wdeprecated = 593,                     /* -Wdeprecated */
  OPT_Wdeprecated_copy = 594,                /* -Wdeprecated-copy */
  OPT_Wdeprecated_copy_dtor = 595,           /* -Wdeprecated-copy-dtor */
  OPT_Wdeprecated_declarations = 596,        /* -Wdeprecated-declarations */
  OPT_Wdeprecated_enum_enum_conversion = 597,/* -Wdeprecated-enum-enum-conversion */
  OPT_Wdeprecated_enum_float_conversion = 598,/* -Wdeprecated-enum-float-conversion */
  OPT_Wdesignated_init = 599,                /* -Wdesignated-init */
  OPT_Wdisabled_optimization = 600,          /* -Wdisabled-optimization */
  OPT_Wdiscarded_array_qualifiers = 601,     /* -Wdiscarded-array-qualifiers */
  OPT_Wdiscarded_qualifiers = 602,           /* -Wdiscarded-qualifiers */
  OPT_Wdiv_by_zero = 603,                    /* -Wdiv-by-zero */
  OPT_Wdo_subscript = 604,                   /* -Wdo-subscript */
  OPT_Wdouble_promotion = 605,               /* -Wdouble-promotion */
  OPT_Wduplicate_decl_specifier = 606,       /* -Wduplicate-decl-specifier */
  OPT_Wduplicated_branches = 607,            /* -Wduplicated-branches */
  OPT_Wduplicated_cond = 608,                /* -Wduplicated-cond */
  OPT_Weffc__ = 609,                         /* -Weffc++ */
  OPT_Welaborated_enum_base = 610,           /* -Welaborated-enum-base */
  OPT_Wempty_body = 611,                     /* -Wempty-body */
  OPT_Wendif_labels = 612,                   /* -Wendif-labels */
  OPT_Wenum_compare = 613,                   /* -Wenum-compare */
  OPT_Wenum_conversion = 614,                /* -Wenum-conversion */
  OPT_Wenum_int_mismatch = 615,              /* -Wenum-int-mismatch */
  OPT_Werror = 616,                          /* -Werror */
  /* OPT_Werror_implicit_function_declaration = 617, *//* -Werror-implicit-function-declaration */
  OPT_Werror_ = 618,                         /* -Werror= */
  OPT_Wexceptions = 619,                     /* -Wexceptions */
  OPT_Wexpansion_to_defined = 620,           /* -Wexpansion-to-defined */
  OPT_Wextra = 621,                          /* -Wextra */
  OPT_Wextra_semi = 622,                     /* -Wextra-semi */
  OPT_Wfatal_errors = 623,                   /* -Wfatal-errors */
  OPT_Wflex_array_member_not_at_end = 624,   /* -Wflex-array-member-not-at-end */
  OPT_Wfloat_conversion = 625,               /* -Wfloat-conversion */
  OPT_Wfloat_equal = 626,                    /* -Wfloat-equal */
  /* OPT_Wformat = 627, */                   /* -Wformat */
  OPT_Wformat_contains_nul = 628,            /* -Wformat-contains-nul */
  OPT_Wformat_diag = 629,                    /* -Wformat-diag */
  OPT_Wformat_extra_args = 630,              /* -Wformat-extra-args */
  OPT_Wformat_nonliteral = 631,              /* -Wformat-nonliteral */
  /* OPT_Wformat_overflow = 632, */          /* -Wformat-overflow */
  OPT_Wformat_overflow_ = 633,               /* -Wformat-overflow= */
  OPT_Wformat_security = 634,                /* -Wformat-security */
  OPT_Wformat_signedness = 635,              /* -Wformat-signedness */
  /* OPT_Wformat_truncation = 636, */        /* -Wformat-truncation */
  OPT_Wformat_truncation_ = 637,             /* -Wformat-truncation= */
  OPT_Wformat_y2k = 638,                     /* -Wformat-y2k */
  OPT_Wformat_zero_length = 639,             /* -Wformat-zero-length */
  OPT_Wformat_ = 640,                        /* -Wformat= */
  OPT_Wframe_address = 641,                  /* -Wframe-address */
  OPT_Wframe_larger_than_ = 642,             /* -Wframe-larger-than= */
  OPT_Wfree_nonheap_object = 643,            /* -Wfree-nonheap-object */
  OPT_Wfrontend_loop_interchange = 644,      /* -Wfrontend-loop-interchange */
  OPT_Wfunction_elimination = 645,           /* -Wfunction-elimination */
  OPT_Wglobal_module = 646,                  /* -Wglobal-module */
  OPT_Whardened = 647,                       /* -Whardened */
  /* OPT_Whsa = 648, */                      /* -Whsa */
  OPT_Wif_not_aligned = 649,                 /* -Wif-not-aligned */
  OPT_Wignored_attributes = 650,             /* -Wignored-attributes */
  OPT_Wignored_qualifiers = 651,             /* -Wignored-qualifiers */
  OPT_Wimplicit = 652,                       /* -Wimplicit */
  /* OPT_Wimplicit_fallthrough = 653, */     /* -Wimplicit-fallthrough */
  OPT_Wimplicit_fallthrough_ = 654,          /* -Wimplicit-fallthrough= */
  OPT_Wimplicit_function_declaration = 655,  /* -Wimplicit-function-declaration */
  OPT_Wimplicit_int = 656,                   /* -Wimplicit-int */
  OPT_Wimplicit_interface = 657,             /* -Wimplicit-interface */
  OPT_Wimplicit_procedure = 658,             /* -Wimplicit-procedure */
  /* OPT_Wimport = 659, */                   /* -Wimport */
  OPT_Winaccessible_base = 660,              /* -Winaccessible-base */
  OPT_Wincompatible_pointer_types = 661,     /* -Wincompatible-pointer-types */
  OPT_Winfinite_recursion = 662,             /* -Winfinite-recursion */
  OPT_Winherited_variadic_ctor = 663,        /* -Winherited-variadic-ctor */
  OPT_Winit_list_lifetime = 664,             /* -Winit-list-lifetime */
  OPT_Winit_self = 665,                      /* -Winit-self */
  OPT_Winline = 666,                         /* -Winline */
  OPT_Wint_conversion = 667,                 /* -Wint-conversion */
  OPT_Wint_in_bool_context = 668,            /* -Wint-in-bool-context */
  OPT_Wint_to_pointer_cast = 669,            /* -Wint-to-pointer-cast */
  OPT_Winteger_division = 670,               /* -Winteger-division */
  OPT_Winterference_size = 671,              /* -Winterference-size */
  OPT_Wintrinsic_shadow = 672,               /* -Wintrinsic-shadow */
  OPT_Wintrinsics_std = 673,                 /* -Wintrinsics-std */
  OPT_Winvalid_constexpr = 674,              /* -Winvalid-constexpr */
  OPT_Winvalid_imported_macros = 675,        /* -Winvalid-imported-macros */
  OPT_Winvalid_memory_model = 676,           /* -Winvalid-memory-model */
  OPT_Winvalid_offsetof = 677,               /* -Winvalid-offsetof */
  OPT_Winvalid_pch = 678,                    /* -Winvalid-pch */
  OPT_Winvalid_utf8 = 679,                   /* -Winvalid-utf8 */
  OPT_Wjump_misses_init = 680,               /* -Wjump-misses-init */
  OPT_Wl_ = 681,                             /* -Wl, */
  /* OPT_Wlarger_than_ = 682, */             /* -Wlarger-than- */
  OPT_Wlarger_than_ = 683,                   /* -Wlarger-than= */
  OPT_Wline_truncation = 684,                /* -Wline-truncation */
  OPT_Wliteral_suffix = 685,                 /* -Wliteral-suffix */
  OPT_Wlogical_not_parentheses = 686,        /* -Wlogical-not-parentheses */
  OPT_Wlogical_op = 687,                     /* -Wlogical-op */
  OPT_Wlong_long = 688,                      /* -Wlong-long */
  OPT_Wlto_type_mismatch = 689,              /* -Wlto-type-mismatch */
  OPT_Wmain = 690,                           /* -Wmain */
  OPT_Wmaybe_uninitialized = 691,            /* -Wmaybe-uninitialized */
  OPT_Wmemset_elt_size = 692,                /* -Wmemset-elt-size */
  OPT_Wmemset_transposed_args = 693,         /* -Wmemset-transposed-args */
  OPT_Wmisleading_indentation = 694,         /* -Wmisleading-indentation */
  OPT_Wmismatched_dealloc = 695,             /* -Wmismatched-dealloc */
  OPT_Wmismatched_new_delete = 696,          /* -Wmismatched-new-delete */
  OPT_Wmismatched_special_enum = 697,        /* -Wmismatched-special-enum */
  OPT_Wmismatched_tags = 698,                /* -Wmismatched-tags */
  OPT_Wmissing_attributes = 699,             /* -Wmissing-attributes */
  OPT_Wmissing_braces = 700,                 /* -Wmissing-braces */
  OPT_Wmissing_declarations = 701,           /* -Wmissing-declarations */
  OPT_Wmissing_field_initializers = 702,     /* -Wmissing-field-initializers */
  /* OPT_Wmissing_format_attribute = 703, */ /* -Wmissing-format-attribute */
  OPT_Wmissing_include_dirs = 704,           /* -Wmissing-include-dirs */
  /* OPT_Wmissing_noreturn = 705, */         /* -Wmissing-noreturn */
  OPT_Wmissing_parameter_type = 706,         /* -Wmissing-parameter-type */
  OPT_Wmissing_profile = 707,                /* -Wmissing-profile */
  OPT_Wmissing_prototypes = 708,             /* -Wmissing-prototypes */
  OPT_Wmissing_requires = 709,               /* -Wmissing-requires */
  OPT_Wmissing_template_keyword = 710,       /* -Wmissing-template-keyword */
  OPT_Wmissing_variable_declarations = 711,  /* -Wmissing-variable-declarations */
  OPT_Wmudflap = 712,                        /* -Wmudflap */
  OPT_Wmultichar = 713,                      /* -Wmultichar */
  OPT_Wmultiple_inheritance = 714,           /* -Wmultiple-inheritance */
  OPT_Wmultistatement_macros = 715,          /* -Wmultistatement-macros */
  OPT_Wnamespaces = 716,                     /* -Wnamespaces */
  OPT_Wnarrowing = 717,                      /* -Wnarrowing */
  OPT_Wnested_externs = 718,                 /* -Wnested-externs */
  /* OPT_Wno_alloc_size_larger_than = 719, *//* -Wno-alloc-size-larger-than */
  /* OPT_Wno_alloca_larger_than = 720, */    /* -Wno-alloca-larger-than */
  /* OPT_Wno_frame_larger_than = 721, */     /* -Wno-frame-larger-than */
  /* OPT_Wno_larger_than = 722, */           /* -Wno-larger-than */
  /* OPT_Wno_stack_usage = 723, */           /* -Wno-stack-usage */
  /* OPT_Wno_vla_larger_than = 724, */       /* -Wno-vla-larger-than */
  OPT_Wnoexcept = 725,                       /* -Wnoexcept */
  OPT_Wnoexcept_type = 726,                  /* -Wnoexcept-type */
  OPT_Wnon_template_friend = 727,            /* -Wnon-template-friend */
  OPT_Wnon_virtual_dtor = 728,               /* -Wnon-virtual-dtor */
  OPT_Wnonnull = 729,                        /* -Wnonnull */
  OPT_Wnonnull_compare = 730,                /* -Wnonnull-compare */
  /* OPT_Wnormalized = 731, */               /* -Wnormalized */
  OPT_Wnormalized_ = 732,                    /* -Wnormalized= */
  OPT_Wnrvo = 733,                           /* -Wnrvo */
  OPT_Wnull_dereference = 734,               /* -Wnull-dereference */
  OPT_Wobjc_root_class = 735,                /* -Wobjc-root-class */
  OPT_Wodr = 736,                            /* -Wodr */
  OPT_Wold_style_cast = 737,                 /* -Wold-style-cast */
  OPT_Wold_style_declaration = 738,          /* -Wold-style-declaration */
  OPT_Wold_style_definition = 739,           /* -Wold-style-definition */
  OPT_Wopenacc_parallelism = 740,            /* -Wopenacc-parallelism */
  OPT_Wopenmp = 741,                         /* -Wopenmp */
  OPT_Wopenmp_simd = 742,                    /* -Wopenmp-simd */
  OPT_Woverflow = 743,                       /* -Woverflow */
  OPT_Woverlength_strings = 744,             /* -Woverlength-strings */
  /* OPT_Woverloaded_virtual = 745, */       /* -Woverloaded-virtual */
  OPT_Woverloaded_virtual_ = 746,            /* -Woverloaded-virtual= */
  OPT_Woverride_init = 747,                  /* -Woverride-init */
  OPT_Woverride_init_side_effects = 748,     /* -Woverride-init-side-effects */
  OPT_Woverwrite_recursive = 749,            /* -Woverwrite-recursive */
  OPT_Wp_ = 750,                             /* -Wp, */
  OPT_Wpacked = 751,                         /* -Wpacked */
  OPT_Wpacked_bitfield_compat = 752,         /* -Wpacked-bitfield-compat */
  OPT_Wpacked_not_aligned = 753,             /* -Wpacked-not-aligned */
  OPT_Wpadded = 754,                         /* -Wpadded */
  OPT_Wparentheses = 755,                    /* -Wparentheses */
  OPT_Wpedantic = 756,                       /* -Wpedantic */
  OPT_Wpedantic_cast = 757,                  /* -Wpedantic-cast */
  OPT_Wpedantic_param_names = 758,           /* -Wpedantic-param-names */
  OPT_Wpessimizing_move = 759,               /* -Wpessimizing-move */
  /* OPT_Wplacement_new = 760, */            /* -Wplacement-new */
  OPT_Wplacement_new_ = 761,                 /* -Wplacement-new= */
  OPT_Wpmf_conversions = 762,                /* -Wpmf-conversions */
  OPT_Wpointer_arith = 763,                  /* -Wpointer-arith */
  OPT_Wpointer_compare = 764,                /* -Wpointer-compare */
  OPT_Wpointer_sign = 765,                   /* -Wpointer-sign */
  OPT_Wpointer_to_int_cast = 766,            /* -Wpointer-to-int-cast */
  OPT_Wpragmas = 767,                        /* -Wpragmas */
  OPT_Wprio_ctor_dtor = 768,                 /* -Wprio-ctor-dtor */
  OPT_Wproperty_assign_default = 769,        /* -Wproperty-assign-default */
  OPT_Wprotocol = 770,                       /* -Wprotocol */
  OPT_Wpsabi = 771,                          /* -Wpsabi */
  OPT_Wrange_loop_construct = 772,           /* -Wrange-loop-construct */
  OPT_Wreal_q_constant = 773,                /* -Wreal-q-constant */
  OPT_Wrealloc_lhs = 774,                    /* -Wrealloc-lhs */
  OPT_Wrealloc_lhs_all = 775,                /* -Wrealloc-lhs-all */
  OPT_Wredundant_decls = 776,                /* -Wredundant-decls */
  OPT_Wredundant_move = 777,                 /* -Wredundant-move */
  OPT_Wredundant_tags = 778,                 /* -Wredundant-tags */
  OPT_Wregister = 779,                       /* -Wregister */
  OPT_Wreorder = 780,                        /* -Wreorder */
  OPT_Wrestrict = 781,                       /* -Wrestrict */
  OPT_Wreturn_local_addr = 782,              /* -Wreturn-local-addr */
  OPT_Wreturn_mismatch = 783,                /* -Wreturn-mismatch */
  OPT_Wreturn_type = 784,                    /* -Wreturn-type */
  OPT_Wscalar_storage_order = 785,           /* -Wscalar-storage-order */
  OPT_Wselector = 786,                       /* -Wselector */
  OPT_Wself_move = 787,                      /* -Wself-move */
  OPT_Wsequence_point = 788,                 /* -Wsequence-point */
  OPT_Wshadow = 789,                         /* -Wshadow */
  /* OPT_Wshadow_compatible_local = 790, */  /* -Wshadow-compatible-local */
  OPT_Wshadow_ivar = 791,                    /* -Wshadow-ivar */
  /* OPT_Wshadow_local = 792, */             /* -Wshadow-local */
  OPT_Wshadow_compatible_local = 793,        /* -Wshadow=compatible-local */
  /* OPT_Wshadow_global = 794, */            /* -Wshadow=global */
  OPT_Wshadow_local = 795,                   /* -Wshadow=local */
  OPT_Wshift_count_negative = 796,           /* -Wshift-count-negative */
  OPT_Wshift_count_overflow = 797,           /* -Wshift-count-overflow */
  OPT_Wshift_negative_value = 798,           /* -Wshift-negative-value */
  /* OPT_Wshift_overflow = 799, */           /* -Wshift-overflow */
  OPT_Wshift_overflow_ = 800,                /* -Wshift-overflow= */
  OPT_Wsign_compare = 801,                   /* -Wsign-compare */
  OPT_Wsign_conversion = 802,                /* -Wsign-conversion */
  OPT_Wsign_promo = 803,                     /* -Wsign-promo */
  OPT_Wsized_deallocation = 804,             /* -Wsized-deallocation */
  OPT_Wsizeof_array_argument = 805,          /* -Wsizeof-array-argument */
  OPT_Wsizeof_array_div = 806,               /* -Wsizeof-array-div */
  OPT_Wsizeof_pointer_div = 807,             /* -Wsizeof-pointer-div */
  OPT_Wsizeof_pointer_memaccess = 808,       /* -Wsizeof-pointer-memaccess */
  OPT_Wspeculative = 809,                    /* -Wspeculative */
  OPT_Wstack_protector = 810,                /* -Wstack-protector */
  OPT_Wstack_usage_ = 811,                   /* -Wstack-usage= */
  OPT_Wstrict_aliasing = 812,                /* -Wstrict-aliasing */
  OPT_Wstrict_aliasing_ = 813,               /* -Wstrict-aliasing= */
  OPT_Wstrict_flex_arrays = 814,             /* -Wstrict-flex-arrays */
  OPT_Wstrict_null_sentinel = 815,           /* -Wstrict-null-sentinel */
  OPT_Wstrict_overflow = 816,                /* -Wstrict-overflow */
  OPT_Wstrict_overflow_ = 817,               /* -Wstrict-overflow= */
  OPT_Wstrict_prototypes = 818,              /* -Wstrict-prototypes */
  OPT_Wstrict_selector_match = 819,          /* -Wstrict-selector-match */
  OPT_Wstring_compare = 820,                 /* -Wstring-compare */
  /* OPT_Wstringop_overflow = 821, */        /* -Wstringop-overflow */
  OPT_Wstringop_overflow_ = 822,             /* -Wstringop-overflow= */
  OPT_Wstringop_overread = 823,              /* -Wstringop-overread */
  OPT_Wstringop_truncation = 824,            /* -Wstringop-truncation */
  OPT_Wstyle = 825,                          /* -Wstyle */
  OPT_Wsubobject_linkage = 826,              /* -Wsubobject-linkage */
  OPT_Wsuggest_attribute_cold = 827,         /* -Wsuggest-attribute=cold */
  OPT_Wsuggest_attribute_const = 828,        /* -Wsuggest-attribute=const */
  OPT_Wsuggest_attribute_format = 829,       /* -Wsuggest-attribute=format */
  OPT_Wsuggest_attribute_malloc = 830,       /* -Wsuggest-attribute=malloc */
  OPT_Wsuggest_attribute_noreturn = 831,     /* -Wsuggest-attribute=noreturn */
  OPT_Wsuggest_attribute_pure = 832,         /* -Wsuggest-attribute=pure */
  OPT_Wsuggest_attribute_returns_nonnull = 833,/* -Wsuggest-attribute=returns_nonnull */
  OPT_Wsuggest_final_methods = 834,          /* -Wsuggest-final-methods */
  OPT_Wsuggest_final_types = 835,            /* -Wsuggest-final-types */
  OPT_Wsuggest_override = 836,               /* -Wsuggest-override */
  OPT_Wsurprising = 837,                     /* -Wsurprising */
  OPT_Wswitch = 838,                         /* -Wswitch */
  OPT_Wswitch_bool = 839,                    /* -Wswitch-bool */
  OPT_Wswitch_default = 840,                 /* -Wswitch-default */
  OPT_Wswitch_enum = 841,                    /* -Wswitch-enum */
  OPT_Wswitch_outside_range = 842,           /* -Wswitch-outside-range */
  OPT_Wswitch_unreachable = 843,             /* -Wswitch-unreachable */
  OPT_Wsync_nand = 844,                      /* -Wsync-nand */
  OPT_Wsynth = 845,                          /* -Wsynth */
  OPT_Wsystem_headers = 846,                 /* -Wsystem-headers */
  OPT_Wtabs = 847,                           /* -Wtabs */
  OPT_Wtarget_lifetime = 848,                /* -Wtarget-lifetime */
  OPT_Wtautological_compare = 849,           /* -Wtautological-compare */
  OPT_Wtemplate_id_cdtor = 850,              /* -Wtemplate-id-cdtor */
  OPT_Wtemplates = 851,                      /* -Wtemplates */
  OPT_Wterminate = 852,                      /* -Wterminate */
  OPT_Wtraditional = 853,                    /* -Wtraditional */
  OPT_Wtraditional_conversion = 854,         /* -Wtraditional-conversion */
  OPT_Wtrampolines = 855,                    /* -Wtrampolines */
  OPT_Wtrigraphs = 856,                      /* -Wtrigraphs */
  OPT_Wtrivial_auto_var_init = 857,          /* -Wtrivial-auto-var-init */
  OPT_Wtsan = 858,                           /* -Wtsan */
  OPT_Wtype_limits = 859,                    /* -Wtype-limits */
  OPT_Wundeclared_selector = 860,            /* -Wundeclared-selector */
  OPT_Wundef = 861,                          /* -Wundef */
  OPT_Wundefined_do_loop = 862,              /* -Wundefined-do-loop */
  OPT_Wunderflow = 863,                      /* -Wunderflow */
  OPT_Wunicode = 864,                        /* -Wunicode */
  OPT_Wuninit_variable_checking = 865,       /* -Wuninit-variable-checking */
  OPT_Wuninit_variable_checking_ = 866,      /* -Wuninit-variable-checking= */
  OPT_Wuninitialized = 867,                  /* -Wuninitialized */
  OPT_Wunknown_pragmas = 868,                /* -Wunknown-pragmas */
  /* OPT_Wunreachable_code = 869, */         /* -Wunreachable-code */
  /* OPT_Wunsafe_loop_optimizations = 870, *//* -Wunsafe-loop-optimizations */
  OPT_Wunsuffixed_float_constants = 871,     /* -Wunsuffixed-float-constants */
  OPT_Wunused = 872,                         /* -Wunused */
  OPT_Wunused_but_set_parameter = 873,       /* -Wunused-but-set-parameter */
  OPT_Wunused_but_set_variable = 874,        /* -Wunused-but-set-variable */
  /* OPT_Wunused_const_variable = 875, */    /* -Wunused-const-variable */
  OPT_Wunused_const_variable_ = 876,         /* -Wunused-const-variable= */
  OPT_Wunused_dummy_argument = 877,          /* -Wunused-dummy-argument */
  OPT_Wunused_function = 878,                /* -Wunused-function */
  OPT_Wunused_label = 879,                   /* -Wunused-label */
  OPT_Wunused_local_typedefs = 880,          /* -Wunused-local-typedefs */
  OPT_Wunused_macros = 881,                  /* -Wunused-macros */
  OPT_Wunused_parameter = 882,               /* -Wunused-parameter */
  OPT_Wunused_result = 883,                  /* -Wunused-result */
  OPT_Wunused_value = 884,                   /* -Wunused-value */
  OPT_Wunused_variable = 885,                /* -Wunused-variable */
  OPT_Wuse_after_free = 886,                 /* -Wuse-after-free */
  OPT_Wuse_after_free_ = 887,                /* -Wuse-after-free= */
  OPT_Wuse_without_only = 888,               /* -Wuse-without-only */
  OPT_Wuseless_cast = 889,                   /* -Wuseless-cast */
  OPT_Wvarargs = 890,                        /* -Wvarargs */
  OPT_Wvariadic_macros = 891,                /* -Wvariadic-macros */
  OPT_Wvector_operation_performance = 892,   /* -Wvector-operation-performance */
  OPT_Wverbose_unbounded = 893,              /* -Wverbose-unbounded */
  OPT_Wvexing_parse = 894,                   /* -Wvexing-parse */
  OPT_Wvirtual_inheritance = 895,            /* -Wvirtual-inheritance */
  OPT_Wvirtual_move_assign = 896,            /* -Wvirtual-move-assign */
  OPT_Wvla = 897,                            /* -Wvla */
  OPT_Wvla_larger_than_ = 898,               /* -Wvla-larger-than= */
  OPT_Wvla_parameter = 899,                  /* -Wvla-parameter */
  OPT_Wvolatile = 900,                       /* -Wvolatile */
  OPT_Wvolatile_register_var = 901,          /* -Wvolatile-register-var */
  OPT_Wwrite_strings = 902,                  /* -Wwrite-strings */
  OPT_Wxor_used_as_pow = 903,                /* -Wxor-used-as-pow */
  OPT_Wzero_as_null_pointer_constant = 904,  /* -Wzero-as-null-pointer-constant */
  OPT_Wzero_length_bounds = 905,             /* -Wzero-length-bounds */
  OPT_Wzerotrip = 906,                       /* -Wzerotrip */
  OPT_X = 907,                               /* -X */
  OPT_Xassembler = 908,                      /* -Xassembler */
  OPT_Xf = 909,                              /* -Xf */
  OPT_Xlinker = 910,                         /* -Xlinker */
  OPT_Xpreprocessor = 911,                   /* -Xpreprocessor */
  OPT_Z = 912,                               /* -Z */
  OPT_ansi = 913,                            /* -ansi */
  OPT_aux_info = 914,                        /* -aux-info */
  /* OPT_aux_info_ = 915, */                 /* -aux-info= */
  OPT_c = 916,                               /* -c */
  OPT_callgraph = 917,                       /* -callgraph */
  OPT_coverage = 918,                        /* -coverage */
  OPT_cpp = 919,                             /* -cpp */
  OPT_cpp_ = 920,                            /* -cpp= */
  OPT_d = 921,                               /* -d */
  OPT_debuglib_ = 922,                       /* -debuglib= */
  OPT_defaultlib_ = 923,                     /* -defaultlib= */
  OPT_defined_only = 924,                    /* -defined-only */
  OPT_demangle = 925,                        /* -demangle */
  OPT_dstartfiles = 926,                     /* -dstartfiles */
  OPT_dump_body_ = 927,                      /* -dump-body= */
  OPT_dump_level_ = 928,                     /* -dump-level= */
  OPT_dumpbase = 929,                        /* -dumpbase */
  OPT_dumpbase_ext = 930,                    /* -dumpbase-ext */
  OPT_dumpdir = 931,                         /* -dumpdir */
  OPT_dumpfullversion = 932,                 /* -dumpfullversion */
  OPT_dumpmachine = 933,                     /* -dumpmachine */
  OPT_dumpspecs = 934,                       /* -dumpspecs */
  OPT_dumpversion = 935,                     /* -dumpversion */
  OPT_e = 936,                               /* -e */
  OPT_export_dynamic = 937,                  /* -export-dynamic */
  OPT_fPIC = 938,                            /* -fPIC */
  OPT_fPIE = 939,                            /* -fPIE */
  OPT_fRTS_ = 940,                           /* -fRTS= */
  OPT_fabi_compat_version_ = 941,            /* -fabi-compat-version= */
  OPT_fabi_version_ = 942,                   /* -fabi-version= */
  OPT_faccess_control = 943,                 /* -faccess-control */
  OPT_fada_spec_parent_ = 944,               /* -fada-spec-parent= */
  OPT_faggressive_function_elimination = 945,/* -faggressive-function-elimination */
  OPT_faggressive_loop_optimizations = 946,  /* -faggressive-loop-optimizations */
  OPT_falign_commons = 947,                  /* -falign-commons */
  OPT_falign_functions = 948,                /* -falign-functions */
  OPT_falign_functions_ = 949,               /* -falign-functions= */
  OPT_falign_jumps = 950,                    /* -falign-jumps */
  OPT_falign_jumps_ = 951,                   /* -falign-jumps= */
  OPT_falign_labels = 952,                   /* -falign-labels */
  OPT_falign_labels_ = 953,                  /* -falign-labels= */
  OPT_falign_loops = 954,                    /* -falign-loops */
  OPT_falign_loops_ = 955,                   /* -falign-loops= */
  /* OPT_faligned_new = 956, */              /* -faligned-new */
  OPT_faligned_new_ = 957,                   /* -faligned-new= */
  OPT_fall_instantiations = 958,             /* -fall-instantiations */
  OPT_fall_intrinsics = 959,                 /* -fall-intrinsics */
  OPT_fall_virtual = 960,                    /* -fall-virtual */
  OPT_fallocation_dce = 961,                 /* -fallocation-dce */
  OPT_fallow_argument_mismatch = 962,        /* -fallow-argument-mismatch */
  OPT_fallow_invalid_boz = 963,              /* -fallow-invalid-boz */
  OPT_fallow_leading_underscore = 964,       /* -fallow-leading-underscore */
  /* OPT_fallow_parameterless_variadic_functions = 965, *//* -fallow-parameterless-variadic-functions */
  OPT_fallow_store_data_races = 966,         /* -fallow-store-data-races */
  OPT_falt_external_templates = 967,         /* -falt-external-templates */
  OPT_fanalyzer = 968,                       /* -fanalyzer */
  OPT_fanalyzer_call_summaries = 969,        /* -fanalyzer-call-summaries */
  OPT_fanalyzer_checker_ = 970,              /* -fanalyzer-checker= */
  OPT_fanalyzer_debug_text_art = 971,        /* -fanalyzer-debug-text-art */
  OPT_fanalyzer_feasibility = 972,           /* -fanalyzer-feasibility */
  OPT_fanalyzer_fine_grained = 973,          /* -fanalyzer-fine-grained */
  OPT_fanalyzer_show_duplicate_count = 974,  /* -fanalyzer-show-duplicate-count */
  OPT_fanalyzer_show_events_in_system_headers = 975,/* -fanalyzer-show-events-in-system-headers */
  OPT_fanalyzer_state_merge = 976,           /* -fanalyzer-state-merge */
  OPT_fanalyzer_state_purge = 977,           /* -fanalyzer-state-purge */
  OPT_fanalyzer_suppress_followups = 978,    /* -fanalyzer-suppress-followups */
  OPT_fanalyzer_transitivity = 979,          /* -fanalyzer-transitivity */
  OPT_fanalyzer_undo_inlining = 980,         /* -fanalyzer-undo-inlining */
  OPT_fanalyzer_verbose_edges = 981,         /* -fanalyzer-verbose-edges */
  OPT_fanalyzer_verbose_state_changes = 982, /* -fanalyzer-verbose-state-changes */
  OPT_fanalyzer_verbosity_ = 983,            /* -fanalyzer-verbosity= */
  /* OPT_fargument_alias = 984, */           /* -fargument-alias */
  /* OPT_fargument_noalias = 985, */         /* -fargument-noalias */
  /* OPT_fargument_noalias_anything = 986, *//* -fargument-noalias-anything */
  /* OPT_fargument_noalias_global = 987, */  /* -fargument-noalias-global */
  OPT_fasan_shadow_offset_ = 988,            /* -fasan-shadow-offset= */
  OPT_fasm = 989,                            /* -fasm */
  OPT_fassert = 990,                         /* -fassert */
  OPT_fassociative_math = 991,               /* -fassociative-math */
  OPT_fasynchronous_unwind_tables = 992,     /* -fasynchronous-unwind-tables */
  OPT_fauto_inc_dec = 993,                   /* -fauto-inc-dec */
  OPT_fauto_init = 994,                      /* -fauto-init */
  OPT_fauto_profile = 995,                   /* -fauto-profile */
  OPT_fauto_profile_ = 996,                  /* -fauto-profile= */
  OPT_fautomatic = 997,                      /* -fautomatic */
  OPT_fbackslash = 998,                      /* -fbackslash */
  OPT_fbacktrace = 999,                      /* -fbacktrace */
  OPT_fbit_tests = 1000,                     /* -fbit-tests */
  OPT_fblas_matmul_limit_ = 1001,            /* -fblas-matmul-limit= */
  OPT_fbounds = 1002,                        /* -fbounds */
  OPT_fbounds_check = 1003,                  /* -fbounds-check */
  OPT_fbounds_check_ = 1004,                 /* -fbounds-check= */
  OPT_fbranch_count_reg = 1005,              /* -fbranch-count-reg */
  OPT_fbranch_probabilities = 1006,          /* -fbranch-probabilities */
  /* OPT_fbranch_target_load_optimize = 1007, *//* -fbranch-target-load-optimize */
  /* OPT_fbranch_target_load_optimize2 = 1008, *//* -fbranch-target-load-optimize2 */
  /* OPT_fbtr_bb_exclusive = 1009, */        /* -fbtr-bb-exclusive */
  OPT_fbuilding_libgcc = 1010,               /* -fbuilding-libgcc */
  OPT_fbuilding_libgfortran = 1011,          /* -fbuilding-libgfortran */
  OPT_fbuilding_libphobos_tests = 1012,      /* -fbuilding-libphobos-tests */
  OPT_fbuiltin = 1013,                       /* -fbuiltin */
  OPT_fbuiltin_ = 1014,                      /* -fbuiltin- */
  OPT_fbuiltin_printf = 1015,                /* -fbuiltin-printf */
  OPT_fc_prototypes = 1016,                  /* -fc-prototypes */
  OPT_fc_prototypes_external = 1017,         /* -fc-prototypes-external */
  OPT_fcall_saved_ = 1018,                   /* -fcall-saved- */
  OPT_fcall_used_ = 1019,                    /* -fcall-used- */
  OPT_fcaller_saves = 1020,                  /* -fcaller-saves */
  OPT_fcallgraph_info = 1021,                /* -fcallgraph-info */
  OPT_fcallgraph_info_ = 1022,               /* -fcallgraph-info= */
  OPT_fcanon_prefix_map = 1023,              /* -fcanon-prefix-map */
  OPT_fcanonical_system_headers = 1024,      /* -fcanonical-system-headers */
  OPT_fcase = 1025,                          /* -fcase */
  /* OPT_fcf_protection = 1026, */           /* -fcf-protection */
  OPT_fcf_protection_ = 1027,                /* -fcf-protection= */
  OPT_fchar8_t = 1028,                       /* -fchar8_t */
  OPT_fcheck_array_temporaries = 1029,       /* -fcheck-array-temporaries */
  /* OPT_fcheck_data_deps = 1030, */         /* -fcheck-data-deps */
  OPT_fcheck_new = 1031,                     /* -fcheck-new */
  OPT_fcheck_pointer_bounds = 1032,          /* -fcheck-pointer-bounds */
  OPT_fcheck_ = 1033,                        /* -fcheck= */
  /* OPT_fcheck_assert = 1034, */            /* -fcheck=assert */
  /* OPT_fcheck_bounds = 1035, */            /* -fcheck=bounds */
  /* OPT_fcheck_in = 1036, */                /* -fcheck=in */
  /* OPT_fcheck_invariant = 1037, */         /* -fcheck=invariant */
  /* OPT_fcheck_out = 1038, */               /* -fcheck=out */
  /* OPT_fcheck_switch = 1039, */            /* -fcheck=switch */
  OPT_fcheckaction_ = 1040,                  /* -fcheckaction= */
  OPT_fchecking = 1041,                      /* -fchecking */
  OPT_fchecking_ = 1042,                     /* -fchecking= */
  OPT_fchkp_check_incomplete_type = 1043,    /* -fchkp-check-incomplete-type */
  OPT_fchkp_check_read = 1044,               /* -fchkp-check-read */
  OPT_fchkp_check_write = 1045,              /* -fchkp-check-write */
  OPT_fchkp_first_field_has_own_bounds = 1046,/* -fchkp-first-field-has-own-bounds */
  OPT_fchkp_flexible_struct_trailing_arrays = 1047,/* -fchkp-flexible-struct-trailing-arrays */
  OPT_fchkp_instrument_calls = 1048,         /* -fchkp-instrument-calls */
  OPT_fchkp_instrument_marked_only = 1049,   /* -fchkp-instrument-marked-only */
  OPT_fchkp_narrow_bounds = 1050,            /* -fchkp-narrow-bounds */
  OPT_fchkp_narrow_to_innermost_array = 1051,/* -fchkp-narrow-to-innermost-array */
  OPT_fchkp_optimize = 1052,                 /* -fchkp-optimize */
  OPT_fchkp_store_bounds = 1053,             /* -fchkp-store-bounds */
  OPT_fchkp_treat_zero_dynamic_size_as_infinite = 1054,/* -fchkp-treat-zero-dynamic-size-as-infinite */
  OPT_fchkp_use_fast_string_functions = 1055,/* -fchkp-use-fast-string-functions */
  OPT_fchkp_use_nochk_string_functions = 1056,/* -fchkp-use-nochk-string-functions */
  OPT_fchkp_use_static_bounds = 1057,        /* -fchkp-use-static-bounds */
  OPT_fchkp_use_static_const_bounds = 1058,  /* -fchkp-use-static-const-bounds */
  OPT_fchkp_use_wrappers = 1059,             /* -fchkp-use-wrappers */
  OPT_fchkp_zero_input_bounds_for_main = 1060,/* -fchkp-zero-input-bounds-for-main */
  /* OPT_fcilkplus = 1061, */                /* -fcilkplus */
  OPT_fcoarray_ = 1062,                      /* -fcoarray= */
  OPT_fcode_hoisting = 1063,                 /* -fcode-hoisting */
  OPT_fcombine_stack_adjustments = 1064,     /* -fcombine-stack-adjustments */
  OPT_fcommon = 1065,                        /* -fcommon */
  OPT_fcompare_debug = 1066,                 /* -fcompare-debug */
  OPT_fcompare_debug_second = 1067,          /* -fcompare-debug-second */
  OPT_fcompare_debug_ = 1068,                /* -fcompare-debug= */
  OPT_fcompare_elim = 1069,                  /* -fcompare-elim */
  OPT_fconcepts = 1070,                      /* -fconcepts */
  OPT_fconcepts_diagnostics_depth_ = 1071,   /* -fconcepts-diagnostics-depth= */
  OPT_fconcepts_ts = 1072,                   /* -fconcepts-ts */
  OPT_fcond_mismatch = 1073,                 /* -fcond-mismatch */
  /* OPT_fconserve_space = 1074, */          /* -fconserve-space */
  OPT_fconserve_stack = 1075,                /* -fconserve-stack */
  OPT_fconstant_string_class_ = 1076,        /* -fconstant-string-class= */
  OPT_fconstexpr_cache_depth_ = 1077,        /* -fconstexpr-cache-depth= */
  OPT_fconstexpr_depth_ = 1078,              /* -fconstexpr-depth= */
  OPT_fconstexpr_fp_except = 1079,           /* -fconstexpr-fp-except */
  OPT_fconstexpr_loop_limit_ = 1080,         /* -fconstexpr-loop-limit= */
  OPT_fconstexpr_ops_limit_ = 1081,          /* -fconstexpr-ops-limit= */
  OPT_fcontract_assumption_mode_ = 1082,     /* -fcontract-assumption-mode= */
  OPT_fcontract_build_level_ = 1083,         /* -fcontract-build-level= */
  OPT_fcontract_continuation_mode_ = 1084,   /* -fcontract-continuation-mode= */
  OPT_fcontract_mode_ = 1085,                /* -fcontract-mode= */
  OPT_fcontract_role_ = 1086,                /* -fcontract-role= */
  OPT_fcontract_semantic_ = 1087,            /* -fcontract-semantic= */
  OPT_fcontract_strict_declarations_ = 1088, /* -fcontract-strict-declarations= */
  OPT_fcontracts = 1089,                     /* -fcontracts */
  OPT_fconvert_ = 1090,                      /* -fconvert= */
  OPT_fcoroutines = 1091,                    /* -fcoroutines */
  OPT_fcpp = 1092,                           /* -fcpp */
  OPT_fcpp_begin = 1093,                     /* -fcpp-begin */
  OPT_fcpp_end = 1094,                       /* -fcpp-end */
  OPT_fcprop_registers = 1095,               /* -fcprop-registers */
  OPT_fcray_pointer = 1096,                  /* -fcray-pointer */
  OPT_fcrossjumping = 1097,                  /* -fcrossjumping */
  OPT_fcse_follow_jumps = 1098,              /* -fcse-follow-jumps */
  /* OPT_fcse_skip_blocks = 1099, */         /* -fcse-skip-blocks */
  OPT_fcx_fortran_rules = 1100,              /* -fcx-fortran-rules */
  OPT_fcx_limited_range = 1101,              /* -fcx-limited-range */
  OPT_fd = 1102,                             /* -fd */
  OPT_fd_lines_as_code = 1103,               /* -fd-lines-as-code */
  OPT_fd_lines_as_comments = 1104,           /* -fd-lines-as-comments */
  OPT_fdata_sections = 1105,                 /* -fdata-sections */
  OPT_fdbg_cnt_list = 1106,                  /* -fdbg-cnt-list */
  OPT_fdbg_cnt_ = 1107,                      /* -fdbg-cnt= */
  OPT_fdce = 1108,                           /* -fdce */
  OPT_fdebug = 1109,                         /* -fdebug */
  OPT_fdebug_aux_vars = 1110,                /* -fdebug-aux-vars */
  OPT_fdebug_builtins = 1111,                /* -fdebug-builtins */
  OPT_fdebug_cpp = 1112,                     /* -fdebug-cpp */
  OPT_fdebug_function_line_numbers = 1113,   /* -fdebug-function-line-numbers */
  OPT_fdebug_prefix_map_ = 1114,             /* -fdebug-prefix-map= */
  OPT_fdebug_trace_api = 1115,               /* -fdebug-trace-api */
  OPT_fdebug_trace_quad = 1116,              /* -fdebug-trace-quad */
  OPT_fdebug_types_section = 1117,           /* -fdebug-types-section */
  OPT_fdebug_ = 1118,                        /* -fdebug= */
  OPT_fdec = 1119,                           /* -fdec */
  OPT_fdec_blank_format_item = 1120,         /* -fdec-blank-format-item */
  OPT_fdec_char_conversions = 1121,          /* -fdec-char-conversions */
  OPT_fdec_format_defaults = 1122,           /* -fdec-format-defaults */
  OPT_fdec_include = 1123,                   /* -fdec-include */
  OPT_fdec_intrinsic_ints = 1124,            /* -fdec-intrinsic-ints */
  OPT_fdec_math = 1125,                      /* -fdec-math */
  OPT_fdec_static = 1126,                    /* -fdec-static */
  OPT_fdec_structure = 1127,                 /* -fdec-structure */
  OPT_fdeclone_ctor_dtor = 1128,             /* -fdeclone-ctor-dtor */
  /* OPT_fdeduce_init_list = 1129, */        /* -fdeduce-init-list */
  OPT_fdef_ = 1130,                          /* -fdef= */
  OPT_fdefault_double_8 = 1131,              /* -fdefault-double-8 */
  /* OPT_fdefault_inline = 1132, */          /* -fdefault-inline */
  OPT_fdefault_integer_8 = 1133,             /* -fdefault-integer-8 */
  OPT_fdefault_real_10 = 1134,               /* -fdefault-real-10 */
  OPT_fdefault_real_16 = 1135,               /* -fdefault-real-16 */
  OPT_fdefault_real_8 = 1136,                /* -fdefault-real-8 */
  OPT_fdefer_pop = 1137,                     /* -fdefer-pop */
  OPT_fdelayed_branch = 1138,                /* -fdelayed-branch */
  OPT_fdelete_dead_exceptions = 1139,        /* -fdelete-dead-exceptions */
  OPT_fdelete_null_pointer_checks = 1140,    /* -fdelete-null-pointer-checks */
  OPT_fdeps_file_ = 1141,                    /* -fdeps-file= */
  OPT_fdeps_format_ = 1142,                  /* -fdeps-format= */
  OPT_fdeps_target_ = 1143,                  /* -fdeps-target= */
  OPT_fdevirtualize = 1144,                  /* -fdevirtualize */
  OPT_fdevirtualize_at_ltrans = 1145,        /* -fdevirtualize-at-ltrans */
  OPT_fdevirtualize_speculatively = 1146,    /* -fdevirtualize-speculatively */
  OPT_fdiagnostics_all_candidates = 1147,    /* -fdiagnostics-all-candidates */
  /* OPT_fdiagnostics_color = 1148, */       /* -fdiagnostics-color */
  OPT_fdiagnostics_color_ = 1149,            /* -fdiagnostics-color= */
  OPT_fdiagnostics_column_origin_ = 1150,    /* -fdiagnostics-column-origin= */
  OPT_fdiagnostics_column_unit_ = 1151,      /* -fdiagnostics-column-unit= */
  OPT_fdiagnostics_escape_format_ = 1152,    /* -fdiagnostics-escape-format= */
  OPT_fdiagnostics_format_ = 1153,           /* -fdiagnostics-format= */
  OPT_fdiagnostics_generate_patch = 1154,    /* -fdiagnostics-generate-patch */
  OPT_fdiagnostics_json_formatting = 1155,   /* -fdiagnostics-json-formatting */
  OPT_fdiagnostics_minimum_margin_width_ = 1156,/* -fdiagnostics-minimum-margin-width= */
  OPT_fdiagnostics_parseable_fixits = 1157,  /* -fdiagnostics-parseable-fixits */
  OPT_fdiagnostics_path_format_ = 1158,      /* -fdiagnostics-path-format= */
  OPT_fdiagnostics_plain_output = 1159,      /* -fdiagnostics-plain-output */
  OPT_fdiagnostics_show_caret = 1160,        /* -fdiagnostics-show-caret */
  OPT_fdiagnostics_show_cwe = 1161,          /* -fdiagnostics-show-cwe */
  OPT_fdiagnostics_show_labels = 1162,       /* -fdiagnostics-show-labels */
  OPT_fdiagnostics_show_line_numbers = 1163, /* -fdiagnostics-show-line-numbers */
  OPT_fdiagnostics_show_location_ = 1164,    /* -fdiagnostics-show-location= */
  OPT_fdiagnostics_show_option = 1165,       /* -fdiagnostics-show-option */
  OPT_fdiagnostics_show_path_depths = 1166,  /* -fdiagnostics-show-path-depths */
  OPT_fdiagnostics_show_rules = 1167,        /* -fdiagnostics-show-rules */
  OPT_fdiagnostics_show_template_tree = 1168,/* -fdiagnostics-show-template-tree */
  OPT_fdiagnostics_text_art_charset_ = 1169, /* -fdiagnostics-text-art-charset= */
  OPT_fdiagnostics_urls_ = 1170,             /* -fdiagnostics-urls= */
  OPT_fdirectives_only = 1171,               /* -fdirectives-only */
  OPT_fdisable_ = 1172,                      /* -fdisable- */
  OPT_fdoc = 1173,                           /* -fdoc */
  OPT_fdoc_dir_ = 1174,                      /* -fdoc-dir= */
  OPT_fdoc_file_ = 1175,                     /* -fdoc-file= */
  OPT_fdoc_inc_ = 1176,                      /* -fdoc-inc= */
  OPT_fdollar_ok = 1177,                     /* -fdollar-ok */
  OPT_fdollars_in_identifiers = 1178,        /* -fdollars-in-identifiers */
  OPT_fdruntime = 1179,                      /* -fdruntime */
  OPT_fdse = 1180,                           /* -fdse */
  OPT_fdump_ = 1181,                         /* -fdump- */
  OPT_fdump_ada_spec = 1182,                 /* -fdump-ada-spec */
  OPT_fdump_ada_spec_slim = 1183,            /* -fdump-ada-spec-slim */
  OPT_fdump_analyzer = 1184,                 /* -fdump-analyzer */
  OPT_fdump_analyzer_callgraph = 1185,       /* -fdump-analyzer-callgraph */
  OPT_fdump_analyzer_exploded_graph = 1186,  /* -fdump-analyzer-exploded-graph */
  OPT_fdump_analyzer_exploded_nodes = 1187,  /* -fdump-analyzer-exploded-nodes */
  OPT_fdump_analyzer_exploded_nodes_2 = 1188,/* -fdump-analyzer-exploded-nodes-2 */
  OPT_fdump_analyzer_exploded_nodes_3 = 1189,/* -fdump-analyzer-exploded-nodes-3 */
  OPT_fdump_analyzer_exploded_paths = 1190,  /* -fdump-analyzer-exploded-paths */
  OPT_fdump_analyzer_feasibility = 1191,     /* -fdump-analyzer-feasibility */
  OPT_fdump_analyzer_infinite_loop = 1192,   /* -fdump-analyzer-infinite-loop */
  OPT_fdump_analyzer_json = 1193,            /* -fdump-analyzer-json */
  OPT_fdump_analyzer_state_purge = 1194,     /* -fdump-analyzer-state-purge */
  OPT_fdump_analyzer_stderr = 1195,          /* -fdump-analyzer-stderr */
  OPT_fdump_analyzer_supergraph = 1196,      /* -fdump-analyzer-supergraph */
  OPT_fdump_analyzer_untracked = 1197,       /* -fdump-analyzer-untracked */
  OPT_fdump_c___spec_verbose = 1198,         /* -fdump-c++-spec-verbose */
  OPT_fdump_c___spec_ = 1199,                /* -fdump-c++-spec= */
  /* OPT_fdump_core = 1200, */               /* -fdump-core */
  OPT_fdump_d_original = 1201,               /* -fdump-d-original */
  OPT_fdump_final_insns = 1202,              /* -fdump-final-insns */
  OPT_fdump_final_insns_ = 1203,             /* -fdump-final-insns= */
  OPT_fdump_fortran_global = 1204,           /* -fdump-fortran-global */
  OPT_fdump_fortran_optimized = 1205,        /* -fdump-fortran-optimized */
  OPT_fdump_fortran_original = 1206,         /* -fdump-fortran-original */
  OPT_fdump_go_spec_ = 1207,                 /* -fdump-go-spec= */
  OPT_fdump_internal_locations = 1208,       /* -fdump-internal-locations */
  OPT_fdump_noaddr = 1209,                   /* -fdump-noaddr */
  /* OPT_fdump_parse_tree = 1210, */         /* -fdump-parse-tree */
  OPT_fdump_passes = 1211,                   /* -fdump-passes */
  OPT_fdump_scos = 1212,                     /* -fdump-scos */
  OPT_fdump_system_exports = 1213,           /* -fdump-system-exports */
  OPT_fdump_unnumbered = 1214,               /* -fdump-unnumbered */
  OPT_fdump_unnumbered_links = 1215,         /* -fdump-unnumbered-links */
  OPT_fdwarf2_cfi_asm = 1216,                /* -fdwarf2-cfi-asm */
  OPT_fearly_inlining = 1217,                /* -fearly-inlining */
  OPT_felide_constructors = 1218,            /* -felide-constructors */
  OPT_felide_type = 1219,                    /* -felide-type */
  /* OPT_feliminate_dwarf2_dups = 1220, */   /* -feliminate-dwarf2-dups */
  OPT_feliminate_unused_debug_symbols = 1221,/* -feliminate-unused-debug-symbols */
  OPT_feliminate_unused_debug_types = 1222,  /* -feliminate-unused-debug-types */
  OPT_femit_class_debug_always = 1223,       /* -femit-class-debug-always */
  OPT_femit_struct_debug_baseonly = 1224,    /* -femit-struct-debug-baseonly */
  OPT_femit_struct_debug_detailed_ = 1225,   /* -femit-struct-debug-detailed= */
  OPT_femit_struct_debug_reduced = 1226,     /* -femit-struct-debug-reduced */
  OPT_fenable_ = 1227,                       /* -fenable- */
  OPT_fenforce_eh_specs = 1228,              /* -fenforce-eh-specs */
  OPT_fenum_int_equiv = 1229,                /* -fenum-int-equiv */
  OPT_fexceptions = 1230,                    /* -fexceptions */
  OPT_fexcess_precision_ = 1231,             /* -fexcess-precision= */
  OPT_fexec_charset_ = 1232,                 /* -fexec-charset= */
  OPT_fexpensive_optimizations = 1233,       /* -fexpensive-optimizations */
  OPT_fext_numeric_literals = 1234,          /* -fext-numeric-literals */
  OPT_fextended_identifiers = 1235,          /* -fextended-identifiers */
  OPT_fextended_opaque = 1236,               /* -fextended-opaque */
  OPT_fextern_std_ = 1237,                   /* -fextern-std= */
  OPT_fextern_tls_init = 1238,               /* -fextern-tls-init */
  OPT_fexternal_blas = 1239,                 /* -fexternal-blas */
  OPT_fexternal_templates = 1240,            /* -fexternal-templates */
  OPT_ff2c = 1241,                           /* -ff2c */
  OPT_ffast_math = 1242,                     /* -ffast-math */
  OPT_ffat_lto_objects = 1243,               /* -ffat-lto-objects */
  OPT_ffile_prefix_map_ = 1244,              /* -ffile-prefix-map= */
  OPT_ffinite_loops = 1245,                  /* -ffinite-loops */
  OPT_ffinite_math_only = 1246,              /* -ffinite-math-only */
  OPT_ffixed_ = 1247,                        /* -ffixed- */
  OPT_ffixed_form = 1248,                    /* -ffixed-form */
  OPT_ffixed_line_length_ = 1249,            /* -ffixed-line-length- */
  OPT_ffixed_line_length_none = 1250,        /* -ffixed-line-length-none */
  OPT_ffloat_store = 1251,                   /* -ffloat-store */
  OPT_ffloatvalue = 1252,                    /* -ffloatvalue */
  OPT_ffold_mem_offsets = 1253,              /* -ffold-mem-offsets */
  OPT_ffold_simple_inlines = 1254,           /* -ffold-simple-inlines */
  OPT_ffor_scope = 1255,                     /* -ffor-scope */
  /* OPT_fforce_addr = 1256, */              /* -fforce-addr */
  OPT_fforward_propagate = 1257,             /* -fforward-propagate */
  OPT_ffp_contract_ = 1258,                  /* -ffp-contract= */
  OPT_ffp_int_builtin_inexact = 1259,        /* -ffp-int-builtin-inexact */
  OPT_ffpe_summary_ = 1260,                  /* -ffpe-summary= */
  OPT_ffpe_trap_ = 1261,                     /* -ffpe-trap= */
  OPT_ffree_form = 1262,                     /* -ffree-form */
  OPT_ffree_line_length_ = 1263,             /* -ffree-line-length- */
  OPT_ffree_line_length_none = 1264,         /* -ffree-line-length-none */
  OPT_ffreestanding = 1265,                  /* -ffreestanding */
  OPT_ffriend_injection = 1266,              /* -ffriend-injection */
  OPT_ffrontend_loop_interchange = 1267,     /* -ffrontend-loop-interchange */
  OPT_ffrontend_optimize = 1268,             /* -ffrontend-optimize */
  OPT_ffunction_cse = 1269,                  /* -ffunction-cse */
  OPT_ffunction_sections = 1270,             /* -ffunction-sections */
  OPT_fgcse = 1271,                          /* -fgcse */
  OPT_fgcse_after_reload = 1272,             /* -fgcse-after-reload */
  OPT_fgcse_las = 1273,                      /* -fgcse-las */
  OPT_fgcse_lm = 1274,                       /* -fgcse-lm */
  OPT_fgcse_sm = 1275,                       /* -fgcse-sm */
  OPT_fgen_module_list_ = 1276,              /* -fgen-module-list= */
  OPT_fgimple = 1277,                        /* -fgimple */
  OPT_fgnat_encodings_ = 1278,               /* -fgnat-encodings= */
  OPT_fgnu_keywords = 1279,                  /* -fgnu-keywords */
  OPT_fgnu_runtime = 1280,                   /* -fgnu-runtime */
  OPT_fgnu_tm = 1281,                        /* -fgnu-tm */
  OPT_fgnu_unique = 1282,                    /* -fgnu-unique */
  OPT_fgnu89_inline = 1283,                  /* -fgnu89-inline */
  OPT_fgo_c_header_ = 1284,                  /* -fgo-c-header= */
  OPT_fgo_check_divide_overflow = 1285,      /* -fgo-check-divide-overflow */
  OPT_fgo_check_divide_zero = 1286,          /* -fgo-check-divide-zero */
  OPT_fgo_compiling_runtime = 1287,          /* -fgo-compiling-runtime */
  OPT_fgo_debug_escape = 1288,               /* -fgo-debug-escape */
  OPT_fgo_debug_escape_hash_ = 1289,         /* -fgo-debug-escape-hash= */
  OPT_fgo_debug_optimization = 1290,         /* -fgo-debug-optimization */
  OPT_fgo_dump_ = 1291,                      /* -fgo-dump- */
  OPT_fgo_embedcfg_ = 1292,                  /* -fgo-embedcfg= */
  OPT_fgo_importcfg_ = 1293,                 /* -fgo-importcfg= */
  OPT_fgo_optimize_ = 1294,                  /* -fgo-optimize- */
  OPT_fgo_pkgpath_ = 1295,                   /* -fgo-pkgpath= */
  OPT_fgo_prefix_ = 1296,                    /* -fgo-prefix= */
  OPT_fgo_relative_import_path_ = 1297,      /* -fgo-relative-import-path= */
  OPT_fgraphite = 1298,                      /* -fgraphite */
  OPT_fgraphite_identity = 1299,             /* -fgraphite-identity */
  OPT_fguess_branch_probability = 1300,      /* -fguess-branch-probability */
  OPT_fguiding_decls = 1301,                 /* -fguiding-decls */
  /* OPT_fhandle_exceptions = 1302, */       /* -fhandle-exceptions */
  OPT_fhardcfr_check_exceptions = 1303,      /* -fhardcfr-check-exceptions */
  OPT_fhardcfr_check_noreturn_calls_ = 1304, /* -fhardcfr-check-noreturn-calls= */
  OPT_fhardcfr_check_returning_calls = 1305, /* -fhardcfr-check-returning-calls */
  OPT_fhardcfr_skip_leaf = 1306,             /* -fhardcfr-skip-leaf */
  OPT_fharden_compares = 1307,               /* -fharden-compares */
  OPT_fharden_conditional_branches = 1308,   /* -fharden-conditional-branches */
  OPT_fharden_control_flow_redundancy = 1309,/* -fharden-control-flow-redundancy */
  OPT_fhardened = 1310,                      /* -fhardened */
  /* OPT_fhelp = 1311, */                    /* -fhelp */
  /* OPT_fhelp_ = 1312, */                   /* -fhelp= */
  OPT_fhoist_adjacent_loads = 1313,          /* -fhoist-adjacent-loads */
  OPT_fhonor_std = 1314,                     /* -fhonor-std */
  OPT_fhosted = 1315,                        /* -fhosted */
  OPT_fhuge_objects = 1316,                  /* -fhuge-objects */
  OPT_fident = 1317,                         /* -fident */
  OPT_fif_conversion = 1318,                 /* -fif-conversion */
  OPT_fif_conversion2 = 1319,                /* -fif-conversion2 */
  OPT_fignore_unknown_pragmas = 1320,        /* -fignore-unknown-pragmas */
  OPT_fimmediate_escalation = 1321,          /* -fimmediate-escalation */
  OPT_fimplement_inlines = 1322,             /* -fimplement-inlines */
  OPT_fimplicit_constexpr = 1323,            /* -fimplicit-constexpr */
  OPT_fimplicit_inline_templates = 1324,     /* -fimplicit-inline-templates */
  OPT_fimplicit_none = 1325,                 /* -fimplicit-none */
  OPT_fimplicit_templates = 1326,            /* -fimplicit-templates */
  OPT_findex = 1327,                         /* -findex */
  OPT_findirect_inlining = 1328,             /* -findirect-inlining */
  OPT_finhibit_size_directive = 1329,        /* -finhibit-size-directive */
  OPT_finit_character_ = 1330,               /* -finit-character= */
  OPT_finit_derived = 1331,                  /* -finit-derived */
  OPT_finit_integer_ = 1332,                 /* -finit-integer= */
  OPT_finit_local_zero = 1333,               /* -finit-local-zero */
  OPT_finit_logical_ = 1334,                 /* -finit-logical= */
  OPT_finit_real_ = 1335,                    /* -finit-real= */
  OPT_finline = 1336,                        /* -finline */
  OPT_finline_arg_packing = 1337,            /* -finline-arg-packing */
  OPT_finline_atomics = 1338,                /* -finline-atomics */
  OPT_finline_functions = 1339,              /* -finline-functions */
  OPT_finline_functions_called_once = 1340,  /* -finline-functions-called-once */
  /* OPT_finline_limit_ = 1341, */           /* -finline-limit- */
  OPT_finline_limit_ = 1342,                 /* -finline-limit= */
  OPT_finline_matmul_limit_ = 1343,          /* -finline-matmul-limit= */
  OPT_finline_small_functions = 1344,        /* -finline-small-functions */
  OPT_finline_stringops = 1345,              /* -finline-stringops */
  OPT_finline_stringops_ = 1346,             /* -finline-stringops= */
  OPT_finput_charset_ = 1347,                /* -finput-charset= */
  OPT_finstrument_functions = 1348,          /* -finstrument-functions */
  OPT_finstrument_functions_exclude_file_list_ = 1349,/* -finstrument-functions-exclude-file-list= */
  OPT_finstrument_functions_exclude_function_list_ = 1350,/* -finstrument-functions-exclude-function-list= */
  OPT_finstrument_functions_once = 1351,     /* -finstrument-functions-once */
  OPT_finteger_4_integer_8 = 1352,           /* -finteger-4-integer-8 */
  OPT_fintrinsic_modules_path = 1353,        /* -fintrinsic-modules-path */
  OPT_fintrinsic_modules_path_ = 1354,       /* -fintrinsic-modules-path= */
  OPT_finvariants = 1355,                    /* -finvariants */
  OPT_fipa_bit_cp = 1356,                    /* -fipa-bit-cp */
  OPT_fipa_cp = 1357,                        /* -fipa-cp */
  /* OPT_fipa_cp_alignment = 1358, */        /* -fipa-cp-alignment */
  OPT_fipa_cp_clone = 1359,                  /* -fipa-cp-clone */
  OPT_fipa_icf = 1360,                       /* -fipa-icf */
  OPT_fipa_icf_functions = 1361,             /* -fipa-icf-functions */
  OPT_fipa_icf_variables = 1362,             /* -fipa-icf-variables */
  /* OPT_fipa_matrix_reorg = 1363, */        /* -fipa-matrix-reorg */
  OPT_fipa_modref = 1364,                    /* -fipa-modref */
  OPT_fipa_profile = 1365,                   /* -fipa-profile */
  OPT_fipa_pta = 1366,                       /* -fipa-pta */
  OPT_fipa_pure_const = 1367,                /* -fipa-pure-const */
  OPT_fipa_ra = 1368,                        /* -fipa-ra */
  OPT_fipa_reference = 1369,                 /* -fipa-reference */
  OPT_fipa_reference_addressable = 1370,     /* -fipa-reference-addressable */
  OPT_fipa_sra = 1371,                       /* -fipa-sra */
  OPT_fipa_stack_alignment = 1372,           /* -fipa-stack-alignment */
  OPT_fipa_strict_aliasing = 1373,           /* -fipa-strict-aliasing */
  /* OPT_fipa_struct_reorg = 1374, */        /* -fipa-struct-reorg */
  OPT_fipa_vrp = 1375,                       /* -fipa-vrp */
  OPT_fira_algorithm_ = 1376,                /* -fira-algorithm= */
  OPT_fira_hoist_pressure = 1377,            /* -fira-hoist-pressure */
  OPT_fira_loop_pressure = 1378,             /* -fira-loop-pressure */
  OPT_fira_region_ = 1379,                   /* -fira-region= */
  OPT_fira_share_save_slots = 1380,          /* -fira-share-save-slots */
  OPT_fira_share_spill_slots = 1381,         /* -fira-share-spill-slots */
  OPT_fira_verbose_ = 1382,                  /* -fira-verbose= */
  OPT_fiso = 1383,                           /* -fiso */
  OPT_fisolate_erroneous_paths_attribute = 1384,/* -fisolate-erroneous-paths-attribute */
  OPT_fisolate_erroneous_paths_dereference = 1385,/* -fisolate-erroneous-paths-dereference */
  OPT_fivar_visibility_ = 1386,              /* -fivar-visibility= */
  OPT_fivopts = 1387,                        /* -fivopts */
  OPT_fjump_tables = 1388,                   /* -fjump-tables */
  OPT_fkeep_gc_roots_live = 1389,            /* -fkeep-gc-roots-live */
  OPT_fkeep_inline_dllexport = 1390,         /* -fkeep-inline-dllexport */
  OPT_fkeep_inline_functions = 1391,         /* -fkeep-inline-functions */
  OPT_fkeep_static_consts = 1392,            /* -fkeep-static-consts */
  OPT_fkeep_static_functions = 1393,         /* -fkeep-static-functions */
  OPT_flabels_ok = 1394,                     /* -flabels-ok */
  OPT_flang_info_include_translate = 1395,   /* -flang-info-include-translate */
  OPT_flang_info_include_translate_not = 1396,/* -flang-info-include-translate-not */
  OPT_flang_info_include_translate_ = 1397,  /* -flang-info-include-translate= */
  OPT_flang_info_module_cmi = 1398,          /* -flang-info-module-cmi */
  OPT_flang_info_module_cmi_ = 1399,         /* -flang-info-module-cmi= */
  OPT_flarge_source_files = 1400,            /* -flarge-source-files */
  OPT_flax_vector_conversions = 1401,        /* -flax-vector-conversions */
  OPT_fleading_underscore = 1402,            /* -fleading-underscore */
  OPT_flibs_ = 1403,                         /* -flibs= */
  OPT_flifetime_dse = 1404,                  /* -flifetime-dse */
  OPT_flifetime_dse_ = 1405,                 /* -flifetime-dse= */
  OPT_flimit_function_alignment = 1406,      /* -flimit-function-alignment */
  OPT_flinker_output_ = 1407,                /* -flinker-output= */
  /* OPT_flive_patching = 1408, */           /* -flive-patching */
  OPT_flive_patching_ = 1409,                /* -flive-patching= */
  OPT_flive_range_shrinkage = 1410,          /* -flive-range-shrinkage */
  OPT_flocal_ivars = 1411,                   /* -flocal-ivars */
  OPT_flocation_ = 1412,                     /* -flocation= */
  /* OPT_floop_block = 1413, */              /* -floop-block */
  /* OPT_floop_flatten = 1414, */            /* -floop-flatten */
  OPT_floop_interchange = 1415,              /* -floop-interchange */
  OPT_floop_nest_optimize = 1416,            /* -floop-nest-optimize */
  /* OPT_floop_optimize = 1417, */           /* -floop-optimize */
  OPT_floop_parallelize_all = 1418,          /* -floop-parallelize-all */
  /* OPT_floop_strip_mine = 1419, */         /* -floop-strip-mine */
  OPT_floop_unroll_and_jam = 1420,           /* -floop-unroll-and-jam */
  OPT_flra_remat = 1421,                     /* -flra-remat */
  OPT_flto = 1422,                           /* -flto */
  OPT_flto_compression_level_ = 1423,        /* -flto-compression-level= */
  /* OPT_flto_odr_type_merging = 1424, */    /* -flto-odr-type-merging */
  OPT_flto_partition_ = 1425,                /* -flto-partition= */
  OPT_flto_report = 1426,                    /* -flto-report */
  OPT_flto_report_wpa = 1427,                /* -flto-report-wpa */
  OPT_flto_ = 1428,                          /* -flto= */
  OPT_fltrans = 1429,                        /* -fltrans */
  OPT_fltrans_output_list_ = 1430,           /* -fltrans-output-list= */
  OPT_fm2_g = 1431,                          /* -fm2-g */
  OPT_fm2_lower_case = 1432,                 /* -fm2-lower-case */
  OPT_fm2_pathname_ = 1433,                  /* -fm2-pathname= */
  OPT_fm2_pathnameI = 1434,                  /* -fm2-pathnameI */
  OPT_fm2_plugin = 1435,                     /* -fm2-plugin */
  OPT_fm2_prefix_ = 1436,                    /* -fm2-prefix= */
  OPT_fm2_statistics = 1437,                 /* -fm2-statistics */
  OPT_fm2_strict_type = 1438,                /* -fm2-strict-type */
  OPT_fm2_whole_program = 1439,              /* -fm2-whole-program */
  OPT_fmacro_prefix_map_ = 1440,             /* -fmacro-prefix-map= */
  OPT_fmain = 1441,                          /* -fmain */
  OPT_fmath_errno = 1442,                    /* -fmath-errno */
  OPT_fmax_array_constructor_ = 1443,        /* -fmax-array-constructor= */
  OPT_fmax_errors_ = 1444,                   /* -fmax-errors= */
  OPT_fmax_identifier_length_ = 1445,        /* -fmax-identifier-length= */
  OPT_fmax_include_depth_ = 1446,            /* -fmax-include-depth= */
  OPT_fmax_stack_var_size_ = 1447,           /* -fmax-stack-var-size= */
  OPT_fmax_subrecord_length_ = 1448,         /* -fmax-subrecord-length= */
  OPT_fmem_report = 1449,                    /* -fmem-report */
  OPT_fmem_report_wpa = 1450,                /* -fmem-report-wpa */
  OPT_fmerge_all_constants = 1451,           /* -fmerge-all-constants */
  OPT_fmerge_constants = 1452,               /* -fmerge-constants */
  OPT_fmerge_debug_strings = 1453,           /* -fmerge-debug-strings */
  OPT_fmessage_length_ = 1454,               /* -fmessage-length= */
  OPT_fmin_function_alignment_ = 1455,       /* -fmin-function-alignment= */
  OPT_fmod_ = 1456,                          /* -fmod= */
  OPT_fmodule_file_ = 1457,                  /* -fmodule-file= */
  OPT_fmodule_header = 1458,                 /* -fmodule-header */
  OPT_fmodule_header_ = 1459,                /* -fmodule-header= */
  OPT_fmodule_implicit_inline = 1460,        /* -fmodule-implicit-inline */
  OPT_fmodule_lazy = 1461,                   /* -fmodule-lazy */
  OPT_fmodule_mapper_ = 1462,                /* -fmodule-mapper= */
  OPT_fmodule_only = 1463,                   /* -fmodule-only */
  OPT_fmodule_private = 1464,                /* -fmodule-private */
  OPT_fmodule_version_ignore = 1465,         /* -fmodule-version-ignore */
  OPT_fmoduleinfo = 1466,                    /* -fmoduleinfo */
  OPT_fmodules_ts = 1467,                    /* -fmodules-ts */
  OPT_fmodulo_sched = 1468,                  /* -fmodulo-sched */
  OPT_fmodulo_sched_allow_regmoves = 1469,   /* -fmodulo-sched-allow-regmoves */
  OPT_fmove_loop_invariants = 1470,          /* -fmove-loop-invariants */
  OPT_fmove_loop_stores = 1471,              /* -fmove-loop-stores */
  OPT_fms_extensions = 1472,                 /* -fms-extensions */
  OPT_fmudflap = 1473,                       /* -fmudflap */
  OPT_fmudflapir = 1474,                     /* -fmudflapir */
  OPT_fmudflapth = 1475,                     /* -fmudflapth */
  OPT_fmultiflags = 1476,                    /* -fmultiflags */
  OPT_fname_mangling_version_ = 1477,        /* -fname-mangling-version- */
  OPT_fnew_abi = 1478,                       /* -fnew-abi */
  OPT_fnew_inheriting_ctors = 1479,          /* -fnew-inheriting-ctors */
  OPT_fnew_ttp_matching = 1480,              /* -fnew-ttp-matching */
  OPT_fnext_runtime = 1481,                  /* -fnext-runtime */
  OPT_fnil = 1482,                           /* -fnil */
  OPT_fnil_receivers = 1483,                 /* -fnil-receivers */
  OPT_fno_inline_stringops = 1484,           /* -fno-inline-stringops */
  OPT_fno_modules = 1485,                    /* -fno-modules */
  OPT_fnon_call_exceptions = 1486,           /* -fnon-call-exceptions */
  OPT_fnonansi_builtins = 1487,              /* -fnonansi-builtins */
  OPT_fnonnull_objects = 1488,               /* -fnonnull-objects */
  OPT_fnothrow_opt = 1489,                   /* -fnothrow-opt */
  OPT_fobjc_abi_version_ = 1490,             /* -fobjc-abi-version= */
  OPT_fobjc_call_cxx_cdtors = 1491,          /* -fobjc-call-cxx-cdtors */
  OPT_fobjc_direct_dispatch = 1492,          /* -fobjc-direct-dispatch */
  OPT_fobjc_exceptions = 1493,               /* -fobjc-exceptions */
  OPT_fobjc_gc = 1494,                       /* -fobjc-gc */
  OPT_fobjc_nilcheck = 1495,                 /* -fobjc-nilcheck */
  OPT_fobjc_sjlj_exceptions = 1496,          /* -fobjc-sjlj-exceptions */
  OPT_fobjc_std_objc1 = 1497,                /* -fobjc-std=objc1 */
  OPT_foffload_abi_ = 1498,                  /* -foffload-abi= */
  OPT_foffload_options_ = 1499,              /* -foffload-options= */
  OPT_foffload_ = 1500,                      /* -foffload= */
  OPT_fomit_frame_pointer = 1501,            /* -fomit-frame-pointer */
  OPT_fonly_ = 1502,                         /* -fonly= */
  OPT_fopenacc = 1503,                       /* -fopenacc */
  OPT_fopenacc_dim_ = 1504,                  /* -fopenacc-dim= */
  OPT_fopenmp = 1505,                        /* -fopenmp */
  OPT_fopenmp_allocators = 1506,             /* -fopenmp-allocators */
  OPT_fopenmp_simd = 1507,                   /* -fopenmp-simd */
  /* OPT_fopenmp_target_simd_clone = 1508, *//* -fopenmp-target-simd-clone */
  OPT_fopenmp_target_simd_clone_ = 1509,     /* -fopenmp-target-simd-clone= */
  OPT_foperator_names = 1510,                /* -foperator-names */
  OPT_fopt_info = 1511,                      /* -fopt-info */
  OPT_fopt_info_ = 1512,                     /* -fopt-info- */
  /* OPT_foptimize_register_move = 1513, */  /* -foptimize-register-move */
  OPT_foptimize_sibling_calls = 1514,        /* -foptimize-sibling-calls */
  OPT_foptimize_strlen = 1515,               /* -foptimize-strlen */
  /* OPT_foptional_diags = 1516, */          /* -foptional-diags */
  OPT_fpack_derived = 1517,                  /* -fpack-derived */
  OPT_fpack_struct = 1518,                   /* -fpack-struct */
  OPT_fpack_struct_ = 1519,                  /* -fpack-struct= */
  OPT_fpad_source = 1520,                    /* -fpad-source */
  OPT_fpartial_inlining = 1521,              /* -fpartial-inlining */
  OPT_fpatchable_function_entry_ = 1522,     /* -fpatchable-function-entry= */
  OPT_fpcc_struct_return = 1523,             /* -fpcc-struct-return */
  OPT_fpch_deps = 1524,                      /* -fpch-deps */
  OPT_fpch_preprocess = 1525,                /* -fpch-preprocess */
  OPT_fpeel_loops = 1526,                    /* -fpeel-loops */
  OPT_fpeephole = 1527,                      /* -fpeephole */
  OPT_fpeephole2 = 1528,                     /* -fpeephole2 */
  OPT_fpermissive = 1529,                    /* -fpermissive */
  OPT_fpermitted_flt_eval_methods_ = 1530,   /* -fpermitted-flt-eval-methods= */
  OPT_fpic = 1531,                           /* -fpic */
  OPT_fpie = 1532,                           /* -fpie */
  OPT_fpim = 1533,                           /* -fpim */
  OPT_fpim2 = 1534,                          /* -fpim2 */
  OPT_fpim3 = 1535,                          /* -fpim3 */
  OPT_fpim4 = 1536,                          /* -fpim4 */
  OPT_fplan9_extensions = 1537,              /* -fplan9-extensions */
  OPT_fplt = 1538,                           /* -fplt */
  OPT_fplugin_arg_ = 1539,                   /* -fplugin-arg- */
  OPT_fplugin_ = 1540,                       /* -fplugin= */
  OPT_fpositive_mod_floor_div = 1541,        /* -fpositive-mod-floor-div */
  OPT_fpost_ipa_mem_report = 1542,           /* -fpost-ipa-mem-report */
  OPT_fpostconditions = 1543,                /* -fpostconditions */
  OPT_fpre_include_ = 1544,                  /* -fpre-include= */
  OPT_fpre_ipa_mem_report = 1545,            /* -fpre-ipa-mem-report */
  OPT_fpreconditions = 1546,                 /* -fpreconditions */
  OPT_fpredictive_commoning = 1547,          /* -fpredictive-commoning */
  OPT_fprefetch_loop_arrays = 1548,          /* -fprefetch-loop-arrays */
  OPT_fpreprocessed = 1549,                  /* -fpreprocessed */
  OPT_fpretty_templates = 1550,              /* -fpretty-templates */
  OPT_fpreview_all = 1551,                   /* -fpreview=all */
  OPT_fpreview_bitfields = 1552,             /* -fpreview=bitfields */
  OPT_fpreview_dip1000 = 1553,               /* -fpreview=dip1000 */
  OPT_fpreview_dip1008 = 1554,               /* -fpreview=dip1008 */
  OPT_fpreview_dip1021 = 1555,               /* -fpreview=dip1021 */
  OPT_fpreview_dtorfields = 1556,            /* -fpreview=dtorfields */
  OPT_fpreview_fieldwise = 1557,             /* -fpreview=fieldwise */
  OPT_fpreview_fixaliasthis = 1558,          /* -fpreview=fixaliasthis */
  OPT_fpreview_fiximmutableconv = 1559,      /* -fpreview=fiximmutableconv */
  OPT_fpreview_in = 1560,                    /* -fpreview=in */
  OPT_fpreview_inclusiveincontracts = 1561,  /* -fpreview=inclusiveincontracts */
  OPT_fpreview_nosharedaccess = 1562,        /* -fpreview=nosharedaccess */
  OPT_fpreview_rvaluerefparam = 1563,        /* -fpreview=rvaluerefparam */
  OPT_fpreview_systemvariables = 1564,       /* -fpreview=systemvariables */
  OPT_fprintf_return_value = 1565,           /* -fprintf-return-value */
  OPT_fprofile = 1566,                       /* -fprofile */
  OPT_fprofile_abs_path = 1567,              /* -fprofile-abs-path */
  OPT_fprofile_arcs = 1568,                  /* -fprofile-arcs */
  OPT_fprofile_correction = 1569,            /* -fprofile-correction */
  OPT_fprofile_dir_ = 1570,                  /* -fprofile-dir= */
  OPT_fprofile_exclude_files_ = 1571,        /* -fprofile-exclude-files= */
  OPT_fprofile_filter_files_ = 1572,         /* -fprofile-filter-files= */
  OPT_fprofile_generate = 1573,              /* -fprofile-generate */
  OPT_fprofile_generate_ = 1574,             /* -fprofile-generate= */
  OPT_fprofile_info_section = 1575,          /* -fprofile-info-section */
  OPT_fprofile_info_section_ = 1576,         /* -fprofile-info-section= */
  OPT_fprofile_note_ = 1577,                 /* -fprofile-note= */
  OPT_fprofile_partial_training = 1578,      /* -fprofile-partial-training */
  OPT_fprofile_prefix_map_ = 1579,           /* -fprofile-prefix-map= */
  OPT_fprofile_prefix_path_ = 1580,          /* -fprofile-prefix-path= */
  OPT_fprofile_reorder_functions = 1581,     /* -fprofile-reorder-functions */
  OPT_fprofile_report = 1582,                /* -fprofile-report */
  OPT_fprofile_reproducible_ = 1583,         /* -fprofile-reproducible= */
  OPT_fprofile_update_ = 1584,               /* -fprofile-update= */
  OPT_fprofile_use = 1585,                   /* -fprofile-use */
  OPT_fprofile_use_ = 1586,                  /* -fprofile-use= */
  OPT_fprofile_values = 1587,                /* -fprofile-values */
  OPT_fprotect_parens = 1588,                /* -fprotect-parens */
  OPT_fpthread = 1589,                       /* -fpthread */
  OPT_fq = 1590,                             /* -fq */
  OPT_frandom_seed = 1591,                   /* -frandom-seed */
  OPT_frandom_seed_ = 1592,                  /* -frandom-seed= */
  OPT_frange = 1593,                         /* -frange */
  OPT_frange_check = 1594,                   /* -frange-check */
  OPT_freal_4_real_10 = 1595,                /* -freal-4-real-10 */
  OPT_freal_4_real_16 = 1596,                /* -freal-4-real-16 */
  OPT_freal_4_real_8 = 1597,                 /* -freal-4-real-8 */
  OPT_freal_8_real_10 = 1598,                /* -freal-8-real-10 */
  OPT_freal_8_real_16 = 1599,                /* -freal-8-real-16 */
  OPT_freal_8_real_4 = 1600,                 /* -freal-8-real-4 */
  OPT_frealloc_lhs = 1601,                   /* -frealloc-lhs */
  OPT_freciprocal_math = 1602,               /* -freciprocal-math */
  OPT_frecord_gcc_switches = 1603,           /* -frecord-gcc-switches */
  OPT_frecord_marker_4 = 1604,               /* -frecord-marker=4 */
  OPT_frecord_marker_8 = 1605,               /* -frecord-marker=8 */
  OPT_frecursive = 1606,                     /* -frecursive */
  OPT_free = 1607,                           /* -free */
  OPT_freg_struct_return = 1608,             /* -freg-struct-return */
  /* OPT_fregmove = 1609, */                 /* -fregmove */
  OPT_frelease = 1610,                       /* -frelease */
  OPT_frename_registers = 1611,              /* -frename-registers */
  OPT_freorder_blocks = 1612,                /* -freorder-blocks */
  OPT_freorder_blocks_algorithm_ = 1613,     /* -freorder-blocks-algorithm= */
  OPT_freorder_blocks_and_partition = 1614,  /* -freorder-blocks-and-partition */
  OPT_freorder_functions = 1615,             /* -freorder-functions */
  OPT_frepack_arrays = 1616,                 /* -frepack-arrays */
  OPT_freplace_objc_classes = 1617,          /* -freplace-objc-classes */
  OPT_frepo = 1618,                          /* -frepo */
  OPT_freport_bug = 1619,                    /* -freport-bug */
  OPT_frequire_return_statement = 1620,      /* -frequire-return-statement */
  OPT_frerun_cse_after_loop = 1621,          /* -frerun-cse-after-loop */
  /* OPT_frerun_loop_opt = 1622, */          /* -frerun-loop-opt */
  OPT_freschedule_modulo_scheduled_loops = 1623,/* -freschedule-modulo-scheduled-loops */
  OPT_fresolution_ = 1624,                   /* -fresolution= */
  OPT_freturn = 1625,                        /* -freturn */
  OPT_frevert_all = 1626,                    /* -frevert=all */
  OPT_frevert_dip1000 = 1627,                /* -frevert=dip1000 */
  OPT_frevert_dtorfields = 1628,             /* -frevert=dtorfields */
  OPT_frevert_intpromote = 1629,             /* -frevert=intpromote */
  OPT_frounding_math = 1630,                 /* -frounding-math */
  OPT_frtti = 1631,                          /* -frtti */
  OPT_fruntime_modules_ = 1632,              /* -fruntime-modules= */
  OPT_frust_borrowcheck = 1633,              /* -frust-borrowcheck */
  OPT_frust_cfg_ = 1634,                     /* -frust-cfg= */
  OPT_frust_compile_until_ = 1635,           /* -frust-compile-until= */
  OPT_frust_crate_type_ = 1636,              /* -frust-crate-type= */
  OPT_frust_crate_ = 1637,                   /* -frust-crate= */
  OPT_frust_debug = 1638,                    /* -frust-debug */
  OPT_frust_dump_ = 1639,                    /* -frust-dump- */
  OPT_frust_edition_ = 1640,                 /* -frust-edition= */
  OPT_frust_embed_metadata = 1641,           /* -frust-embed-metadata */
  OPT_frust_extern_ = 1642,                  /* -frust-extern= */
  OPT_frust_incomplete_and_experimental_compiler_do_not_use = 1643,/* -frust-incomplete-and-experimental-compiler-do-not-use */
  OPT_frust_mangling_ = 1644,                /* -frust-mangling= */
  OPT_frust_max_recursion_depth_ = 1645,     /* -frust-max-recursion-depth= */
  OPT_frust_metadata_output_ = 1646,         /* -frust-metadata-output= */
  OPT_frust_name_resolution_2_0 = 1647,      /* -frust-name-resolution-2.0 */
  OPT_fsanitize_address_use_after_scope = 1648,/* -fsanitize-address-use-after-scope */
  OPT_fsanitize_coverage_ = 1649,            /* -fsanitize-coverage= */
  OPT_fsanitize_recover = 1650,              /* -fsanitize-recover */
  OPT_fsanitize_recover_ = 1651,             /* -fsanitize-recover= */
  OPT_fsanitize_sections_ = 1652,            /* -fsanitize-sections= */
  OPT_fsanitize_trap = 1653,                 /* -fsanitize-trap */
  OPT_fsanitize_trap_ = 1654,                /* -fsanitize-trap= */
  /* OPT_fsanitize_undefined_trap_on_error = 1655, *//* -fsanitize-undefined-trap-on-error */
  OPT_fsanitize_ = 1656,                     /* -fsanitize= */
  OPT_fsave_mixins_ = 1657,                  /* -fsave-mixins= */
  OPT_fsave_optimization_record = 1658,      /* -fsave-optimization-record */
  OPT_fscaffold_c = 1659,                    /* -fscaffold-c */
  OPT_fscaffold_c__ = 1660,                  /* -fscaffold-c++ */
  OPT_fscaffold_dynamic = 1661,              /* -fscaffold-dynamic */
  OPT_fscaffold_main = 1662,                 /* -fscaffold-main */
  OPT_fscaffold_static = 1663,               /* -fscaffold-static */
  OPT_fsched_critical_path_heuristic = 1664, /* -fsched-critical-path-heuristic */
  OPT_fsched_dep_count_heuristic = 1665,     /* -fsched-dep-count-heuristic */
  OPT_fsched_group_heuristic = 1666,         /* -fsched-group-heuristic */
  OPT_fsched_interblock = 1667,              /* -fsched-interblock */
  OPT_fsched_last_insn_heuristic = 1668,     /* -fsched-last-insn-heuristic */
  OPT_fsched_pressure = 1669,                /* -fsched-pressure */
  OPT_fsched_rank_heuristic = 1670,          /* -fsched-rank-heuristic */
  OPT_fsched_spec = 1671,                    /* -fsched-spec */
  OPT_fsched_spec_insn_heuristic = 1672,     /* -fsched-spec-insn-heuristic */
  OPT_fsched_spec_load = 1673,               /* -fsched-spec-load */
  OPT_fsched_spec_load_dangerous = 1674,     /* -fsched-spec-load-dangerous */
  OPT_fsched_stalled_insns = 1675,           /* -fsched-stalled-insns */
  OPT_fsched_stalled_insns_dep = 1676,       /* -fsched-stalled-insns-dep */
  OPT_fsched_stalled_insns_dep_ = 1677,      /* -fsched-stalled-insns-dep= */
  OPT_fsched_stalled_insns_ = 1678,          /* -fsched-stalled-insns= */
  OPT_fsched_verbose_ = 1679,                /* -fsched-verbose= */
  OPT_fsched2_use_superblocks = 1680,        /* -fsched2-use-superblocks */
  /* OPT_fsched2_use_traces = 1681, */       /* -fsched2-use-traces */
  OPT_fschedule_fusion = 1682,               /* -fschedule-fusion */
  OPT_fschedule_insns = 1683,                /* -fschedule-insns */
  OPT_fschedule_insns2 = 1684,               /* -fschedule-insns2 */
  OPT_fsecond_underscore = 1685,             /* -fsecond-underscore */
  OPT_fsection_anchors = 1686,               /* -fsection-anchors */
  /* OPT_fsee = 1687, */                     /* -fsee */
  OPT_fsel_sched_pipelining = 1688,          /* -fsel-sched-pipelining */
  OPT_fsel_sched_pipelining_outer_loops = 1689,/* -fsel-sched-pipelining-outer-loops */
  OPT_fsel_sched_reschedule_pipelined = 1690,/* -fsel-sched-reschedule-pipelined */
  OPT_fselective_scheduling = 1691,          /* -fselective-scheduling */
  OPT_fselective_scheduling2 = 1692,         /* -fselective-scheduling2 */
  OPT_fself_test_ = 1693,                    /* -fself-test= */
  OPT_fsemantic_interposition = 1694,        /* -fsemantic-interposition */
  OPT_fshared = 1695,                        /* -fshared */
  OPT_fshort_enums = 1696,                   /* -fshort-enums */
  OPT_fshort_wchar = 1697,                   /* -fshort-wchar */
  OPT_fshow_column = 1698,                   /* -fshow-column */
  OPT_fshrink_wrap = 1699,                   /* -fshrink-wrap */
  OPT_fshrink_wrap_separate = 1700,          /* -fshrink-wrap-separate */
  OPT_fsign_zero = 1701,                     /* -fsign-zero */
  OPT_fsignaling_nans = 1702,                /* -fsignaling-nans */
  OPT_fsigned_bitfields = 1703,              /* -fsigned-bitfields */
  OPT_fsigned_char = 1704,                   /* -fsigned-char */
  OPT_fsigned_zeros = 1705,                  /* -fsigned-zeros */
  OPT_fsimd_cost_model_ = 1706,              /* -fsimd-cost-model= */
  OPT_fsingle_precision_constant = 1707,     /* -fsingle-precision-constant */
  OPT_fsized_deallocation = 1708,            /* -fsized-deallocation */
  OPT_fsoft_check_all = 1709,                /* -fsoft-check-all */
  OPT_fsources = 1710,                       /* -fsources */
  OPT_fsplit_ivs_in_unroller = 1711,         /* -fsplit-ivs-in-unroller */
  OPT_fsplit_loops = 1712,                   /* -fsplit-loops */
  OPT_fsplit_paths = 1713,                   /* -fsplit-paths */
  OPT_fsplit_stack = 1714,                   /* -fsplit-stack */
  OPT_fsplit_wide_types = 1715,              /* -fsplit-wide-types */
  OPT_fsplit_wide_types_early = 1716,        /* -fsplit-wide-types-early */
  OPT_fsquangle = 1717,                      /* -fsquangle */
  OPT_fssa_backprop = 1718,                  /* -fssa-backprop */
  OPT_fssa_phiopt = 1719,                    /* -fssa-phiopt */
  OPT_fsso_struct_ = 1720,                   /* -fsso-struct= */
  OPT_fstack_arrays = 1721,                  /* -fstack-arrays */
  /* OPT_fstack_check = 1722, */             /* -fstack-check */
  OPT_fstack_check_ = 1723,                  /* -fstack-check= */
  OPT_fstack_clash_protection = 1724,        /* -fstack-clash-protection */
  OPT_fstack_limit = 1725,                   /* -fstack-limit */
  OPT_fstack_limit_register_ = 1726,         /* -fstack-limit-register= */
  OPT_fstack_limit_symbol_ = 1727,           /* -fstack-limit-symbol= */
  OPT_fstack_protector = 1728,               /* -fstack-protector */
  OPT_fstack_protector_all = 1729,           /* -fstack-protector-all */
  OPT_fstack_protector_explicit = 1730,      /* -fstack-protector-explicit */
  OPT_fstack_protector_strong = 1731,        /* -fstack-protector-strong */
  OPT_fstack_reuse_ = 1732,                  /* -fstack-reuse= */
  OPT_fstack_usage = 1733,                   /* -fstack-usage */
  OPT_fstats = 1734,                         /* -fstats */
  OPT_fstdarg_opt = 1735,                    /* -fstdarg-opt */
  OPT_fstore_merging = 1736,                 /* -fstore-merging */
  /* OPT_fstrength_reduce = 1737, */         /* -fstrength-reduce */
  OPT_fstrict_aliasing = 1738,               /* -fstrict-aliasing */
  OPT_fstrict_enums = 1739,                  /* -fstrict-enums */
  /* OPT_fstrict_flex_arrays = 1740, */      /* -fstrict-flex-arrays */
  OPT_fstrict_flex_arrays_ = 1741,           /* -fstrict-flex-arrays= */
  OPT_fstrict_overflow = 1742,               /* -fstrict-overflow */
  OPT_fstrict_prototype = 1743,              /* -fstrict-prototype */
  OPT_fstrict_volatile_bitfields = 1744,     /* -fstrict-volatile-bitfields */
  /* OPT_fstrong_eval_order = 1745, */       /* -fstrong-eval-order */
  OPT_fstrong_eval_order_ = 1746,            /* -fstrong-eval-order= */
  OPT_fstrub_all = 1747,                     /* -fstrub=all */
  OPT_fstrub_at_calls = 1748,                /* -fstrub=at-calls */
  OPT_fstrub_disable = 1749,                 /* -fstrub=disable */
  OPT_fstrub_internal = 1750,                /* -fstrub=internal */
  OPT_fstrub_relaxed = 1751,                 /* -fstrub=relaxed */
  OPT_fstrub_strict = 1752,                  /* -fstrub=strict */
  OPT_fswig = 1753,                          /* -fswig */
  OPT_fswitch_errors = 1754,                 /* -fswitch-errors */
  OPT_fsync_libcalls = 1755,                 /* -fsync-libcalls */
  OPT_fsyntax_only = 1756,                   /* -fsyntax-only */
  OPT_ftabstop_ = 1757,                      /* -ftabstop= */
  /* OPT_ftail_call_workaround = 1758, */    /* -ftail-call-workaround */
  OPT_ftail_call_workaround_ = 1759,         /* -ftail-call-workaround= */
  /* OPT_ftarget_help = 1760, */             /* -ftarget-help */
  OPT_ftemplate_backtrace_limit_ = 1761,     /* -ftemplate-backtrace-limit= */
  /* OPT_ftemplate_depth_ = 1762, */         /* -ftemplate-depth- */
  OPT_ftemplate_depth_ = 1763,               /* -ftemplate-depth= */
  OPT_ftest_coverage = 1764,                 /* -ftest-coverage */
  OPT_ftest_forall_temp = 1765,              /* -ftest-forall-temp */
  OPT_fthis_is_variable = 1766,              /* -fthis-is-variable */
  OPT_fthread_jumps = 1767,                  /* -fthread-jumps */
  OPT_fthreadsafe_statics = 1768,            /* -fthreadsafe-statics */
  OPT_ftime_report = 1769,                   /* -ftime-report */
  OPT_ftime_report_details = 1770,           /* -ftime-report-details */
  OPT_ftls_model_ = 1771,                    /* -ftls-model= */
  OPT_ftoplevel_reorder = 1772,              /* -ftoplevel-reorder */
  OPT_ftracer = 1773,                        /* -ftracer */
  OPT_ftrack_macro_expansion = 1774,         /* -ftrack-macro-expansion */
  OPT_ftrack_macro_expansion_ = 1775,        /* -ftrack-macro-expansion= */
  OPT_ftrampoline_impl_ = 1776,              /* -ftrampoline-impl= */
  OPT_ftrampolines = 1777,                   /* -ftrampolines */
  OPT_ftransition_all = 1778,                /* -ftransition=all */
  OPT_ftransition_field = 1779,              /* -ftransition=field */
  OPT_ftransition_in = 1780,                 /* -ftransition=in */
  OPT_ftransition_nogc = 1781,               /* -ftransition=nogc */
  OPT_ftransition_templates = 1782,          /* -ftransition=templates */
  OPT_ftransition_tls = 1783,                /* -ftransition=tls */
  OPT_ftrapping_math = 1784,                 /* -ftrapping-math */
  OPT_ftrapv = 1785,                         /* -ftrapv */
  OPT_ftree_bit_ccp = 1786,                  /* -ftree-bit-ccp */
  OPT_ftree_builtin_call_dce = 1787,         /* -ftree-builtin-call-dce */
  OPT_ftree_ccp = 1788,                      /* -ftree-ccp */
  OPT_ftree_ch = 1789,                       /* -ftree-ch */
  /* OPT_ftree_coalesce_inlined_vars = 1790, *//* -ftree-coalesce-inlined-vars */
  OPT_ftree_coalesce_vars = 1791,            /* -ftree-coalesce-vars */
  OPT_ftree_copy_prop = 1792,                /* -ftree-copy-prop */
  /* OPT_ftree_copyrename = 1793, */         /* -ftree-copyrename */
  OPT_ftree_cselim = 1794,                   /* -ftree-cselim */
  OPT_ftree_dce = 1795,                      /* -ftree-dce */
  OPT_ftree_dominator_opts = 1796,           /* -ftree-dominator-opts */
  OPT_ftree_dse = 1797,                      /* -ftree-dse */
  OPT_ftree_forwprop = 1798,                 /* -ftree-forwprop */
  OPT_ftree_fre = 1799,                      /* -ftree-fre */
  OPT_ftree_loop_distribute_patterns = 1800, /* -ftree-loop-distribute-patterns */
  OPT_ftree_loop_distribution = 1801,        /* -ftree-loop-distribution */
  OPT_ftree_loop_if_convert = 1802,          /* -ftree-loop-if-convert */
  /* OPT_ftree_loop_if_convert_stores = 1803, *//* -ftree-loop-if-convert-stores */
  OPT_ftree_loop_im = 1804,                  /* -ftree-loop-im */
  OPT_ftree_loop_ivcanon = 1805,             /* -ftree-loop-ivcanon */
  /* OPT_ftree_loop_linear = 1806, */        /* -ftree-loop-linear */
  OPT_ftree_loop_optimize = 1807,            /* -ftree-loop-optimize */
  OPT_ftree_loop_vectorize = 1808,           /* -ftree-loop-vectorize */
  OPT_ftree_lrs = 1809,                      /* -ftree-lrs */
  OPT_ftree_parallelize_loops_ = 1810,       /* -ftree-parallelize-loops= */
  OPT_ftree_partial_pre = 1811,              /* -ftree-partial-pre */
  OPT_ftree_phiprop = 1812,                  /* -ftree-phiprop */
  OPT_ftree_pre = 1813,                      /* -ftree-pre */
  OPT_ftree_pta = 1814,                      /* -ftree-pta */
  OPT_ftree_reassoc = 1815,                  /* -ftree-reassoc */
  /* OPT_ftree_salias = 1816, */             /* -ftree-salias */
  OPT_ftree_scev_cprop = 1817,               /* -ftree-scev-cprop */
  OPT_ftree_sink = 1818,                     /* -ftree-sink */
  OPT_ftree_slp_vectorize = 1819,            /* -ftree-slp-vectorize */
  OPT_ftree_slsr = 1820,                     /* -ftree-slsr */
  OPT_ftree_sra = 1821,                      /* -ftree-sra */
  /* OPT_ftree_store_ccp = 1822, */          /* -ftree-store-ccp */
  /* OPT_ftree_store_copy_prop = 1823, */    /* -ftree-store-copy-prop */
  OPT_ftree_switch_conversion = 1824,        /* -ftree-switch-conversion */
  OPT_ftree_tail_merge = 1825,               /* -ftree-tail-merge */
  OPT_ftree_ter = 1826,                      /* -ftree-ter */
  /* OPT_ftree_vect_loop_version = 1827, */  /* -ftree-vect-loop-version */
  OPT_ftree_vectorize = 1828,                /* -ftree-vectorize */
  /* OPT_ftree_vectorizer_verbose_ = 1829, *//* -ftree-vectorizer-verbose= */
  OPT_ftree_vrp = 1830,                      /* -ftree-vrp */
  OPT_ftrivial_auto_var_init_ = 1831,        /* -ftrivial-auto-var-init= */
  OPT_funbounded_by_reference = 1832,        /* -funbounded-by-reference */
  OPT_funconstrained_commons = 1833,         /* -funconstrained-commons */
  OPT_funderscoring = 1834,                  /* -funderscoring */
  OPT_funit_at_a_time = 1835,                /* -funit-at-a-time */
  OPT_funittest = 1836,                      /* -funittest */
  OPT_funreachable_traps = 1837,             /* -funreachable-traps */
  OPT_funroll_all_loops = 1838,              /* -funroll-all-loops */
  OPT_funroll_completely_grow_size = 1839,   /* -funroll-completely-grow-size */
  OPT_funroll_loops = 1840,                  /* -funroll-loops */
  /* OPT_funsafe_loop_optimizations = 1841, *//* -funsafe-loop-optimizations */
  OPT_funsafe_math_optimizations = 1842,     /* -funsafe-math-optimizations */
  OPT_funsigned_bitfields = 1843,            /* -funsigned-bitfields */
  OPT_funsigned_char = 1844,                 /* -funsigned-char */
  OPT_funswitch_loops = 1845,                /* -funswitch-loops */
  OPT_funwind_tables = 1846,                 /* -funwind-tables */
  OPT_fuse_cxa_atexit = 1847,                /* -fuse-cxa-atexit */
  OPT_fuse_cxa_get_exception_ptr = 1848,     /* -fuse-cxa-get-exception-ptr */
  OPT_fuse_ld_bfd = 1849,                    /* -fuse-ld=bfd */
  OPT_fuse_ld_gold = 1850,                   /* -fuse-ld=gold */
  OPT_fuse_ld_lld = 1851,                    /* -fuse-ld=lld */
  OPT_fuse_ld_mold = 1852,                   /* -fuse-ld=mold */
  OPT_fuse_linker_plugin = 1853,             /* -fuse-linker-plugin */
  OPT_fuse_list_ = 1854,                     /* -fuse-list= */
  OPT_fvar_tracking = 1855,                  /* -fvar-tracking */
  OPT_fvar_tracking_assignments = 1856,      /* -fvar-tracking-assignments */
  OPT_fvar_tracking_assignments_toggle = 1857,/* -fvar-tracking-assignments-toggle */
  OPT_fvar_tracking_uninit = 1858,           /* -fvar-tracking-uninit */
  OPT_fvariable_expansion_in_unroller = 1859,/* -fvariable-expansion-in-unroller */
  /* OPT_fvect_cost_model = 1860, */         /* -fvect-cost-model */
  OPT_fvect_cost_model_ = 1861,              /* -fvect-cost-model= */
  OPT_fverbose_asm = 1862,                   /* -fverbose-asm */
  /* OPT_fversion = 1863, */                 /* -fversion */
  OPT_fversion_loops_for_strides = 1864,     /* -fversion-loops-for-strides */
  OPT_fversion_ = 1865,                      /* -fversion= */
  OPT_fvisibility_inlines_hidden = 1866,     /* -fvisibility-inlines-hidden */
  OPT_fvisibility_ms_compat = 1867,          /* -fvisibility-ms-compat */
  OPT_fvisibility_ = 1868,                   /* -fvisibility= */
  OPT_fvpt = 1869,                           /* -fvpt */
  OPT_fvtable_gc = 1870,                     /* -fvtable-gc */
  OPT_fvtable_thunks = 1871,                 /* -fvtable-thunks */
  OPT_fvtable_verify_ = 1872,                /* -fvtable-verify= */
  OPT_fvtv_counts = 1873,                    /* -fvtv-counts */
  OPT_fvtv_debug = 1874,                     /* -fvtv-debug */
  OPT_fweak = 1875,                          /* -fweak */
  OPT_fweak_templates = 1876,                /* -fweak-templates */
  OPT_fweb = 1877,                           /* -fweb */
  /* OPT_fwhole_file = 1878, */              /* -fwhole-file */
  OPT_fwhole_program = 1879,                 /* -fwhole-program */
  OPT_fwholediv = 1880,                      /* -fwholediv */
  OPT_fwholevalue = 1881,                    /* -fwholevalue */
  OPT_fwide_exec_charset_ = 1882,            /* -fwide-exec-charset= */
  OPT_fworking_directory = 1883,             /* -fworking-directory */
  OPT_fwpa = 1884,                           /* -fwpa */
  OPT_fwpa_ = 1885,                          /* -fwpa= */
  OPT_fwrapv = 1886,                         /* -fwrapv */
  OPT_fwrapv_pointer = 1887,                 /* -fwrapv-pointer */
  OPT_fxref = 1888,                          /* -fxref */
  /* OPT_fzee = 1889, */                     /* -fzee */
  OPT_fzero_call_used_regs_ = 1890,          /* -fzero-call-used-regs= */
  OPT_fzero_initialized_in_bss = 1891,       /* -fzero-initialized-in-bss */
  OPT_fzero_link = 1892,                     /* -fzero-link */
  OPT_g = 1893,                              /* -g */
  OPT_gant = 1894,                           /* -gant */
  OPT_gas_loc_support = 1895,                /* -gas-loc-support */
  OPT_gas_locview_support = 1896,            /* -gas-locview-support */
  OPT_gbtf = 1897,                           /* -gbtf */
  OPT_gcodeview = 1898,                      /* -gcodeview */
  OPT_gcoff = 1899,                          /* -gcoff */
  OPT_gcoff1 = 1900,                         /* -gcoff1 */
  OPT_gcoff2 = 1901,                         /* -gcoff2 */
  OPT_gcoff3 = 1902,                         /* -gcoff3 */
  OPT_gcolumn_info = 1903,                   /* -gcolumn-info */
  OPT_gctf = 1904,                           /* -gctf */
  OPT_gdescribe_dies = 1905,                 /* -gdescribe-dies */
  OPT_gdwarf = 1906,                         /* -gdwarf */
  OPT_gdwarf_ = 1907,                        /* -gdwarf- */
  OPT_gdwarf32 = 1908,                       /* -gdwarf32 */
  OPT_gdwarf64 = 1909,                       /* -gdwarf64 */
  OPT_gen_decls = 1910,                      /* -gen-decls */
  OPT_ggdb = 1911,                           /* -ggdb */
  OPT_ggnu_pubnames = 1912,                  /* -ggnu-pubnames */
  OPT_gimple_stats = 1913,                   /* -gimple-stats */
  OPT_ginline_points = 1914,                 /* -ginline-points */
  OPT_ginternal_reset_location_views = 1915, /* -ginternal-reset-location-views */
  OPT_gnat = 1916,                           /* -gnat */
  OPT_gnatO = 1917,                          /* -gnatO */
  OPT_gno_ = 1918,                           /* -gno- */
  OPT_gno_pubnames = 1919,                   /* -gno-pubnames */
  OPT_gpubnames = 1920,                      /* -gpubnames */
  OPT_grecord_gcc_switches = 1921,           /* -grecord-gcc-switches */
  OPT_gsplit_dwarf = 1922,                   /* -gsplit-dwarf */
  OPT_gstabs = 1923,                         /* -gstabs */
  OPT_gstabs_ = 1924,                        /* -gstabs+ */
  OPT_gstatement_frontiers = 1925,           /* -gstatement-frontiers */
  OPT_gstrict_dwarf = 1926,                  /* -gstrict-dwarf */
  OPT_gtoggle = 1927,                        /* -gtoggle */
  OPT_gvariable_location_views = 1928,       /* -gvariable-location-views */
  OPT_gvariable_location_views_incompat5 = 1929,/* -gvariable-location-views=incompat5 */
  OPT_gvms = 1930,                           /* -gvms */
  OPT_gxcoff = 1931,                         /* -gxcoff */
  OPT_gxcoff_ = 1932,                        /* -gxcoff+ */
  OPT_gz = 1933,                             /* -gz */
  OPT_gz_ = 1934,                            /* -gz= */
  OPT_h = 1935,                              /* -h */
  OPT_help = 1936,                           /* -help */
  OPT_idirafter = 1937,                      /* -idirafter */
  OPT_imacros = 1938,                        /* -imacros */
  OPT_imultiarch = 1939,                     /* -imultiarch */
  OPT_imultilib = 1940,                      /* -imultilib */
  OPT_include = 1941,                        /* -include */
  OPT_iplugindir_ = 1942,                    /* -iplugindir= */
  OPT_iprefix = 1943,                        /* -iprefix */
  OPT_iquote = 1944,                         /* -iquote */
  OPT_isysroot = 1945,                       /* -isysroot */
  OPT_isystem = 1946,                        /* -isystem */
  OPT_iwithprefix = 1947,                    /* -iwithprefix */
  OPT_iwithprefixbefore = 1948,              /* -iwithprefixbefore */
  OPT_k8 = 1949,                             /* -k8 */
  OPT_l = 1950,                              /* -l */
  OPT_lang_asm = 1951,                       /* -lang-asm */
  OPT_list = 1952,                           /* -list */
  OPT_mabi_ = 1953,                          /* -mabi= */
  OPT_mabort_on_noreturn = 1954,             /* -mabort-on-noreturn */
  OPT_mandroid = 1955,                       /* -mandroid */
  OPT_mapcs = 1956,                          /* -mapcs */
  OPT_mapcs_frame = 1957,                    /* -mapcs-frame */
  OPT_mapcs_reentrant = 1958,                /* -mapcs-reentrant */
  OPT_mapcs_stack_check = 1959,              /* -mapcs-stack-check */
  OPT_march_ = 1960,                         /* -march= */
  OPT_marm = 1961,                           /* -marm */
  OPT_masm_syntax_unified = 1962,            /* -masm-syntax-unified */
  OPT_mbe32 = 1963,                          /* -mbe32 */
  OPT_mbe8 = 1964,                           /* -mbe8 */
  OPT_mbig_endian = 1965,                    /* -mbig-endian */
  OPT_mbionic = 1966,                        /* -mbionic */
  OPT_mbranch_cost_ = 1967,                  /* -mbranch-cost= */
  OPT_mbranch_protection_ = 1968,            /* -mbranch-protection= */
  OPT_mcallee_super_interworking = 1969,     /* -mcallee-super-interworking */
  OPT_mcaller_super_interworking = 1970,     /* -mcaller-super-interworking */
  OPT_mcmse = 1971,                          /* -mcmse */
  OPT_mcpu_ = 1972,                          /* -mcpu= */
  OPT_mfdpic = 1973,                         /* -mfdpic */
  OPT_mfix_cmse_cve_2021_35465 = 1974,       /* -mfix-cmse-cve-2021-35465 */
  OPT_mfix_cortex_a57_aes_1742098 = 1975,    /* -mfix-cortex-a57-aes-1742098 */
  /* OPT_mfix_cortex_a72_aes_1655431 = 1976, *//* -mfix-cortex-a72-aes-1655431 */
  OPT_mfix_cortex_m3_ldrd = 1977,            /* -mfix-cortex-m3-ldrd */
  OPT_mflip_thumb = 1978,                    /* -mflip-thumb */
  OPT_mfloat_abi_ = 1979,                    /* -mfloat-abi= */
  OPT_mfp16_format_ = 1980,                  /* -mfp16-format= */
  OPT_mfpu_ = 1981,                          /* -mfpu= */
  OPT_mgeneral_regs_only = 1982,             /* -mgeneral-regs-only */
  OPT_mglibc = 1983,                         /* -mglibc */
  /* OPT_mhard_float = 1984, */              /* -mhard-float */
  OPT_mlibarch_ = 1985,                      /* -mlibarch= */
  OPT_mlittle_endian = 1986,                 /* -mlittle-endian */
  OPT_mlong_calls = 1987,                    /* -mlong-calls */
  OPT_mmusl = 1988,                          /* -mmusl */
  OPT_mneon_for_64bits = 1989,               /* -mneon-for-64bits */
  OPT_mpic_data_is_text_relative = 1990,     /* -mpic-data-is-text-relative */
  OPT_mpic_register_ = 1991,                 /* -mpic-register= */
  OPT_mpoke_function_name = 1992,            /* -mpoke-function-name */
  OPT_mprint_tune_info = 1993,               /* -mprint-tune-info */
  OPT_mpure_code = 1994,                     /* -mpure-code */
  OPT_mrestrict_it = 1995,                   /* -mrestrict-it */
  OPT_msched_prolog = 1996,                  /* -msched-prolog */
  OPT_msingle_pic_base = 1997,               /* -msingle-pic-base */
  OPT_mslow_flash_data = 1998,               /* -mslow-flash-data */
  /* OPT_msoft_float = 1999, */              /* -msoft-float */
  OPT_mstack_protector_guard_offset_ = 2000, /* -mstack-protector-guard-offset= */
  OPT_mstack_protector_guard_ = 2001,        /* -mstack-protector-guard= */
  OPT_mstructure_size_boundary_ = 2002,      /* -mstructure-size-boundary= */
  OPT_mthumb = 2003,                         /* -mthumb */
  OPT_mthumb_interwork = 2004,               /* -mthumb-interwork */
  OPT_mtls_dialect_ = 2005,                  /* -mtls-dialect= */
  OPT_mtp_ = 2006,                           /* -mtp= */
  OPT_mtpcs_frame = 2007,                    /* -mtpcs-frame */
  OPT_mtpcs_leaf_frame = 2008,               /* -mtpcs-leaf-frame */
  OPT_mtune_ = 2009,                         /* -mtune= */
  OPT_muclibc = 2010,                        /* -muclibc */
  OPT_munaligned_access = 2011,              /* -munaligned-access */
  OPT_mvectorize_with_neon_double = 2012,    /* -mvectorize-with-neon-double */
  OPT_mvectorize_with_neon_quad = 2013,      /* -mvectorize-with-neon-quad */
  OPT_mverbose_cost_dump = 2014,             /* -mverbose-cost-dump */
  OPT_mword_relocations = 2015,              /* -mword-relocations */
  OPT_n = 2016,                              /* -n */
  OPT_name_sort = 2017,                      /* -name-sort */
  OPT_no_canonical_prefixes = 2018,          /* -no-canonical-prefixes */
  OPT_no_integrated_cpp = 2019,              /* -no-integrated-cpp */
  OPT_no_pie = 2020,                         /* -no-pie */
  OPT_nocpp = 2021,                          /* -nocpp */
  OPT_nodefaultlibs = 2022,                  /* -nodefaultlibs */
  OPT_nolibc = 2023,                         /* -nolibc */
  OPT_nophoboslib = 2024,                    /* -nophoboslib */
  OPT_nostartfiles = 2025,                   /* -nostartfiles */
  OPT_nostdinc = 2026,                       /* -nostdinc */
  OPT_nostdinc__ = 2027,                     /* -nostdinc++ */
  OPT_nostdlib = 2028,                       /* -nostdlib */
  OPT_nostdlib__ = 2029,                     /* -nostdlib++ */
  OPT_o = 2030,                              /* -o */
  OPT_objects = 2031,                        /* -objects */
  OPT_p = 2032,                              /* -p */
  OPT_pass_exit_codes = 2033,                /* -pass-exit-codes */
  /* OPT_pedantic = 2034, */                 /* -pedantic */
  OPT_pedantic_errors = 2035,                /* -pedantic-errors */
  OPT_pg = 2036,                             /* -pg */
  OPT_pie = 2037,                            /* -pie */
  OPT_pipe = 2038,                           /* -pipe */
  OPT_posix = 2039,                          /* -posix */
  OPT_print_file_name_ = 2040,               /* -print-file-name= */
  OPT_print_libgcc_file_name = 2041,         /* -print-libgcc-file-name */
  OPT_print_multi_directory = 2042,          /* -print-multi-directory */
  OPT_print_multi_lib = 2043,                /* -print-multi-lib */
  OPT_print_multi_os_directory = 2044,       /* -print-multi-os-directory */
  OPT_print_multiarch = 2045,                /* -print-multiarch */
  OPT_print_objc_runtime_info = 2046,        /* -print-objc-runtime-info */
  OPT_print_prog_name_ = 2047,               /* -print-prog-name= */
  OPT_print_search_dirs = 2048,              /* -print-search-dirs */
  OPT_print_sysroot = 2049,                  /* -print-sysroot */
  OPT_print_sysroot_headers_suffix = 2050,   /* -print-sysroot-headers-suffix */
  OPT_print_value = 2051,                    /* -print-value */
  OPT_profile = 2052,                        /* -profile */
  OPT_pthread = 2053,                        /* -pthread */
  OPT_quiet = 2054,                          /* -quiet */
  OPT_r = 2055,                              /* -r */
  OPT_rdynamic = 2056,                       /* -rdynamic */
  OPT_remap = 2057,                          /* -remap */
  OPT_reverse_sort = 2058,                   /* -reverse-sort */
  OPT_s = 2059,                              /* -s */
  OPT_save_temps = 2060,                     /* -save-temps */
  OPT_save_temps_ = 2061,                    /* -save-temps= */
  OPT_shared = 2062,                         /* -shared */
  OPT_shared_libgcc = 2063,                  /* -shared-libgcc */
  OPT_shared_libphobos = 2064,               /* -shared-libphobos */
  OPT_size_sort = 2065,                      /* -size-sort */
  /* OPT_specs = 2066, */                    /* -specs */
  OPT_specs_ = 2067,                         /* -specs= */
  OPT_static = 2068,                         /* -static */
  OPT_static_libasan = 2069,                 /* -static-libasan */
  OPT_static_libgcc = 2070,                  /* -static-libgcc */
  OPT_static_libgfortran = 2071,             /* -static-libgfortran */
  OPT_static_libgm2 = 2072,                  /* -static-libgm2 */
  OPT_static_libgo = 2073,                   /* -static-libgo */
  OPT_static_libhwasan = 2074,               /* -static-libhwasan */
  OPT_static_liblsan = 2075,                 /* -static-liblsan */
  OPT_static_libmpx = 2076,                  /* -static-libmpx */
  OPT_static_libmpxwrappers = 2077,          /* -static-libmpxwrappers */
  OPT_static_libphobos = 2078,               /* -static-libphobos */
  OPT_static_libquadmath = 2079,             /* -static-libquadmath */
  OPT_static_libstdc__ = 2080,               /* -static-libstdc++ */
  OPT_static_libtsan = 2081,                 /* -static-libtsan */
  OPT_static_libubsan = 2082,                /* -static-libubsan */
  OPT_static_pie = 2083,                     /* -static-pie */
  /* OPT_std_c__03 = 2084, */                /* -std=c++03 */
  /* OPT_std_c__0x = 2085, */                /* -std=c++0x */
  OPT_std_c__11 = 2086,                      /* -std=c++11 */
  OPT_std_c__14 = 2087,                      /* -std=c++14 */
  OPT_std_c__17 = 2088,                      /* -std=c++17 */
  /* OPT_std_c__1y = 2089, */                /* -std=c++1y */
  /* OPT_std_c__1z = 2090, */                /* -std=c++1z */
  OPT_std_c__20 = 2091,                      /* -std=c++20 */
  OPT_std_c__23 = 2092,                      /* -std=c++23 */
  OPT_std_c__26 = 2093,                      /* -std=c++26 */
  /* OPT_std_c__2a = 2094, */                /* -std=c++2a */
  /* OPT_std_c__2b = 2095, */                /* -std=c++2b */
  /* OPT_std_c__2c = 2096, */                /* -std=c++2c */
  OPT_std_c__98 = 2097,                      /* -std=c++98 */
  OPT_std_c11 = 2098,                        /* -std=c11 */
  OPT_std_c17 = 2099,                        /* -std=c17 */
  /* OPT_std_c18 = 2100, */                  /* -std=c18 */
  /* OPT_std_c1x = 2101, */                  /* -std=c1x */
  OPT_std_c23 = 2102,                        /* -std=c23 */
  /* OPT_std_c2x = 2103, */                  /* -std=c2x */
  /* OPT_std_c89 = 2104, */                  /* -std=c89 */
  OPT_std_c90 = 2105,                        /* -std=c90 */
  OPT_std_c99 = 2106,                        /* -std=c99 */
  /* OPT_std_c9x = 2107, */                  /* -std=c9x */
  OPT_std_f2003 = 2108,                      /* -std=f2003 */
  OPT_std_f2008 = 2109,                      /* -std=f2008 */
  OPT_std_f2008ts = 2110,                    /* -std=f2008ts */
  OPT_std_f2018 = 2111,                      /* -std=f2018 */
  OPT_std_f2023 = 2112,                      /* -std=f2023 */
  OPT_std_f95 = 2113,                        /* -std=f95 */
  OPT_std_gnu = 2114,                        /* -std=gnu */
  /* OPT_std_gnu__03 = 2115, */              /* -std=gnu++03 */
  /* OPT_std_gnu__0x = 2116, */              /* -std=gnu++0x */
  OPT_std_gnu__11 = 2117,                    /* -std=gnu++11 */
  OPT_std_gnu__14 = 2118,                    /* -std=gnu++14 */
  OPT_std_gnu__17 = 2119,                    /* -std=gnu++17 */
  /* OPT_std_gnu__1y = 2120, */              /* -std=gnu++1y */
  /* OPT_std_gnu__1z = 2121, */              /* -std=gnu++1z */
  OPT_std_gnu__20 = 2122,                    /* -std=gnu++20 */
  OPT_std_gnu__23 = 2123,                    /* -std=gnu++23 */
  OPT_std_gnu__26 = 2124,                    /* -std=gnu++26 */
  /* OPT_std_gnu__2a = 2125, */              /* -std=gnu++2a */
  /* OPT_std_gnu__2b = 2126, */              /* -std=gnu++2b */
  /* OPT_std_gnu__2c = 2127, */              /* -std=gnu++2c */
  OPT_std_gnu__98 = 2128,                    /* -std=gnu++98 */
  OPT_std_gnu11 = 2129,                      /* -std=gnu11 */
  OPT_std_gnu17 = 2130,                      /* -std=gnu17 */
  /* OPT_std_gnu18 = 2131, */                /* -std=gnu18 */
  /* OPT_std_gnu1x = 2132, */                /* -std=gnu1x */
  OPT_std_gnu23 = 2133,                      /* -std=gnu23 */
  /* OPT_std_gnu2x = 2134, */                /* -std=gnu2x */
  /* OPT_std_gnu89 = 2135, */                /* -std=gnu89 */
  OPT_std_gnu90 = 2136,                      /* -std=gnu90 */
  OPT_std_gnu99 = 2137,                      /* -std=gnu99 */
  /* OPT_std_gnu9x = 2138, */                /* -std=gnu9x */
  /* OPT_std_iso9899_1990 = 2139, */         /* -std=iso9899:1990 */
  OPT_std_iso9899_199409 = 2140,             /* -std=iso9899:199409 */
  /* OPT_std_iso9899_1999 = 2141, */         /* -std=iso9899:1999 */
  /* OPT_std_iso9899_199x = 2142, */         /* -std=iso9899:199x */
  /* OPT_std_iso9899_2011 = 2143, */         /* -std=iso9899:2011 */
  /* OPT_std_iso9899_2017 = 2144, */         /* -std=iso9899:2017 */
  /* OPT_std_iso9899_2018 = 2145, */         /* -std=iso9899:2018 */
  /* OPT_std_iso9899_2024 = 2146, */         /* -std=iso9899:2024 */
  OPT_std_legacy = 2147,                     /* -std=legacy */
  OPT_stdlib_ = 2148,                        /* -stdlib= */
  OPT_symbol_ = 2149,                        /* -symbol= */
  OPT_symbolic = 2150,                       /* -symbolic */
  OPT_t = 2151,                              /* -t */
  OPT_time = 2152,                           /* -time */
  OPT_time_ = 2153,                          /* -time= */
  OPT_tno_android_cc = 2154,                 /* -tno-android-cc */
  OPT_tno_android_ld = 2155,                 /* -tno-android-ld */
  OPT_traditional = 2156,                    /* -traditional */
  OPT_traditional_cpp = 2157,                /* -traditional-cpp */
  OPT_tree_stats = 2158,                     /* -tree-stats */
  OPT_trigraphs = 2159,                      /* -trigraphs */
  OPT_type_stats = 2160,                     /* -type-stats */
  OPT_u = 2161,                              /* -u */
  OPT_undef = 2162,                          /* -undef */
  OPT_v = 2163,                              /* -v */
  OPT_version = 2164,                        /* -version */
  OPT_w = 2165,                              /* -w */
  OPT_wrapper = 2166,                        /* -wrapper */
  OPT_x = 2167,                              /* -x */
  OPT_z = 2168,                              /* -z */
  N_OPTS,
  OPT_SPECIAL_unknown,
  OPT_SPECIAL_ignore,
  OPT_SPECIAL_warn_removed,
  OPT_SPECIAL_program_name,
  OPT_SPECIAL_input_file
};

#ifdef GCC_C_COMMON_C
/* Mapping from cpp message reasons to the options that enable them.  */
#include <cpplib.h>
struct cpp_reason_option_codes_t
{
  /* cpplib message reason.  */
  const enum cpp_warning_reason reason;
  /* gcc option that controls this message.  */
  const int option_code;
};

static const struct cpp_reason_option_codes_t cpp_reason_option_codes[] = {
  {CPP_W_BIDIRECTIONAL,                     OPT_Wbidi_chars_},
  {CPP_W_BUILTIN_MACRO_REDEFINED,           OPT_Wbuiltin_macro_redefined},
  {CPP_W_CXX_OPERATOR_NAMES,                OPT_Wc___compat},
  {CPP_W_CXX11_COMPAT,                      OPT_Wc__11_compat},
  {CPP_W_CXX20_COMPAT,                      OPT_Wc__20_compat},
  {CPP_W_C11_C23_COMPAT,                    OPT_Wc11_c23_compat},
  {CPP_W_C90_C99_COMPAT,                    OPT_Wc90_c99_compat},
  {CPP_W_COMMENTS,                          OPT_Wcomment},
  {CPP_W_WARNING_DIRECTIVE,                 OPT_Wcpp},
  {CPP_W_DATE_TIME,                         OPT_Wdate_time},
  {CPP_W_DEPRECATED,                        OPT_Wdeprecated},
  {CPP_W_ENDIF_LABELS,                      OPT_Wendif_labels},
  {CPP_W_EXPANSION_TO_DEFINED,              OPT_Wexpansion_to_defined},
  {CPP_W_INVALID_PCH,                       OPT_Winvalid_pch},
  {CPP_W_INVALID_UTF8,                      OPT_Winvalid_utf8},
  {CPP_W_LITERAL_SUFFIX,                    OPT_Wliteral_suffix},
  {CPP_W_LONG_LONG,                         OPT_Wlong_long},
  {CPP_W_MISSING_INCLUDE_DIRS,              OPT_Wmissing_include_dirs},
  {CPP_W_MULTICHAR,                         OPT_Wmultichar},
  {CPP_W_NORMALIZE,                         OPT_Wnormalized_},
  {CPP_W_PEDANTIC,                          OPT_Wpedantic},
  {CPP_W_TRADITIONAL,                       OPT_Wtraditional},
  {CPP_W_TRIGRAPHS,                         OPT_Wtrigraphs},
  {CPP_W_UNDEF,                             OPT_Wundef},
  {CPP_W_UNICODE,                           OPT_Wunicode},
  {CPP_W_UNUSED_MACROS,                     OPT_Wunused_macros},
  {CPP_W_VARIADIC_MACROS,                   OPT_Wvariadic_macros},
  {CPP_W_NONE,                              0},
};
#endif

#endif /* OPTIONS_H */
